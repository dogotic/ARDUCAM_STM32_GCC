ARM GAS  /tmp/ccDHyNL9.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"user_diskio_spi.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.xchg_spi,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	xchg_spi:
  24              	.LVL0:
  25              	.LFB67:
  26              		.file 1 "FATFS/Target/user_diskio_spi.c"
   1:FATFS/Target/user_diskio_spi.c **** /**
   2:FATFS/Target/user_diskio_spi.c ****  ******************************************************************************
   3:FATFS/Target/user_diskio_spi.c ****   * @file    user_diskio_spi.c
   4:FATFS/Target/user_diskio_spi.c ****   * @brief   This file contains the implementation of the user_diskio_spi FatFs
   5:FATFS/Target/user_diskio_spi.c ****   *          driver.
   6:FATFS/Target/user_diskio_spi.c ****   ******************************************************************************
   7:FATFS/Target/user_diskio_spi.c ****   * Portions copyright (C) 2014, ChaN, all rights reserved.
   8:FATFS/Target/user_diskio_spi.c ****   * Portions copyright (C) 2017, kiwih, all rights reserved.
   9:FATFS/Target/user_diskio_spi.c ****   *
  10:FATFS/Target/user_diskio_spi.c ****   * This software is a free software and there is NO WARRANTY.
  11:FATFS/Target/user_diskio_spi.c ****   * No restriction on use. You can use, modify and redistribute it for
  12:FATFS/Target/user_diskio_spi.c ****   * personal, non-profit or commercial products UNDER YOUR RESPONSIBILITY.
  13:FATFS/Target/user_diskio_spi.c ****   * Redistributions of source code must retain the above copyright notice.
  14:FATFS/Target/user_diskio_spi.c ****   *
  15:FATFS/Target/user_diskio_spi.c ****   ******************************************************************************
  16:FATFS/Target/user_diskio_spi.c ****   */
  17:FATFS/Target/user_diskio_spi.c **** 
  18:FATFS/Target/user_diskio_spi.c **** //This code was ported by kiwih from a copywrited (C) library written by ChaN
  19:FATFS/Target/user_diskio_spi.c **** //available at http://elm-chan.org/fsw/ff/ffsample.zip
  20:FATFS/Target/user_diskio_spi.c **** //(text at http://elm-chan.org/fsw/ff/00index_e.html)
  21:FATFS/Target/user_diskio_spi.c **** 
  22:FATFS/Target/user_diskio_spi.c **** //This file provides the FatFs driver functions and SPI code required to manage
  23:FATFS/Target/user_diskio_spi.c **** //an SPI-connected MMC or compatible SD card with FAT
  24:FATFS/Target/user_diskio_spi.c **** 
  25:FATFS/Target/user_diskio_spi.c **** //It is designed to be wrapped by a cubemx generated user_diskio.c file.
  26:FATFS/Target/user_diskio_spi.c **** 
  27:FATFS/Target/user_diskio_spi.c **** #include "stm32f1xx_hal.h" /* Provide the low-level HAL functions */
  28:FATFS/Target/user_diskio_spi.c **** #include "user_diskio_spi.h"
  29:FATFS/Target/user_diskio_spi.c **** 
  30:FATFS/Target/user_diskio_spi.c **** //Make sure you set #define SD_SPI_HANDLE as some hspix in main.h
  31:FATFS/Target/user_diskio_spi.c **** //Make sure you set #define SD_CS_GPIO_Port as some GPIO port in main.h
  32:FATFS/Target/user_diskio_spi.c **** //Make sure you set #define SD_CS_Pin as some GPIO pin in main.h
ARM GAS  /tmp/ccDHyNL9.s 			page 2


  33:FATFS/Target/user_diskio_spi.c **** extern SPI_HandleTypeDef SD_SPI_HANDLE;
  34:FATFS/Target/user_diskio_spi.c **** 
  35:FATFS/Target/user_diskio_spi.c **** /* Function prototypes */
  36:FATFS/Target/user_diskio_spi.c **** 
  37:FATFS/Target/user_diskio_spi.c **** //(Note that the _256 is used as a mask to clear the prescalar bits as it provides binary 111 in th
  38:FATFS/Target/user_diskio_spi.c **** #define FCLK_SLOW() { MODIFY_REG(SD_SPI_HANDLE.Instance->CR1, SPI_BAUDRATEPRESCALER_256, SPI_BAUDRA
  39:FATFS/Target/user_diskio_spi.c **** #define FCLK_FAST() { MODIFY_REG(SD_SPI_HANDLE.Instance->CR1, SPI_BAUDRATEPRESCALER_256, SPI_BAUDRA
  40:FATFS/Target/user_diskio_spi.c **** 
  41:FATFS/Target/user_diskio_spi.c **** #define CS_HIGH()	{HAL_GPIO_WritePin(SD_CS_GPIO_Port, SD_CS_Pin, GPIO_PIN_SET);}
  42:FATFS/Target/user_diskio_spi.c **** #define CS_LOW()	{HAL_GPIO_WritePin(SD_CS_GPIO_Port, SD_CS_Pin, GPIO_PIN_RESET);}
  43:FATFS/Target/user_diskio_spi.c **** 
  44:FATFS/Target/user_diskio_spi.c **** /*--------------------------------------------------------------------------
  45:FATFS/Target/user_diskio_spi.c **** 
  46:FATFS/Target/user_diskio_spi.c ****    Module Private Functions
  47:FATFS/Target/user_diskio_spi.c **** 
  48:FATFS/Target/user_diskio_spi.c **** ---------------------------------------------------------------------------*/
  49:FATFS/Target/user_diskio_spi.c **** 
  50:FATFS/Target/user_diskio_spi.c **** /* MMC/SD command */
  51:FATFS/Target/user_diskio_spi.c **** #define CMD0	(0)			/* GO_IDLE_STATE */
  52:FATFS/Target/user_diskio_spi.c **** #define CMD1	(1)			/* SEND_OP_COND (MMC) */
  53:FATFS/Target/user_diskio_spi.c **** #define	ACMD41	(0x80+41)	/* SEND_OP_COND (SDC) */
  54:FATFS/Target/user_diskio_spi.c **** #define CMD8	(8)			/* SEND_IF_COND */
  55:FATFS/Target/user_diskio_spi.c **** #define CMD9	(9)			/* SEND_CSD */
  56:FATFS/Target/user_diskio_spi.c **** #define CMD10	(10)		/* SEND_CID */
  57:FATFS/Target/user_diskio_spi.c **** #define CMD12	(12)		/* STOP_TRANSMISSION */
  58:FATFS/Target/user_diskio_spi.c **** #define ACMD13	(0x80+13)	/* SD_STATUS (SDC) */
  59:FATFS/Target/user_diskio_spi.c **** #define CMD16	(16)		/* SET_BLOCKLEN */
  60:FATFS/Target/user_diskio_spi.c **** #define CMD17	(17)		/* READ_SINGLE_BLOCK */
  61:FATFS/Target/user_diskio_spi.c **** #define CMD18	(18)		/* READ_MULTIPLE_BLOCK */
  62:FATFS/Target/user_diskio_spi.c **** #define CMD23	(23)		/* SET_BLOCK_COUNT (MMC) */
  63:FATFS/Target/user_diskio_spi.c **** #define	ACMD23	(0x80+23)	/* SET_WR_BLK_ERASE_COUNT (SDC) */
  64:FATFS/Target/user_diskio_spi.c **** #define CMD24	(24)		/* WRITE_BLOCK */
  65:FATFS/Target/user_diskio_spi.c **** #define CMD25	(25)		/* WRITE_MULTIPLE_BLOCK */
  66:FATFS/Target/user_diskio_spi.c **** #define CMD32	(32)		/* ERASE_ER_BLK_START */
  67:FATFS/Target/user_diskio_spi.c **** #define CMD33	(33)		/* ERASE_ER_BLK_END */
  68:FATFS/Target/user_diskio_spi.c **** #define CMD38	(38)		/* ERASE */
  69:FATFS/Target/user_diskio_spi.c **** #define CMD55	(55)		/* APP_CMD */
  70:FATFS/Target/user_diskio_spi.c **** #define CMD58	(58)		/* READ_OCR */
  71:FATFS/Target/user_diskio_spi.c **** 
  72:FATFS/Target/user_diskio_spi.c **** /* MMC card type flags (MMC_GET_TYPE) */
  73:FATFS/Target/user_diskio_spi.c **** #define CT_MMC		0x01		/* MMC ver 3 */
  74:FATFS/Target/user_diskio_spi.c **** #define CT_SD1		0x02		/* SD ver 1 */
  75:FATFS/Target/user_diskio_spi.c **** #define CT_SD2		0x04		/* SD ver 2 */
  76:FATFS/Target/user_diskio_spi.c **** #define CT_SDC		(CT_SD1|CT_SD2)	/* SD */
  77:FATFS/Target/user_diskio_spi.c **** #define CT_BLOCK	0x08		/* Block addressing */
  78:FATFS/Target/user_diskio_spi.c **** 
  79:FATFS/Target/user_diskio_spi.c **** static volatile
  80:FATFS/Target/user_diskio_spi.c **** DSTATUS Stat = STA_NOINIT;	/* Physical drive status */
  81:FATFS/Target/user_diskio_spi.c **** 
  82:FATFS/Target/user_diskio_spi.c **** 
  83:FATFS/Target/user_diskio_spi.c **** static
  84:FATFS/Target/user_diskio_spi.c **** BYTE CardType;			/* Card type flags */
  85:FATFS/Target/user_diskio_spi.c **** 
  86:FATFS/Target/user_diskio_spi.c **** uint32_t spiTimerTickStart;
  87:FATFS/Target/user_diskio_spi.c **** uint32_t spiTimerTickDelay;
  88:FATFS/Target/user_diskio_spi.c **** 
  89:FATFS/Target/user_diskio_spi.c **** void SPI_Timer_On(uint32_t waitTicks) {
ARM GAS  /tmp/ccDHyNL9.s 			page 3


  90:FATFS/Target/user_diskio_spi.c ****     spiTimerTickStart = HAL_GetTick();
  91:FATFS/Target/user_diskio_spi.c ****     spiTimerTickDelay = waitTicks;
  92:FATFS/Target/user_diskio_spi.c **** }
  93:FATFS/Target/user_diskio_spi.c **** 
  94:FATFS/Target/user_diskio_spi.c **** uint8_t SPI_Timer_Status() {
  95:FATFS/Target/user_diskio_spi.c ****     return ((HAL_GetTick() - spiTimerTickStart) < spiTimerTickDelay);
  96:FATFS/Target/user_diskio_spi.c **** }
  97:FATFS/Target/user_diskio_spi.c **** 
  98:FATFS/Target/user_diskio_spi.c **** /*-----------------------------------------------------------------------*/
  99:FATFS/Target/user_diskio_spi.c **** /* SPI controls (Platform dependent)                                     */
 100:FATFS/Target/user_diskio_spi.c **** /*-----------------------------------------------------------------------*/
 101:FATFS/Target/user_diskio_spi.c **** 
 102:FATFS/Target/user_diskio_spi.c **** /* Exchange a byte */
 103:FATFS/Target/user_diskio_spi.c **** static
 104:FATFS/Target/user_diskio_spi.c **** BYTE xchg_spi (
 105:FATFS/Target/user_diskio_spi.c **** 	BYTE dat	/* Data to send */
 106:FATFS/Target/user_diskio_spi.c **** )
 107:FATFS/Target/user_diskio_spi.c **** {
  27              		.loc 1 107 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 16
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		.loc 1 107 1 is_stmt 0 view .LVU1
  32 0000 00B5     		push	{lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 14, -4
  36 0002 87B0     		sub	sp, sp, #28
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 32
  39 0004 8DF80F00 		strb	r0, [sp, #15]
 108:FATFS/Target/user_diskio_spi.c **** 	BYTE rxDat;
  40              		.loc 1 108 2 is_stmt 1 view .LVU2
 109:FATFS/Target/user_diskio_spi.c ****     HAL_SPI_TransmitReceive(&SD_SPI_HANDLE, &dat, &rxDat, 1, 50);
  41              		.loc 1 109 5 view .LVU3
  42 0008 3223     		movs	r3, #50
  43 000a 0093     		str	r3, [sp]
  44 000c 0123     		movs	r3, #1
  45 000e 0DF11702 		add	r2, sp, #23
  46 0012 0DF10F01 		add	r1, sp, #15
  47 0016 0448     		ldr	r0, .L3
  48              	.LVL1:
  49              		.loc 1 109 5 is_stmt 0 view .LVU4
  50 0018 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
  51              	.LVL2:
 110:FATFS/Target/user_diskio_spi.c ****     return rxDat;
  52              		.loc 1 110 5 is_stmt 1 view .LVU5
 111:FATFS/Target/user_diskio_spi.c **** }
  53              		.loc 1 111 1 is_stmt 0 view .LVU6
  54 001c 9DF81700 		ldrb	r0, [sp, #23]	@ zero_extendqisi2
  55 0020 07B0     		add	sp, sp, #28
  56              	.LCFI2:
  57              		.cfi_def_cfa_offset 4
  58              		@ sp needed
  59 0022 5DF804FB 		ldr	pc, [sp], #4
  60              	.L4:
  61 0026 00BF     		.align	2
ARM GAS  /tmp/ccDHyNL9.s 			page 4


  62              	.L3:
  63 0028 00000000 		.word	hspi2
  64              		.cfi_endproc
  65              	.LFE67:
  67              		.section	.text.wait_ready,"ax",%progbits
  68              		.align	1
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  72              		.fpu softvfp
  74              	wait_ready:
  75              	.LVL3:
  76              	.LFB70:
 112:FATFS/Target/user_diskio_spi.c **** 
 113:FATFS/Target/user_diskio_spi.c **** 
 114:FATFS/Target/user_diskio_spi.c **** /* Receive multiple byte */
 115:FATFS/Target/user_diskio_spi.c **** static
 116:FATFS/Target/user_diskio_spi.c **** void rcvr_spi_multi (
 117:FATFS/Target/user_diskio_spi.c **** 	BYTE *buff,		/* Pointer to data buffer */
 118:FATFS/Target/user_diskio_spi.c **** 	UINT btr		/* Number of bytes to receive (even number) */
 119:FATFS/Target/user_diskio_spi.c **** )
 120:FATFS/Target/user_diskio_spi.c **** {
 121:FATFS/Target/user_diskio_spi.c **** 	for(UINT i=0; i<btr; i++) {
 122:FATFS/Target/user_diskio_spi.c **** 		*(buff+i) = xchg_spi(0xFF);
 123:FATFS/Target/user_diskio_spi.c **** 	}
 124:FATFS/Target/user_diskio_spi.c **** }
 125:FATFS/Target/user_diskio_spi.c **** 
 126:FATFS/Target/user_diskio_spi.c **** 
 127:FATFS/Target/user_diskio_spi.c **** #if _USE_WRITE
 128:FATFS/Target/user_diskio_spi.c **** /* Send multiple byte */
 129:FATFS/Target/user_diskio_spi.c **** static
 130:FATFS/Target/user_diskio_spi.c **** void xmit_spi_multi (
 131:FATFS/Target/user_diskio_spi.c **** 	const BYTE *buff,	/* Pointer to the data */
 132:FATFS/Target/user_diskio_spi.c **** 	UINT btx			/* Number of bytes to send (even number) */
 133:FATFS/Target/user_diskio_spi.c **** )
 134:FATFS/Target/user_diskio_spi.c **** {
 135:FATFS/Target/user_diskio_spi.c **** 	for(UINT i=0; i<btx; i++) {
 136:FATFS/Target/user_diskio_spi.c **** 		xchg_spi(*(buff+i));
 137:FATFS/Target/user_diskio_spi.c **** 	}
 138:FATFS/Target/user_diskio_spi.c **** }
 139:FATFS/Target/user_diskio_spi.c **** #endif
 140:FATFS/Target/user_diskio_spi.c **** 
 141:FATFS/Target/user_diskio_spi.c **** 
 142:FATFS/Target/user_diskio_spi.c **** /*-----------------------------------------------------------------------*/
 143:FATFS/Target/user_diskio_spi.c **** /* Wait for card ready                                                   */
 144:FATFS/Target/user_diskio_spi.c **** /*-----------------------------------------------------------------------*/
 145:FATFS/Target/user_diskio_spi.c **** 
 146:FATFS/Target/user_diskio_spi.c **** static
 147:FATFS/Target/user_diskio_spi.c **** int wait_ready (	/* 1:Ready, 0:Timeout */
 148:FATFS/Target/user_diskio_spi.c **** 	UINT wt			/* Timeout [ms] */
 149:FATFS/Target/user_diskio_spi.c **** )
 150:FATFS/Target/user_diskio_spi.c **** {
  77              		.loc 1 150 1 is_stmt 1 view -0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              		.loc 1 150 1 is_stmt 0 view .LVU8
ARM GAS  /tmp/ccDHyNL9.s 			page 5


  82 0000 70B5     		push	{r4, r5, r6, lr}
  83              	.LCFI3:
  84              		.cfi_def_cfa_offset 16
  85              		.cfi_offset 4, -16
  86              		.cfi_offset 5, -12
  87              		.cfi_offset 6, -8
  88              		.cfi_offset 14, -4
  89 0002 0646     		mov	r6, r0
 151:FATFS/Target/user_diskio_spi.c **** 	BYTE d;
  90              		.loc 1 151 2 is_stmt 1 view .LVU9
 152:FATFS/Target/user_diskio_spi.c **** 	//wait_ready needs its own timer, unfortunately, so it can't use the
 153:FATFS/Target/user_diskio_spi.c **** 	//spi_timer functions
 154:FATFS/Target/user_diskio_spi.c **** 	uint32_t waitSpiTimerTickStart;
  91              		.loc 1 154 2 view .LVU10
 155:FATFS/Target/user_diskio_spi.c **** 	uint32_t waitSpiTimerTickDelay;
  92              		.loc 1 155 2 view .LVU11
 156:FATFS/Target/user_diskio_spi.c **** 
 157:FATFS/Target/user_diskio_spi.c **** 	waitSpiTimerTickStart = HAL_GetTick();
  93              		.loc 1 157 2 view .LVU12
  94              		.loc 1 157 26 is_stmt 0 view .LVU13
  95 0004 FFF7FEFF 		bl	HAL_GetTick
  96              	.LVL4:
  97              		.loc 1 157 26 view .LVU14
  98 0008 0546     		mov	r5, r0
  99              	.LVL5:
 158:FATFS/Target/user_diskio_spi.c **** 	waitSpiTimerTickDelay = (uint32_t)wt;
 100              		.loc 1 158 2 is_stmt 1 view .LVU15
 101              	.L7:
 159:FATFS/Target/user_diskio_spi.c **** 	do {
 102              		.loc 1 159 2 discriminator 2 view .LVU16
 160:FATFS/Target/user_diskio_spi.c **** 		d = xchg_spi(0xFF);
 103              		.loc 1 160 3 discriminator 2 view .LVU17
 104              		.loc 1 160 7 is_stmt 0 discriminator 2 view .LVU18
 105 000a FF20     		movs	r0, #255
 106 000c FFF7FEFF 		bl	xchg_spi
 107              	.LVL6:
 108 0010 0446     		mov	r4, r0
 109              	.LVL7:
 161:FATFS/Target/user_diskio_spi.c **** 		/* This loop takes a time. Insert rot_rdq() here for multitask envilonment. */
 162:FATFS/Target/user_diskio_spi.c **** 	} while (d != 0xFF && ((HAL_GetTick() - waitSpiTimerTickStart) < waitSpiTimerTickDelay));	/* Wait 
 110              		.loc 1 162 10 is_stmt 1 discriminator 2 view .LVU19
 111              		.loc 1 162 2 is_stmt 0 discriminator 2 view .LVU20
 112 0012 FF28     		cmp	r0, #255
 113 0014 04D0     		beq	.L6
 114              		.loc 1 162 26 discriminator 1 view .LVU21
 115 0016 FFF7FEFF 		bl	HAL_GetTick
 116              	.LVL8:
 117              		.loc 1 162 40 discriminator 1 view .LVU22
 118 001a 401B     		subs	r0, r0, r5
 119              		.loc 1 162 21 discriminator 1 view .LVU23
 120 001c B042     		cmp	r0, r6
 121 001e F4D3     		bcc	.L7
 122              	.L6:
 163:FATFS/Target/user_diskio_spi.c **** 
 164:FATFS/Target/user_diskio_spi.c **** 	return (d == 0xFF) ? 1 : 0;
 123              		.loc 1 164 2 is_stmt 1 view .LVU24
 165:FATFS/Target/user_diskio_spi.c **** }
ARM GAS  /tmp/ccDHyNL9.s 			page 6


 124              		.loc 1 165 1 is_stmt 0 view .LVU25
 125 0020 FF2C     		cmp	r4, #255
 126 0022 14BF     		ite	ne
 127 0024 0020     		movne	r0, #0
 128 0026 0120     		moveq	r0, #1
 129 0028 70BD     		pop	{r4, r5, r6, pc}
 130              		.loc 1 165 1 view .LVU26
 131              		.cfi_endproc
 132              	.LFE70:
 134              		.section	.text.rcvr_spi_multi,"ax",%progbits
 135              		.align	1
 136              		.syntax unified
 137              		.thumb
 138              		.thumb_func
 139              		.fpu softvfp
 141              	rcvr_spi_multi:
 142              	.LVL9:
 143              	.LFB68:
 120:FATFS/Target/user_diskio_spi.c **** 	for(UINT i=0; i<btr; i++) {
 144              		.loc 1 120 1 is_stmt 1 view -0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 120:FATFS/Target/user_diskio_spi.c **** 	for(UINT i=0; i<btr; i++) {
 148              		.loc 1 120 1 is_stmt 0 view .LVU28
 149 0000 70B5     		push	{r4, r5, r6, lr}
 150              	.LCFI4:
 151              		.cfi_def_cfa_offset 16
 152              		.cfi_offset 4, -16
 153              		.cfi_offset 5, -12
 154              		.cfi_offset 6, -8
 155              		.cfi_offset 14, -4
 156 0002 0646     		mov	r6, r0
 157 0004 0D46     		mov	r5, r1
 121:FATFS/Target/user_diskio_spi.c **** 		*(buff+i) = xchg_spi(0xFF);
 158              		.loc 1 121 2 is_stmt 1 view .LVU29
 159              	.LBB2:
 121:FATFS/Target/user_diskio_spi.c **** 		*(buff+i) = xchg_spi(0xFF);
 160              		.loc 1 121 6 view .LVU30
 161              	.LVL10:
 121:FATFS/Target/user_diskio_spi.c **** 		*(buff+i) = xchg_spi(0xFF);
 162              		.loc 1 121 11 is_stmt 0 view .LVU31
 163 0006 0024     		movs	r4, #0
 164              	.LVL11:
 165              	.L10:
 121:FATFS/Target/user_diskio_spi.c **** 		*(buff+i) = xchg_spi(0xFF);
 166              		.loc 1 121 16 is_stmt 1 discriminator 1 view .LVU32
 121:FATFS/Target/user_diskio_spi.c **** 		*(buff+i) = xchg_spi(0xFF);
 167              		.loc 1 121 2 is_stmt 0 discriminator 1 view .LVU33
 168 0008 AC42     		cmp	r4, r5
 169 000a 05D2     		bcs	.L13
 122:FATFS/Target/user_diskio_spi.c **** 	}
 170              		.loc 1 122 3 is_stmt 1 discriminator 3 view .LVU34
 122:FATFS/Target/user_diskio_spi.c **** 	}
 171              		.loc 1 122 15 is_stmt 0 discriminator 3 view .LVU35
 172 000c FF20     		movs	r0, #255
 173 000e FFF7FEFF 		bl	xchg_spi
ARM GAS  /tmp/ccDHyNL9.s 			page 7


 174              	.LVL12:
 122:FATFS/Target/user_diskio_spi.c **** 	}
 175              		.loc 1 122 13 discriminator 3 view .LVU36
 176 0012 3055     		strb	r0, [r6, r4]
 121:FATFS/Target/user_diskio_spi.c **** 		*(buff+i) = xchg_spi(0xFF);
 177              		.loc 1 121 23 is_stmt 1 discriminator 3 view .LVU37
 121:FATFS/Target/user_diskio_spi.c **** 		*(buff+i) = xchg_spi(0xFF);
 178              		.loc 1 121 24 is_stmt 0 discriminator 3 view .LVU38
 179 0014 0134     		adds	r4, r4, #1
 180              	.LVL13:
 121:FATFS/Target/user_diskio_spi.c **** 		*(buff+i) = xchg_spi(0xFF);
 181              		.loc 1 121 24 discriminator 3 view .LVU39
 182 0016 F7E7     		b	.L10
 183              	.L13:
 121:FATFS/Target/user_diskio_spi.c **** 		*(buff+i) = xchg_spi(0xFF);
 184              		.loc 1 121 24 discriminator 3 view .LVU40
 185              	.LBE2:
 124:FATFS/Target/user_diskio_spi.c **** 
 186              		.loc 1 124 1 view .LVU41
 187 0018 70BD     		pop	{r4, r5, r6, pc}
 124:FATFS/Target/user_diskio_spi.c **** 
 188              		.loc 1 124 1 view .LVU42
 189              		.cfi_endproc
 190              	.LFE68:
 192              		.section	.text.xmit_spi_multi,"ax",%progbits
 193              		.align	1
 194              		.syntax unified
 195              		.thumb
 196              		.thumb_func
 197              		.fpu softvfp
 199              	xmit_spi_multi:
 200              	.LVL14:
 201              	.LFB69:
 134:FATFS/Target/user_diskio_spi.c **** 	for(UINT i=0; i<btx; i++) {
 202              		.loc 1 134 1 is_stmt 1 view -0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 0, uses_anonymous_args = 0
 134:FATFS/Target/user_diskio_spi.c **** 	for(UINT i=0; i<btx; i++) {
 206              		.loc 1 134 1 is_stmt 0 view .LVU44
 207 0000 70B5     		push	{r4, r5, r6, lr}
 208              	.LCFI5:
 209              		.cfi_def_cfa_offset 16
 210              		.cfi_offset 4, -16
 211              		.cfi_offset 5, -12
 212              		.cfi_offset 6, -8
 213              		.cfi_offset 14, -4
 214 0002 0646     		mov	r6, r0
 215 0004 0D46     		mov	r5, r1
 135:FATFS/Target/user_diskio_spi.c **** 		xchg_spi(*(buff+i));
 216              		.loc 1 135 2 is_stmt 1 view .LVU45
 217              	.LBB3:
 135:FATFS/Target/user_diskio_spi.c **** 		xchg_spi(*(buff+i));
 218              		.loc 1 135 6 view .LVU46
 219              	.LVL15:
 135:FATFS/Target/user_diskio_spi.c **** 		xchg_spi(*(buff+i));
 220              		.loc 1 135 11 is_stmt 0 view .LVU47
ARM GAS  /tmp/ccDHyNL9.s 			page 8


 221 0006 0024     		movs	r4, #0
 222              	.LVL16:
 223              	.L15:
 135:FATFS/Target/user_diskio_spi.c **** 		xchg_spi(*(buff+i));
 224              		.loc 1 135 16 is_stmt 1 discriminator 1 view .LVU48
 135:FATFS/Target/user_diskio_spi.c **** 		xchg_spi(*(buff+i));
 225              		.loc 1 135 2 is_stmt 0 discriminator 1 view .LVU49
 226 0008 AC42     		cmp	r4, r5
 227 000a 04D2     		bcs	.L18
 136:FATFS/Target/user_diskio_spi.c **** 	}
 228              		.loc 1 136 3 is_stmt 1 discriminator 3 view .LVU50
 229 000c 305D     		ldrb	r0, [r6, r4]	@ zero_extendqisi2
 230 000e FFF7FEFF 		bl	xchg_spi
 231              	.LVL17:
 135:FATFS/Target/user_diskio_spi.c **** 		xchg_spi(*(buff+i));
 232              		.loc 1 135 23 discriminator 3 view .LVU51
 135:FATFS/Target/user_diskio_spi.c **** 		xchg_spi(*(buff+i));
 233              		.loc 1 135 24 is_stmt 0 discriminator 3 view .LVU52
 234 0012 0134     		adds	r4, r4, #1
 235              	.LVL18:
 135:FATFS/Target/user_diskio_spi.c **** 		xchg_spi(*(buff+i));
 236              		.loc 1 135 24 discriminator 3 view .LVU53
 237 0014 F8E7     		b	.L15
 238              	.L18:
 135:FATFS/Target/user_diskio_spi.c **** 		xchg_spi(*(buff+i));
 239              		.loc 1 135 24 discriminator 3 view .LVU54
 240              	.LBE3:
 138:FATFS/Target/user_diskio_spi.c **** #endif
 241              		.loc 1 138 1 view .LVU55
 242 0016 70BD     		pop	{r4, r5, r6, pc}
 138:FATFS/Target/user_diskio_spi.c **** #endif
 243              		.loc 1 138 1 view .LVU56
 244              		.cfi_endproc
 245              	.LFE69:
 247              		.section	.text.xmit_datablock,"ax",%progbits
 248              		.align	1
 249              		.syntax unified
 250              		.thumb
 251              		.thumb_func
 252              		.fpu softvfp
 254              	xmit_datablock:
 255              	.LVL19:
 256              	.LFB74:
 166:FATFS/Target/user_diskio_spi.c **** 
 167:FATFS/Target/user_diskio_spi.c **** 
 168:FATFS/Target/user_diskio_spi.c **** 
 169:FATFS/Target/user_diskio_spi.c **** /*-----------------------------------------------------------------------*/
 170:FATFS/Target/user_diskio_spi.c **** /* Despiselect card and release SPI                                         */
 171:FATFS/Target/user_diskio_spi.c **** /*-----------------------------------------------------------------------*/
 172:FATFS/Target/user_diskio_spi.c **** 
 173:FATFS/Target/user_diskio_spi.c **** static
 174:FATFS/Target/user_diskio_spi.c **** void despiselect (void)
 175:FATFS/Target/user_diskio_spi.c **** {
 176:FATFS/Target/user_diskio_spi.c **** 	CS_HIGH();		/* Set CS# high */
 177:FATFS/Target/user_diskio_spi.c **** 	xchg_spi(0xFF);	/* Dummy clock (force DO hi-z for multiple slave SPI) */
 178:FATFS/Target/user_diskio_spi.c **** 
 179:FATFS/Target/user_diskio_spi.c **** }
ARM GAS  /tmp/ccDHyNL9.s 			page 9


 180:FATFS/Target/user_diskio_spi.c **** 
 181:FATFS/Target/user_diskio_spi.c **** 
 182:FATFS/Target/user_diskio_spi.c **** 
 183:FATFS/Target/user_diskio_spi.c **** /*-----------------------------------------------------------------------*/
 184:FATFS/Target/user_diskio_spi.c **** /* Select card and wait for ready                                        */
 185:FATFS/Target/user_diskio_spi.c **** /*-----------------------------------------------------------------------*/
 186:FATFS/Target/user_diskio_spi.c **** 
 187:FATFS/Target/user_diskio_spi.c **** static
 188:FATFS/Target/user_diskio_spi.c **** int spiselect (void)	/* 1:OK, 0:Timeout */
 189:FATFS/Target/user_diskio_spi.c **** {
 190:FATFS/Target/user_diskio_spi.c **** 	CS_LOW();		/* Set CS# low */
 191:FATFS/Target/user_diskio_spi.c **** 	xchg_spi(0xFF);	/* Dummy clock (force DO enabled) */
 192:FATFS/Target/user_diskio_spi.c **** 	if (wait_ready(500)) return 1;	/* Wait for card ready */
 193:FATFS/Target/user_diskio_spi.c **** 
 194:FATFS/Target/user_diskio_spi.c **** 	despiselect();
 195:FATFS/Target/user_diskio_spi.c **** 	return 0;	/* Timeout */
 196:FATFS/Target/user_diskio_spi.c **** }
 197:FATFS/Target/user_diskio_spi.c **** 
 198:FATFS/Target/user_diskio_spi.c **** 
 199:FATFS/Target/user_diskio_spi.c **** 
 200:FATFS/Target/user_diskio_spi.c **** /*-----------------------------------------------------------------------*/
 201:FATFS/Target/user_diskio_spi.c **** /* Receive a data packet from the MMC                                    */
 202:FATFS/Target/user_diskio_spi.c **** /*-----------------------------------------------------------------------*/
 203:FATFS/Target/user_diskio_spi.c **** 
 204:FATFS/Target/user_diskio_spi.c **** static
 205:FATFS/Target/user_diskio_spi.c **** int rcvr_datablock (	/* 1:OK, 0:Error */
 206:FATFS/Target/user_diskio_spi.c **** 	BYTE *buff,			/* Data buffer */
 207:FATFS/Target/user_diskio_spi.c **** 	UINT btr			/* Data block length (byte) */
 208:FATFS/Target/user_diskio_spi.c **** )
 209:FATFS/Target/user_diskio_spi.c **** {
 210:FATFS/Target/user_diskio_spi.c **** 	BYTE token;
 211:FATFS/Target/user_diskio_spi.c **** 
 212:FATFS/Target/user_diskio_spi.c **** 
 213:FATFS/Target/user_diskio_spi.c **** 	SPI_Timer_On(200);
 214:FATFS/Target/user_diskio_spi.c **** 	do {							/* Wait for DataStart token in timeout of 200ms */
 215:FATFS/Target/user_diskio_spi.c **** 		token = xchg_spi(0xFF);
 216:FATFS/Target/user_diskio_spi.c **** 		/* This loop will take a time. Insert rot_rdq() here for multitask envilonment. */
 217:FATFS/Target/user_diskio_spi.c **** 	} while ((token == 0xFF) && SPI_Timer_Status());
 218:FATFS/Target/user_diskio_spi.c **** 	if(token != 0xFE) return 0;		/* Function fails if invalid DataStart token or timeout */
 219:FATFS/Target/user_diskio_spi.c **** 
 220:FATFS/Target/user_diskio_spi.c **** 	rcvr_spi_multi(buff, btr);		/* Store trailing data to the buffer */
 221:FATFS/Target/user_diskio_spi.c **** 	xchg_spi(0xFF); xchg_spi(0xFF);			/* Discard CRC */
 222:FATFS/Target/user_diskio_spi.c **** 
 223:FATFS/Target/user_diskio_spi.c **** 	return 1;						/* Function succeeded */
 224:FATFS/Target/user_diskio_spi.c **** }
 225:FATFS/Target/user_diskio_spi.c **** 
 226:FATFS/Target/user_diskio_spi.c **** 
 227:FATFS/Target/user_diskio_spi.c **** 
 228:FATFS/Target/user_diskio_spi.c **** /*-----------------------------------------------------------------------*/
 229:FATFS/Target/user_diskio_spi.c **** /* Send a data packet to the MMC                                         */
 230:FATFS/Target/user_diskio_spi.c **** /*-----------------------------------------------------------------------*/
 231:FATFS/Target/user_diskio_spi.c **** 
 232:FATFS/Target/user_diskio_spi.c **** #if _USE_WRITE
 233:FATFS/Target/user_diskio_spi.c **** static
 234:FATFS/Target/user_diskio_spi.c **** int xmit_datablock (	/* 1:OK, 0:Failed */
 235:FATFS/Target/user_diskio_spi.c **** 	const BYTE *buff,	/* Ponter to 512 byte data to be sent */
 236:FATFS/Target/user_diskio_spi.c **** 	BYTE token			/* Token */
ARM GAS  /tmp/ccDHyNL9.s 			page 10


 237:FATFS/Target/user_diskio_spi.c **** )
 238:FATFS/Target/user_diskio_spi.c **** {
 257              		.loc 1 238 1 is_stmt 1 view -0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 0
 260              		@ frame_needed = 0, uses_anonymous_args = 0
 261              		.loc 1 238 1 is_stmt 0 view .LVU58
 262 0000 38B5     		push	{r3, r4, r5, lr}
 263              	.LCFI6:
 264              		.cfi_def_cfa_offset 16
 265              		.cfi_offset 3, -16
 266              		.cfi_offset 4, -12
 267              		.cfi_offset 5, -8
 268              		.cfi_offset 14, -4
 269 0002 0546     		mov	r5, r0
 270 0004 0C46     		mov	r4, r1
 239:FATFS/Target/user_diskio_spi.c **** 	BYTE resp;
 271              		.loc 1 239 2 is_stmt 1 view .LVU59
 240:FATFS/Target/user_diskio_spi.c **** 
 241:FATFS/Target/user_diskio_spi.c **** 
 242:FATFS/Target/user_diskio_spi.c **** 	if (!wait_ready(500)) return 0;		/* Wait for card ready */
 272              		.loc 1 242 2 view .LVU60
 273              		.loc 1 242 7 is_stmt 0 view .LVU61
 274 0006 4FF4FA70 		mov	r0, #500
 275              	.LVL20:
 276              		.loc 1 242 7 view .LVU62
 277 000a FFF7FEFF 		bl	wait_ready
 278              	.LVL21:
 279              		.loc 1 242 5 view .LVU63
 280 000e 00B9     		cbnz	r0, .L24
 281              	.L19:
 243:FATFS/Target/user_diskio_spi.c **** 
 244:FATFS/Target/user_diskio_spi.c **** 	xchg_spi(token);					/* Send token */
 245:FATFS/Target/user_diskio_spi.c **** 	if (token != 0xFD) {				/* Send data if token is other than StopTran */
 246:FATFS/Target/user_diskio_spi.c **** 		xmit_spi_multi(buff, 512);		/* Data */
 247:FATFS/Target/user_diskio_spi.c **** 		xchg_spi(0xFF); xchg_spi(0xFF);	/* Dummy CRC */
 248:FATFS/Target/user_diskio_spi.c **** 
 249:FATFS/Target/user_diskio_spi.c **** 		resp = xchg_spi(0xFF);				/* Receive data resp */
 250:FATFS/Target/user_diskio_spi.c **** 		if ((resp & 0x1F) != 0x05) return 0;	/* Function fails if the data packet was not accepted */
 251:FATFS/Target/user_diskio_spi.c **** 	}
 252:FATFS/Target/user_diskio_spi.c **** 	return 1;
 253:FATFS/Target/user_diskio_spi.c **** }
 282              		.loc 1 253 1 view .LVU64
 283 0010 38BD     		pop	{r3, r4, r5, pc}
 284              	.LVL22:
 285              	.L24:
 244:FATFS/Target/user_diskio_spi.c **** 	if (token != 0xFD) {				/* Send data if token is other than StopTran */
 286              		.loc 1 244 2 is_stmt 1 view .LVU65
 287 0012 2046     		mov	r0, r4
 288 0014 FFF7FEFF 		bl	xchg_spi
 289              	.LVL23:
 245:FATFS/Target/user_diskio_spi.c **** 		xmit_spi_multi(buff, 512);		/* Data */
 290              		.loc 1 245 2 view .LVU66
 245:FATFS/Target/user_diskio_spi.c **** 		xmit_spi_multi(buff, 512);		/* Data */
 291              		.loc 1 245 5 is_stmt 0 view .LVU67
 292 0018 FD2C     		cmp	r4, #253
 293 001a 01D1     		bne	.L25
ARM GAS  /tmp/ccDHyNL9.s 			page 11


 252:FATFS/Target/user_diskio_spi.c **** }
 294              		.loc 1 252 9 view .LVU68
 295 001c 0120     		movs	r0, #1
 296 001e F7E7     		b	.L19
 297              	.L25:
 246:FATFS/Target/user_diskio_spi.c **** 		xchg_spi(0xFF); xchg_spi(0xFF);	/* Dummy CRC */
 298              		.loc 1 246 3 is_stmt 1 view .LVU69
 299 0020 4FF40071 		mov	r1, #512
 300 0024 2846     		mov	r0, r5
 301 0026 FFF7FEFF 		bl	xmit_spi_multi
 302              	.LVL24:
 247:FATFS/Target/user_diskio_spi.c **** 
 303              		.loc 1 247 3 view .LVU70
 304 002a FF20     		movs	r0, #255
 305 002c FFF7FEFF 		bl	xchg_spi
 306              	.LVL25:
 247:FATFS/Target/user_diskio_spi.c **** 
 307              		.loc 1 247 19 view .LVU71
 308 0030 FF20     		movs	r0, #255
 309 0032 FFF7FEFF 		bl	xchg_spi
 310              	.LVL26:
 249:FATFS/Target/user_diskio_spi.c **** 		if ((resp & 0x1F) != 0x05) return 0;	/* Function fails if the data packet was not accepted */
 311              		.loc 1 249 3 view .LVU72
 249:FATFS/Target/user_diskio_spi.c **** 		if ((resp & 0x1F) != 0x05) return 0;	/* Function fails if the data packet was not accepted */
 312              		.loc 1 249 10 is_stmt 0 view .LVU73
 313 0036 FF20     		movs	r0, #255
 314 0038 FFF7FEFF 		bl	xchg_spi
 315              	.LVL27:
 250:FATFS/Target/user_diskio_spi.c **** 	}
 316              		.loc 1 250 3 is_stmt 1 view .LVU74
 250:FATFS/Target/user_diskio_spi.c **** 	}
 317              		.loc 1 250 6 is_stmt 0 view .LVU75
 318 003c 00F01F00 		and	r0, r0, #31
 319              	.LVL28:
 250:FATFS/Target/user_diskio_spi.c **** 	}
 320              		.loc 1 250 6 view .LVU76
 321 0040 0528     		cmp	r0, #5
 322 0042 01D1     		bne	.L22
 252:FATFS/Target/user_diskio_spi.c **** }
 323              		.loc 1 252 9 view .LVU77
 324 0044 0120     		movs	r0, #1
 325 0046 E3E7     		b	.L19
 326              	.L22:
 250:FATFS/Target/user_diskio_spi.c **** 	}
 327              		.loc 1 250 37 view .LVU78
 328 0048 0020     		movs	r0, #0
 329 004a E1E7     		b	.L19
 330              		.cfi_endproc
 331              	.LFE74:
 333              		.section	.text.despiselect,"ax",%progbits
 334              		.align	1
 335              		.syntax unified
 336              		.thumb
 337              		.thumb_func
 338              		.fpu softvfp
 340              	despiselect:
 341              	.LFB71:
ARM GAS  /tmp/ccDHyNL9.s 			page 12


 175:FATFS/Target/user_diskio_spi.c **** 	CS_HIGH();		/* Set CS# high */
 342              		.loc 1 175 1 is_stmt 1 view -0
 343              		.cfi_startproc
 344              		@ args = 0, pretend = 0, frame = 0
 345              		@ frame_needed = 0, uses_anonymous_args = 0
 346 0000 08B5     		push	{r3, lr}
 347              	.LCFI7:
 348              		.cfi_def_cfa_offset 8
 349              		.cfi_offset 3, -8
 350              		.cfi_offset 14, -4
 176:FATFS/Target/user_diskio_spi.c **** 	xchg_spi(0xFF);	/* Dummy clock (force DO hi-z for multiple slave SPI) */
 351              		.loc 1 176 2 view .LVU80
 352 0002 0122     		movs	r2, #1
 353 0004 0221     		movs	r1, #2
 354 0006 0348     		ldr	r0, .L28
 355 0008 FFF7FEFF 		bl	HAL_GPIO_WritePin
 356              	.LVL29:
 176:FATFS/Target/user_diskio_spi.c **** 	xchg_spi(0xFF);	/* Dummy clock (force DO hi-z for multiple slave SPI) */
 357              		.loc 1 176 11 view .LVU81
 177:FATFS/Target/user_diskio_spi.c **** 
 358              		.loc 1 177 2 view .LVU82
 359 000c FF20     		movs	r0, #255
 360 000e FFF7FEFF 		bl	xchg_spi
 361              	.LVL30:
 179:FATFS/Target/user_diskio_spi.c **** 
 362              		.loc 1 179 1 is_stmt 0 view .LVU83
 363 0012 08BD     		pop	{r3, pc}
 364              	.L29:
 365              		.align	2
 366              	.L28:
 367 0014 000C0140 		.word	1073810432
 368              		.cfi_endproc
 369              	.LFE71:
 371              		.section	.text.spiselect,"ax",%progbits
 372              		.align	1
 373              		.syntax unified
 374              		.thumb
 375              		.thumb_func
 376              		.fpu softvfp
 378              	spiselect:
 379              	.LFB72:
 189:FATFS/Target/user_diskio_spi.c **** 	CS_LOW();		/* Set CS# low */
 380              		.loc 1 189 1 is_stmt 1 view -0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 0
 383              		@ frame_needed = 0, uses_anonymous_args = 0
 384 0000 10B5     		push	{r4, lr}
 385              	.LCFI8:
 386              		.cfi_def_cfa_offset 8
 387              		.cfi_offset 4, -8
 388              		.cfi_offset 14, -4
 190:FATFS/Target/user_diskio_spi.c **** 	xchg_spi(0xFF);	/* Dummy clock (force DO enabled) */
 389              		.loc 1 190 2 view .LVU85
 390 0002 0022     		movs	r2, #0
 391 0004 0221     		movs	r1, #2
 392 0006 0948     		ldr	r0, .L35
 393 0008 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /tmp/ccDHyNL9.s 			page 13


 394              	.LVL31:
 190:FATFS/Target/user_diskio_spi.c **** 	xchg_spi(0xFF);	/* Dummy clock (force DO enabled) */
 395              		.loc 1 190 10 view .LVU86
 191:FATFS/Target/user_diskio_spi.c **** 	if (wait_ready(500)) return 1;	/* Wait for card ready */
 396              		.loc 1 191 2 view .LVU87
 397 000c FF20     		movs	r0, #255
 398 000e FFF7FEFF 		bl	xchg_spi
 399              	.LVL32:
 192:FATFS/Target/user_diskio_spi.c **** 
 400              		.loc 1 192 2 view .LVU88
 192:FATFS/Target/user_diskio_spi.c **** 
 401              		.loc 1 192 6 is_stmt 0 view .LVU89
 402 0012 4FF4FA70 		mov	r0, #500
 403 0016 FFF7FEFF 		bl	wait_ready
 404              	.LVL33:
 192:FATFS/Target/user_diskio_spi.c **** 
 405              		.loc 1 192 5 view .LVU90
 406 001a 10B1     		cbz	r0, .L34
 192:FATFS/Target/user_diskio_spi.c **** 
 407              		.loc 1 192 30 view .LVU91
 408 001c 0124     		movs	r4, #1
 409              	.L30:
 196:FATFS/Target/user_diskio_spi.c **** 
 410              		.loc 1 196 1 view .LVU92
 411 001e 2046     		mov	r0, r4
 412 0020 10BD     		pop	{r4, pc}
 413              	.L34:
 414 0022 0446     		mov	r4, r0
 194:FATFS/Target/user_diskio_spi.c **** 	return 0;	/* Timeout */
 415              		.loc 1 194 2 is_stmt 1 view .LVU93
 416 0024 FFF7FEFF 		bl	despiselect
 417              	.LVL34:
 195:FATFS/Target/user_diskio_spi.c **** }
 418              		.loc 1 195 2 view .LVU94
 195:FATFS/Target/user_diskio_spi.c **** }
 419              		.loc 1 195 9 is_stmt 0 view .LVU95
 420 0028 F9E7     		b	.L30
 421              	.L36:
 422 002a 00BF     		.align	2
 423              	.L35:
 424 002c 000C0140 		.word	1073810432
 425              		.cfi_endproc
 426              	.LFE72:
 428              		.section	.text.send_cmd,"ax",%progbits
 429              		.align	1
 430              		.syntax unified
 431              		.thumb
 432              		.thumb_func
 433              		.fpu softvfp
 435              	send_cmd:
 436              	.LVL35:
 437              	.LFB75:
 254:FATFS/Target/user_diskio_spi.c **** #endif
 255:FATFS/Target/user_diskio_spi.c **** 
 256:FATFS/Target/user_diskio_spi.c **** 
 257:FATFS/Target/user_diskio_spi.c **** /*-----------------------------------------------------------------------*/
 258:FATFS/Target/user_diskio_spi.c **** /* Send a command packet to the MMC                                      */
ARM GAS  /tmp/ccDHyNL9.s 			page 14


 259:FATFS/Target/user_diskio_spi.c **** /*-----------------------------------------------------------------------*/
 260:FATFS/Target/user_diskio_spi.c **** 
 261:FATFS/Target/user_diskio_spi.c **** static
 262:FATFS/Target/user_diskio_spi.c **** BYTE send_cmd (		/* Return value: R1 resp (bit7==1:Failed to send) */
 263:FATFS/Target/user_diskio_spi.c **** 	BYTE cmd,		/* Command index */
 264:FATFS/Target/user_diskio_spi.c **** 	DWORD arg		/* Argument */
 265:FATFS/Target/user_diskio_spi.c **** )
 266:FATFS/Target/user_diskio_spi.c **** {
 438              		.loc 1 266 1 is_stmt 1 view -0
 439              		.cfi_startproc
 440              		@ args = 0, pretend = 0, frame = 0
 441              		@ frame_needed = 0, uses_anonymous_args = 0
 442              		.loc 1 266 1 is_stmt 0 view .LVU97
 443 0000 38B5     		push	{r3, r4, r5, lr}
 444              	.LCFI9:
 445              		.cfi_def_cfa_offset 16
 446              		.cfi_offset 3, -16
 447              		.cfi_offset 4, -12
 448              		.cfi_offset 5, -8
 449              		.cfi_offset 14, -4
 450 0002 0446     		mov	r4, r0
 451 0004 0D46     		mov	r5, r1
 267:FATFS/Target/user_diskio_spi.c **** 	BYTE n, res;
 452              		.loc 1 267 2 is_stmt 1 view .LVU98
 268:FATFS/Target/user_diskio_spi.c **** 
 269:FATFS/Target/user_diskio_spi.c **** 
 270:FATFS/Target/user_diskio_spi.c **** 	if (cmd & 0x80) {	/* Send a CMD55 prior to ACMD<n> */
 453              		.loc 1 270 2 view .LVU99
 454              		.loc 1 270 5 is_stmt 0 view .LVU100
 455 0006 10F0800F 		tst	r0, #128
 456 000a 2CD1     		bne	.L49
 457              	.LVL36:
 458              	.L38:
 271:FATFS/Target/user_diskio_spi.c **** 		cmd &= 0x7F;
 272:FATFS/Target/user_diskio_spi.c **** 		res = send_cmd(CMD55, 0);
 273:FATFS/Target/user_diskio_spi.c **** 		if (res > 1) return res;
 274:FATFS/Target/user_diskio_spi.c **** 	}
 275:FATFS/Target/user_diskio_spi.c **** 
 276:FATFS/Target/user_diskio_spi.c **** 	/* Select the card and wait for ready except to stop multiple block read */
 277:FATFS/Target/user_diskio_spi.c **** 	if (cmd != CMD12) {
 459              		.loc 1 277 2 is_stmt 1 view .LVU101
 460              		.loc 1 277 5 is_stmt 0 view .LVU102
 461 000c 0C2C     		cmp	r4, #12
 462 000e 04D0     		beq	.L40
 278:FATFS/Target/user_diskio_spi.c **** 		despiselect();
 463              		.loc 1 278 3 is_stmt 1 view .LVU103
 464 0010 FFF7FEFF 		bl	despiselect
 465              	.LVL37:
 279:FATFS/Target/user_diskio_spi.c **** 		if (!spiselect()) return 0xFF;
 466              		.loc 1 279 3 view .LVU104
 467              		.loc 1 279 8 is_stmt 0 view .LVU105
 468 0014 FFF7FEFF 		bl	spiselect
 469              	.LVL38:
 470              		.loc 1 279 6 view .LVU106
 471 0018 B0B3     		cbz	r0, .L45
 472              	.L40:
 280:FATFS/Target/user_diskio_spi.c **** 	}
ARM GAS  /tmp/ccDHyNL9.s 			page 15


 281:FATFS/Target/user_diskio_spi.c **** 
 282:FATFS/Target/user_diskio_spi.c **** 	/* Send command packet */
 283:FATFS/Target/user_diskio_spi.c **** 	xchg_spi(0x40 | cmd);				/* Start + command index */
 473              		.loc 1 283 2 is_stmt 1 view .LVU107
 474 001a 44F04000 		orr	r0, r4, #64
 475 001e FFF7FEFF 		bl	xchg_spi
 476              	.LVL39:
 284:FATFS/Target/user_diskio_spi.c **** 	xchg_spi((BYTE)(arg >> 24));		/* Argument[31..24] */
 477              		.loc 1 284 2 view .LVU108
 478 0022 280E     		lsrs	r0, r5, #24
 479 0024 FFF7FEFF 		bl	xchg_spi
 480              	.LVL40:
 285:FATFS/Target/user_diskio_spi.c **** 	xchg_spi((BYTE)(arg >> 16));		/* Argument[23..16] */
 481              		.loc 1 285 2 view .LVU109
 482 0028 C5F30740 		ubfx	r0, r5, #16, #8
 483 002c FFF7FEFF 		bl	xchg_spi
 484              	.LVL41:
 286:FATFS/Target/user_diskio_spi.c **** 	xchg_spi((BYTE)(arg >> 8));			/* Argument[15..8] */
 485              		.loc 1 286 2 view .LVU110
 486 0030 C5F30720 		ubfx	r0, r5, #8, #8
 487 0034 FFF7FEFF 		bl	xchg_spi
 488              	.LVL42:
 287:FATFS/Target/user_diskio_spi.c **** 	xchg_spi((BYTE)arg);				/* Argument[7..0] */
 489              		.loc 1 287 2 view .LVU111
 490 0038 E8B2     		uxtb	r0, r5
 491 003a FFF7FEFF 		bl	xchg_spi
 492              	.LVL43:
 288:FATFS/Target/user_diskio_spi.c **** 	n = 0x01;							/* Dummy CRC + Stop */
 493              		.loc 1 288 2 view .LVU112
 289:FATFS/Target/user_diskio_spi.c **** 	if (cmd == CMD0) n = 0x95;			/* Valid CRC for CMD0(0) */
 494              		.loc 1 289 2 view .LVU113
 495              		.loc 1 289 5 is_stmt 0 view .LVU114
 496 003e DCB1     		cbz	r4, .L46
 288:FATFS/Target/user_diskio_spi.c **** 	n = 0x01;							/* Dummy CRC + Stop */
 497              		.loc 1 288 4 view .LVU115
 498 0040 0120     		movs	r0, #1
 499              	.L41:
 500              	.LVL44:
 290:FATFS/Target/user_diskio_spi.c **** 	if (cmd == CMD8) n = 0x87;			/* Valid CRC for CMD8(0x1AA) */
 501              		.loc 1 290 2 is_stmt 1 view .LVU116
 502              		.loc 1 290 5 is_stmt 0 view .LVU117
 503 0042 082C     		cmp	r4, #8
 504 0044 1AD0     		beq	.L50
 505              	.LVL45:
 506              	.L42:
 291:FATFS/Target/user_diskio_spi.c **** 	xchg_spi(n);
 507              		.loc 1 291 2 is_stmt 1 view .LVU118
 508 0046 FFF7FEFF 		bl	xchg_spi
 509              	.LVL46:
 292:FATFS/Target/user_diskio_spi.c **** 
 293:FATFS/Target/user_diskio_spi.c **** 	/* Receive command resp */
 294:FATFS/Target/user_diskio_spi.c **** 	if (cmd == CMD12) xchg_spi(0xFF);	/* Diacard following one byte when CMD12 */
 510              		.loc 1 294 2 view .LVU119
 511              		.loc 1 294 5 is_stmt 0 view .LVU120
 512 004a 0C2C     		cmp	r4, #12
 513 004c 18D0     		beq	.L51
 514              	.L43:
ARM GAS  /tmp/ccDHyNL9.s 			page 16


 290:FATFS/Target/user_diskio_spi.c **** 	xchg_spi(n);
 515              		.loc 1 290 21 discriminator 2 view .LVU121
 516 004e 0A24     		movs	r4, #10
 517              	.LVL47:
 518              	.L44:
 295:FATFS/Target/user_diskio_spi.c **** 	n = 10;								/* Wait for response (10 bytes max) */
 296:FATFS/Target/user_diskio_spi.c **** 	do {
 519              		.loc 1 296 2 is_stmt 1 discriminator 2 view .LVU122
 297:FATFS/Target/user_diskio_spi.c **** 		res = xchg_spi(0xFF);
 520              		.loc 1 297 3 discriminator 2 view .LVU123
 521              		.loc 1 297 9 is_stmt 0 discriminator 2 view .LVU124
 522 0050 FF20     		movs	r0, #255
 523 0052 FFF7FEFF 		bl	xchg_spi
 524              	.LVL48:
 298:FATFS/Target/user_diskio_spi.c **** 	} while ((res & 0x80) && --n);
 525              		.loc 1 298 10 is_stmt 1 discriminator 2 view .LVU125
 526              		.loc 1 298 2 is_stmt 0 discriminator 2 view .LVU126
 527 0056 10F0800F 		tst	r0, #128
 528 005a 03D0     		beq	.L39
 529              		.loc 1 298 24 discriminator 1 view .LVU127
 530 005c 631E     		subs	r3, r4, #1
 531              	.LVL49:
 532              		.loc 1 298 24 discriminator 1 view .LVU128
 533 005e 13F0FF04 		ands	r4, r3, #255
 534 0062 F5D1     		bne	.L44
 535              	.LVL50:
 536              	.L39:
 299:FATFS/Target/user_diskio_spi.c **** 
 300:FATFS/Target/user_diskio_spi.c **** 	return res;							/* Return received response */
 301:FATFS/Target/user_diskio_spi.c **** }
 537              		.loc 1 301 1 view .LVU129
 538 0064 38BD     		pop	{r3, r4, r5, pc}
 539              	.LVL51:
 540              	.L49:
 271:FATFS/Target/user_diskio_spi.c **** 		res = send_cmd(CMD55, 0);
 541              		.loc 1 271 3 is_stmt 1 view .LVU130
 271:FATFS/Target/user_diskio_spi.c **** 		res = send_cmd(CMD55, 0);
 542              		.loc 1 271 7 is_stmt 0 view .LVU131
 543 0066 00F07F04 		and	r4, r0, #127
 544              	.LVL52:
 272:FATFS/Target/user_diskio_spi.c **** 		if (res > 1) return res;
 545              		.loc 1 272 3 is_stmt 1 view .LVU132
 272:FATFS/Target/user_diskio_spi.c **** 		if (res > 1) return res;
 546              		.loc 1 272 9 is_stmt 0 view .LVU133
 547 006a 0021     		movs	r1, #0
 548              	.LVL53:
 272:FATFS/Target/user_diskio_spi.c **** 		if (res > 1) return res;
 549              		.loc 1 272 9 view .LVU134
 550 006c 3720     		movs	r0, #55
 551 006e FFF7C7FF 		bl	send_cmd
 552              	.LVL54:
 273:FATFS/Target/user_diskio_spi.c **** 	}
 553              		.loc 1 273 3 is_stmt 1 view .LVU135
 273:FATFS/Target/user_diskio_spi.c **** 	}
 554              		.loc 1 273 6 is_stmt 0 view .LVU136
 555 0072 0128     		cmp	r0, #1
 556 0074 CAD9     		bls	.L38
ARM GAS  /tmp/ccDHyNL9.s 			page 17


 557 0076 F5E7     		b	.L39
 558              	.LVL55:
 559              	.L46:
 289:FATFS/Target/user_diskio_spi.c **** 	if (cmd == CMD8) n = 0x87;			/* Valid CRC for CMD8(0x1AA) */
 560              		.loc 1 289 21 view .LVU137
 561 0078 9520     		movs	r0, #149
 562 007a E2E7     		b	.L41
 563              	.LVL56:
 564              	.L50:
 290:FATFS/Target/user_diskio_spi.c **** 	xchg_spi(n);
 565              		.loc 1 290 21 view .LVU138
 566 007c 8720     		movs	r0, #135
 567              	.LVL57:
 290:FATFS/Target/user_diskio_spi.c **** 	xchg_spi(n);
 568              		.loc 1 290 21 view .LVU139
 569 007e E2E7     		b	.L42
 570              	.L51:
 294:FATFS/Target/user_diskio_spi.c **** 	n = 10;								/* Wait for response (10 bytes max) */
 571              		.loc 1 294 20 is_stmt 1 discriminator 1 view .LVU140
 572 0080 FF20     		movs	r0, #255
 573 0082 FFF7FEFF 		bl	xchg_spi
 574              	.LVL58:
 575 0086 E2E7     		b	.L43
 576              	.L45:
 279:FATFS/Target/user_diskio_spi.c **** 	}
 577              		.loc 1 279 28 is_stmt 0 view .LVU141
 578 0088 FF20     		movs	r0, #255
 579 008a EBE7     		b	.L39
 580              		.cfi_endproc
 581              	.LFE75:
 583              		.section	.text.SPI_Timer_On,"ax",%progbits
 584              		.align	1
 585              		.global	SPI_Timer_On
 586              		.syntax unified
 587              		.thumb
 588              		.thumb_func
 589              		.fpu softvfp
 591              	SPI_Timer_On:
 592              	.LVL59:
 593              	.LFB65:
  89:FATFS/Target/user_diskio_spi.c ****     spiTimerTickStart = HAL_GetTick();
 594              		.loc 1 89 39 is_stmt 1 view -0
 595              		.cfi_startproc
 596              		@ args = 0, pretend = 0, frame = 0
 597              		@ frame_needed = 0, uses_anonymous_args = 0
  89:FATFS/Target/user_diskio_spi.c ****     spiTimerTickStart = HAL_GetTick();
 598              		.loc 1 89 39 is_stmt 0 view .LVU143
 599 0000 10B5     		push	{r4, lr}
 600              	.LCFI10:
 601              		.cfi_def_cfa_offset 8
 602              		.cfi_offset 4, -8
 603              		.cfi_offset 14, -4
 604 0002 0446     		mov	r4, r0
  90:FATFS/Target/user_diskio_spi.c ****     spiTimerTickDelay = waitTicks;
 605              		.loc 1 90 5 is_stmt 1 view .LVU144
  90:FATFS/Target/user_diskio_spi.c ****     spiTimerTickDelay = waitTicks;
 606              		.loc 1 90 25 is_stmt 0 view .LVU145
ARM GAS  /tmp/ccDHyNL9.s 			page 18


 607 0004 FFF7FEFF 		bl	HAL_GetTick
 608              	.LVL60:
  90:FATFS/Target/user_diskio_spi.c ****     spiTimerTickDelay = waitTicks;
 609              		.loc 1 90 23 view .LVU146
 610 0008 024B     		ldr	r3, .L54
 611 000a 1860     		str	r0, [r3]
  91:FATFS/Target/user_diskio_spi.c **** }
 612              		.loc 1 91 5 is_stmt 1 view .LVU147
  91:FATFS/Target/user_diskio_spi.c **** }
 613              		.loc 1 91 23 is_stmt 0 view .LVU148
 614 000c 024B     		ldr	r3, .L54+4
 615 000e 1C60     		str	r4, [r3]
  92:FATFS/Target/user_diskio_spi.c **** 
 616              		.loc 1 92 1 view .LVU149
 617 0010 10BD     		pop	{r4, pc}
 618              	.LVL61:
 619              	.L55:
  92:FATFS/Target/user_diskio_spi.c **** 
 620              		.loc 1 92 1 view .LVU150
 621 0012 00BF     		.align	2
 622              	.L54:
 623 0014 00000000 		.word	spiTimerTickStart
 624 0018 00000000 		.word	spiTimerTickDelay
 625              		.cfi_endproc
 626              	.LFE65:
 628              		.section	.text.SPI_Timer_Status,"ax",%progbits
 629              		.align	1
 630              		.global	SPI_Timer_Status
 631              		.syntax unified
 632              		.thumb
 633              		.thumb_func
 634              		.fpu softvfp
 636              	SPI_Timer_Status:
 637              	.LFB66:
  94:FATFS/Target/user_diskio_spi.c ****     return ((HAL_GetTick() - spiTimerTickStart) < spiTimerTickDelay);
 638              		.loc 1 94 28 is_stmt 1 view -0
 639              		.cfi_startproc
 640              		@ args = 0, pretend = 0, frame = 0
 641              		@ frame_needed = 0, uses_anonymous_args = 0
 642 0000 08B5     		push	{r3, lr}
 643              	.LCFI11:
 644              		.cfi_def_cfa_offset 8
 645              		.cfi_offset 3, -8
 646              		.cfi_offset 14, -4
  95:FATFS/Target/user_diskio_spi.c **** }
 647              		.loc 1 95 5 view .LVU152
  95:FATFS/Target/user_diskio_spi.c **** }
 648              		.loc 1 95 14 is_stmt 0 view .LVU153
 649 0002 FFF7FEFF 		bl	HAL_GetTick
 650              	.LVL62:
  95:FATFS/Target/user_diskio_spi.c **** }
 651              		.loc 1 95 28 view .LVU154
 652 0006 054B     		ldr	r3, .L58
 653 0008 1B68     		ldr	r3, [r3]
 654 000a C01A     		subs	r0, r0, r3
  95:FATFS/Target/user_diskio_spi.c **** }
 655              		.loc 1 95 49 view .LVU155
ARM GAS  /tmp/ccDHyNL9.s 			page 19


 656 000c 044B     		ldr	r3, .L58+4
 657 000e 1B68     		ldr	r3, [r3]
  96:FATFS/Target/user_diskio_spi.c **** 
 658              		.loc 1 96 1 view .LVU156
 659 0010 9842     		cmp	r0, r3
 660 0012 2CBF     		ite	cs
 661 0014 0020     		movcs	r0, #0
 662 0016 0120     		movcc	r0, #1
 663 0018 08BD     		pop	{r3, pc}
 664              	.L59:
 665 001a 00BF     		.align	2
 666              	.L58:
 667 001c 00000000 		.word	spiTimerTickStart
 668 0020 00000000 		.word	spiTimerTickDelay
 669              		.cfi_endproc
 670              	.LFE66:
 672              		.section	.text.rcvr_datablock,"ax",%progbits
 673              		.align	1
 674              		.syntax unified
 675              		.thumb
 676              		.thumb_func
 677              		.fpu softvfp
 679              	rcvr_datablock:
 680              	.LVL63:
 681              	.LFB73:
 209:FATFS/Target/user_diskio_spi.c **** 	BYTE token;
 682              		.loc 1 209 1 is_stmt 1 view -0
 683              		.cfi_startproc
 684              		@ args = 0, pretend = 0, frame = 0
 685              		@ frame_needed = 0, uses_anonymous_args = 0
 209:FATFS/Target/user_diskio_spi.c **** 	BYTE token;
 686              		.loc 1 209 1 is_stmt 0 view .LVU158
 687 0000 70B5     		push	{r4, r5, r6, lr}
 688              	.LCFI12:
 689              		.cfi_def_cfa_offset 16
 690              		.cfi_offset 4, -16
 691              		.cfi_offset 5, -12
 692              		.cfi_offset 6, -8
 693              		.cfi_offset 14, -4
 694 0002 0546     		mov	r5, r0
 695 0004 0E46     		mov	r6, r1
 210:FATFS/Target/user_diskio_spi.c **** 
 696              		.loc 1 210 2 is_stmt 1 view .LVU159
 213:FATFS/Target/user_diskio_spi.c **** 	do {							/* Wait for DataStart token in timeout of 200ms */
 697              		.loc 1 213 2 view .LVU160
 698 0006 C820     		movs	r0, #200
 699              	.LVL64:
 213:FATFS/Target/user_diskio_spi.c **** 	do {							/* Wait for DataStart token in timeout of 200ms */
 700              		.loc 1 213 2 is_stmt 0 view .LVU161
 701 0008 FFF7FEFF 		bl	SPI_Timer_On
 702              	.LVL65:
 703              	.L62:
 214:FATFS/Target/user_diskio_spi.c **** 		token = xchg_spi(0xFF);
 704              		.loc 1 214 2 is_stmt 1 discriminator 2 view .LVU162
 215:FATFS/Target/user_diskio_spi.c **** 		/* This loop will take a time. Insert rot_rdq() here for multitask envilonment. */
 705              		.loc 1 215 3 discriminator 2 view .LVU163
 215:FATFS/Target/user_diskio_spi.c **** 		/* This loop will take a time. Insert rot_rdq() here for multitask envilonment. */
ARM GAS  /tmp/ccDHyNL9.s 			page 20


 706              		.loc 1 215 11 is_stmt 0 discriminator 2 view .LVU164
 707 000c FF20     		movs	r0, #255
 708 000e FFF7FEFF 		bl	xchg_spi
 709              	.LVL66:
 710 0012 0446     		mov	r4, r0
 711              	.LVL67:
 217:FATFS/Target/user_diskio_spi.c **** 	if(token != 0xFE) return 0;		/* Function fails if invalid DataStart token or timeout */
 712              		.loc 1 217 10 is_stmt 1 discriminator 2 view .LVU165
 217:FATFS/Target/user_diskio_spi.c **** 	if(token != 0xFE) return 0;		/* Function fails if invalid DataStart token or timeout */
 713              		.loc 1 217 2 is_stmt 0 discriminator 2 view .LVU166
 714 0014 FF28     		cmp	r0, #255
 715 0016 03D1     		bne	.L61
 217:FATFS/Target/user_diskio_spi.c **** 	if(token != 0xFE) return 0;		/* Function fails if invalid DataStart token or timeout */
 716              		.loc 1 217 30 discriminator 1 view .LVU167
 717 0018 FFF7FEFF 		bl	SPI_Timer_Status
 718              	.LVL68:
 217:FATFS/Target/user_diskio_spi.c **** 	if(token != 0xFE) return 0;		/* Function fails if invalid DataStart token or timeout */
 719              		.loc 1 217 27 discriminator 1 view .LVU168
 720 001c 0028     		cmp	r0, #0
 721 001e F5D1     		bne	.L62
 722              	.L61:
 218:FATFS/Target/user_diskio_spi.c **** 
 723              		.loc 1 218 2 is_stmt 1 view .LVU169
 218:FATFS/Target/user_diskio_spi.c **** 
 724              		.loc 1 218 4 is_stmt 0 view .LVU170
 725 0020 FE2C     		cmp	r4, #254
 726 0022 01D0     		beq	.L66
 218:FATFS/Target/user_diskio_spi.c **** 
 727              		.loc 1 218 27 view .LVU171
 728 0024 0020     		movs	r0, #0
 729              	.L60:
 224:FATFS/Target/user_diskio_spi.c **** 
 730              		.loc 1 224 1 view .LVU172
 731 0026 70BD     		pop	{r4, r5, r6, pc}
 732              	.LVL69:
 733              	.L66:
 220:FATFS/Target/user_diskio_spi.c **** 	xchg_spi(0xFF); xchg_spi(0xFF);			/* Discard CRC */
 734              		.loc 1 220 2 is_stmt 1 view .LVU173
 735 0028 3146     		mov	r1, r6
 736 002a 2846     		mov	r0, r5
 737 002c FFF7FEFF 		bl	rcvr_spi_multi
 738              	.LVL70:
 221:FATFS/Target/user_diskio_spi.c **** 
 739              		.loc 1 221 2 view .LVU174
 740 0030 FF20     		movs	r0, #255
 741 0032 FFF7FEFF 		bl	xchg_spi
 742              	.LVL71:
 221:FATFS/Target/user_diskio_spi.c **** 
 743              		.loc 1 221 18 view .LVU175
 744 0036 FF20     		movs	r0, #255
 745 0038 FFF7FEFF 		bl	xchg_spi
 746              	.LVL72:
 223:FATFS/Target/user_diskio_spi.c **** }
 747              		.loc 1 223 2 view .LVU176
 223:FATFS/Target/user_diskio_spi.c **** }
 748              		.loc 1 223 9 is_stmt 0 view .LVU177
 749 003c 0120     		movs	r0, #1
ARM GAS  /tmp/ccDHyNL9.s 			page 21


 750 003e F2E7     		b	.L60
 751              		.cfi_endproc
 752              	.LFE73:
 754              		.section	.text.USER_SPI_initialize,"ax",%progbits
 755              		.align	1
 756              		.global	USER_SPI_initialize
 757              		.syntax unified
 758              		.thumb
 759              		.thumb_func
 760              		.fpu softvfp
 762              	USER_SPI_initialize:
 763              	.LVL73:
 764              	.LFB76:
 302:FATFS/Target/user_diskio_spi.c **** 
 303:FATFS/Target/user_diskio_spi.c **** 
 304:FATFS/Target/user_diskio_spi.c **** /*--------------------------------------------------------------------------
 305:FATFS/Target/user_diskio_spi.c **** 
 306:FATFS/Target/user_diskio_spi.c ****    Public FatFs Functions (wrapped in user_diskio.c)
 307:FATFS/Target/user_diskio_spi.c **** 
 308:FATFS/Target/user_diskio_spi.c **** ---------------------------------------------------------------------------*/
 309:FATFS/Target/user_diskio_spi.c **** 
 310:FATFS/Target/user_diskio_spi.c **** //The following functions are defined as inline because they aren't the functions that
 311:FATFS/Target/user_diskio_spi.c **** //are passed to FatFs - they are wrapped by autogenerated (non-inline) cubemx template
 312:FATFS/Target/user_diskio_spi.c **** //code.
 313:FATFS/Target/user_diskio_spi.c **** //If you do not wish to use cubemx, remove the "inline" from these functions here
 314:FATFS/Target/user_diskio_spi.c **** //and in the associated .h
 315:FATFS/Target/user_diskio_spi.c **** 
 316:FATFS/Target/user_diskio_spi.c **** 
 317:FATFS/Target/user_diskio_spi.c **** /*-----------------------------------------------------------------------*/
 318:FATFS/Target/user_diskio_spi.c **** /* Initialize disk drive                                                 */
 319:FATFS/Target/user_diskio_spi.c **** /*-----------------------------------------------------------------------*/
 320:FATFS/Target/user_diskio_spi.c **** 
 321:FATFS/Target/user_diskio_spi.c **** inline DSTATUS USER_SPI_initialize (
 322:FATFS/Target/user_diskio_spi.c **** 	BYTE drv		/* Physical drive number (0) */
 323:FATFS/Target/user_diskio_spi.c **** )
 324:FATFS/Target/user_diskio_spi.c **** {
 765              		.loc 1 324 1 is_stmt 1 view -0
 766              		.cfi_startproc
 767              		@ args = 0, pretend = 0, frame = 8
 768              		@ frame_needed = 0, uses_anonymous_args = 0
 325:FATFS/Target/user_diskio_spi.c **** 	BYTE n, cmd, ty, ocr[4];
 769              		.loc 1 325 2 view .LVU179
 326:FATFS/Target/user_diskio_spi.c **** 
 327:FATFS/Target/user_diskio_spi.c **** 	if (drv != 0) return STA_NOINIT;		/* Supports only drive 0 */
 770              		.loc 1 327 2 view .LVU180
 771              		.loc 1 327 5 is_stmt 0 view .LVU181
 772 0000 0028     		cmp	r0, #0
 773 0002 40F0A980 		bne	.L85
 328:FATFS/Target/user_diskio_spi.c **** 	//assume SPI already init init_spi();	/* Initialize SPI */
 329:FATFS/Target/user_diskio_spi.c **** 
 330:FATFS/Target/user_diskio_spi.c **** 	if (Stat & STA_NODISK) return Stat;	/* Is card existing in the soket? */
 774              		.loc 1 330 2 is_stmt 1 view .LVU182
 775              		.loc 1 330 11 is_stmt 0 view .LVU183
 776 0006 554B     		ldr	r3, .L102
 777 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 778              		.loc 1 330 5 view .LVU184
 779 000a 13F0020F 		tst	r3, #2
ARM GAS  /tmp/ccDHyNL9.s 			page 22


 780 000e 11D1     		bne	.L95
 324:FATFS/Target/user_diskio_spi.c **** 	BYTE n, cmd, ty, ocr[4];
 781              		.loc 1 324 1 view .LVU185
 782 0010 70B5     		push	{r4, r5, r6, lr}
 783              	.LCFI13:
 784              		.cfi_def_cfa_offset 16
 785              		.cfi_offset 4, -16
 786              		.cfi_offset 5, -12
 787              		.cfi_offset 6, -8
 788              		.cfi_offset 14, -4
 789 0012 82B0     		sub	sp, sp, #8
 790              	.LCFI14:
 791              		.cfi_def_cfa_offset 24
 331:FATFS/Target/user_diskio_spi.c **** 
 332:FATFS/Target/user_diskio_spi.c **** 	FCLK_SLOW();
 792              		.loc 1 332 2 is_stmt 1 view .LVU186
 793 0014 524B     		ldr	r3, .L102+4
 794 0016 1A68     		ldr	r2, [r3]
 795 0018 1368     		ldr	r3, [r2]
 796 001a 23F03803 		bic	r3, r3, #56
 797 001e 43F03003 		orr	r3, r3, #48
 798 0022 1360     		str	r3, [r2]
 799              		.loc 1 332 13 view .LVU187
 333:FATFS/Target/user_diskio_spi.c **** 	for (n = 10; n; n--) xchg_spi(0xFF);	/* Send 80 dummy clocks */
 800              		.loc 1 333 2 view .LVU188
 801              	.LVL74:
 802              		.loc 1 333 9 is_stmt 0 view .LVU189
 803 0024 0A24     		movs	r4, #10
 804              	.LVL75:
 805              	.L70:
 806              		.loc 1 333 15 is_stmt 1 discriminator 1 view .LVU190
 807              		.loc 1 333 2 is_stmt 0 discriminator 1 view .LVU191
 808 0026 4CB1     		cbz	r4, .L96
 809              		.loc 1 333 23 is_stmt 1 discriminator 3 view .LVU192
 810 0028 FF20     		movs	r0, #255
 811 002a FFF7FEFF 		bl	xchg_spi
 812              	.LVL76:
 813              		.loc 1 333 18 discriminator 3 view .LVU193
 814              		.loc 1 333 19 is_stmt 0 discriminator 3 view .LVU194
 815 002e 013C     		subs	r4, r4, #1
 816              	.LVL77:
 817              		.loc 1 333 19 discriminator 3 view .LVU195
 818 0030 E4B2     		uxtb	r4, r4
 819              	.LVL78:
 820              		.loc 1 333 19 discriminator 3 view .LVU196
 821 0032 F8E7     		b	.L70
 822              	.LVL79:
 823              	.L95:
 824              	.LCFI15:
 825              		.cfi_def_cfa_offset 0
 826              		.cfi_restore 4
 827              		.cfi_restore 5
 828              		.cfi_restore 6
 829              		.cfi_restore 14
 330:FATFS/Target/user_diskio_spi.c **** 
 830              		.loc 1 330 25 is_stmt 1 discriminator 1 view .LVU197
 330:FATFS/Target/user_diskio_spi.c **** 
ARM GAS  /tmp/ccDHyNL9.s 			page 23


 831              		.loc 1 330 32 is_stmt 0 discriminator 1 view .LVU198
 832 0034 494B     		ldr	r3, .L102
 833 0036 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 834              	.LVL80:
 330:FATFS/Target/user_diskio_spi.c **** 
 835              		.loc 1 330 32 discriminator 1 view .LVU199
 836 0038 C0B2     		uxtb	r0, r0
 837 003a 7047     		bx	lr
 838              	.LVL81:
 839              	.L96:
 840              	.LCFI16:
 841              		.cfi_def_cfa_offset 24
 842              		.cfi_offset 4, -16
 843              		.cfi_offset 5, -12
 844              		.cfi_offset 6, -8
 845              		.cfi_offset 14, -4
 334:FATFS/Target/user_diskio_spi.c **** 
 335:FATFS/Target/user_diskio_spi.c **** 	ty = 0;
 846              		.loc 1 335 2 is_stmt 1 view .LVU200
 336:FATFS/Target/user_diskio_spi.c **** 	if (send_cmd(CMD0, 0) == 1) {			/* Put the card SPI/Idle state */
 847              		.loc 1 336 2 view .LVU201
 848              		.loc 1 336 6 is_stmt 0 view .LVU202
 849 003c 0021     		movs	r1, #0
 850 003e 0846     		mov	r0, r1
 851 0040 FFF7FEFF 		bl	send_cmd
 852              	.LVL82:
 853 0044 0546     		mov	r5, r0
 854              		.loc 1 336 5 view .LVU203
 855 0046 0128     		cmp	r0, #1
 856 0048 17D0     		beq	.L97
 857              	.LVL83:
 858              	.L72:
 337:FATFS/Target/user_diskio_spi.c **** 		SPI_Timer_On(1000);					/* Initialization timeout = 1 sec */
 338:FATFS/Target/user_diskio_spi.c **** 		if (send_cmd(CMD8, 0x1AA) == 1) {	/* SDv2? */
 339:FATFS/Target/user_diskio_spi.c **** 			for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);	/* Get 32 bit return value of R7 resp */
 340:FATFS/Target/user_diskio_spi.c **** 			if (ocr[2] == 0x01 && ocr[3] == 0xAA) {				/* Is the card supports vcc of 2.7-3.6V? */
 341:FATFS/Target/user_diskio_spi.c **** 				while (SPI_Timer_Status() && send_cmd(ACMD41, 1UL << 30)) ;	/* Wait for end of initialization w
 342:FATFS/Target/user_diskio_spi.c **** 				if (SPI_Timer_Status() && send_cmd(CMD58, 0) == 0) {		/* Check CCS bit in the OCR */
 343:FATFS/Target/user_diskio_spi.c **** 					for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);
 344:FATFS/Target/user_diskio_spi.c **** 					ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	/* Card id SDv2 */
 345:FATFS/Target/user_diskio_spi.c **** 				}
 346:FATFS/Target/user_diskio_spi.c **** 			}
 347:FATFS/Target/user_diskio_spi.c **** 		} else {	/* Not SDv2 card */
 348:FATFS/Target/user_diskio_spi.c **** 			if (send_cmd(ACMD41, 0) <= 1) 	{	/* SDv1 or MMC? */
 349:FATFS/Target/user_diskio_spi.c **** 				ty = CT_SD1; cmd = ACMD41;	/* SDv1 (ACMD41(0)) */
 350:FATFS/Target/user_diskio_spi.c **** 			} else {
 351:FATFS/Target/user_diskio_spi.c **** 				ty = CT_MMC; cmd = CMD1;	/* MMCv3 (CMD1(0)) */
 352:FATFS/Target/user_diskio_spi.c **** 			}
 353:FATFS/Target/user_diskio_spi.c **** 			while (SPI_Timer_Status() && send_cmd(cmd, 0)) ;		/* Wait for end of initialization */
 354:FATFS/Target/user_diskio_spi.c **** 			if (!SPI_Timer_Status() || send_cmd(CMD16, 512) != 0)	/* Set block length: 512 */
 355:FATFS/Target/user_diskio_spi.c **** 				ty = 0;
 356:FATFS/Target/user_diskio_spi.c **** 		}
 357:FATFS/Target/user_diskio_spi.c **** 	}
 358:FATFS/Target/user_diskio_spi.c **** 	CardType = ty;	/* Card type */
 859              		.loc 1 358 2 is_stmt 1 view .LVU204
 860              		.loc 1 358 11 is_stmt 0 view .LVU205
 861 004a 464B     		ldr	r3, .L102+8
ARM GAS  /tmp/ccDHyNL9.s 			page 24


 862 004c 1C70     		strb	r4, [r3]
 359:FATFS/Target/user_diskio_spi.c **** 	despiselect();
 863              		.loc 1 359 2 is_stmt 1 view .LVU206
 864 004e FFF7FEFF 		bl	despiselect
 865              	.LVL84:
 360:FATFS/Target/user_diskio_spi.c **** 
 361:FATFS/Target/user_diskio_spi.c **** 	if (ty) {			/* OK */
 866              		.loc 1 361 2 view .LVU207
 867              		.loc 1 361 5 is_stmt 0 view .LVU208
 868 0052 002C     		cmp	r4, #0
 869 0054 7CD0     		beq	.L83
 362:FATFS/Target/user_diskio_spi.c **** 		FCLK_FAST();			/* Set fast clock */
 870              		.loc 1 362 3 is_stmt 1 view .LVU209
 871 0056 424B     		ldr	r3, .L102+4
 872 0058 1A68     		ldr	r2, [r3]
 873 005a 1368     		ldr	r3, [r2]
 874 005c 23F03803 		bic	r3, r3, #56
 875 0060 43F01003 		orr	r3, r3, #16
 876 0064 1360     		str	r3, [r2]
 877              		.loc 1 362 14 view .LVU210
 363:FATFS/Target/user_diskio_spi.c **** 		Stat &= ~STA_NOINIT;	/* Clear STA_NOINIT flag */
 878              		.loc 1 363 3 view .LVU211
 879              		.loc 1 363 8 is_stmt 0 view .LVU212
 880 0066 3D4A     		ldr	r2, .L102
 881 0068 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 882 006a 03F0FE03 		and	r3, r3, #254
 883 006e 1370     		strb	r3, [r2]
 884              	.L84:
 364:FATFS/Target/user_diskio_spi.c **** 	} else {			/* Failed */
 365:FATFS/Target/user_diskio_spi.c **** 		Stat = STA_NOINIT;
 366:FATFS/Target/user_diskio_spi.c **** 	}
 367:FATFS/Target/user_diskio_spi.c **** 
 368:FATFS/Target/user_diskio_spi.c **** 	return Stat;
 885              		.loc 1 368 2 is_stmt 1 view .LVU213
 886              		.loc 1 368 9 is_stmt 0 view .LVU214
 887 0070 3A4B     		ldr	r3, .L102
 888 0072 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 889 0074 C0B2     		uxtb	r0, r0
 369:FATFS/Target/user_diskio_spi.c **** }
 890              		.loc 1 369 1 view .LVU215
 891 0076 02B0     		add	sp, sp, #8
 892              	.LCFI17:
 893              		.cfi_remember_state
 894              		.cfi_def_cfa_offset 16
 895              		@ sp needed
 896 0078 70BD     		pop	{r4, r5, r6, pc}
 897              	.LVL85:
 898              	.L97:
 899              	.LCFI18:
 900              		.cfi_restore_state
 337:FATFS/Target/user_diskio_spi.c **** 		if (send_cmd(CMD8, 0x1AA) == 1) {	/* SDv2? */
 901              		.loc 1 337 3 is_stmt 1 view .LVU216
 902 007a 4FF47A70 		mov	r0, #1000
 903 007e FFF7FEFF 		bl	SPI_Timer_On
 904              	.LVL86:
 338:FATFS/Target/user_diskio_spi.c **** 			for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);	/* Get 32 bit return value of R7 resp */
 905              		.loc 1 338 3 view .LVU217
ARM GAS  /tmp/ccDHyNL9.s 			page 25


 338:FATFS/Target/user_diskio_spi.c **** 			for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);	/* Get 32 bit return value of R7 resp */
 906              		.loc 1 338 7 is_stmt 0 view .LVU218
 907 0082 4FF4D571 		mov	r1, #426
 908 0086 0820     		movs	r0, #8
 909 0088 FFF7FEFF 		bl	send_cmd
 910              	.LVL87:
 338:FATFS/Target/user_diskio_spi.c **** 			for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);	/* Get 32 bit return value of R7 resp */
 911              		.loc 1 338 6 view .LVU219
 912 008c 0128     		cmp	r0, #1
 913 008e 3CD1     		bne	.L98
 339:FATFS/Target/user_diskio_spi.c **** 			if (ocr[2] == 0x01 && ocr[3] == 0xAA) {				/* Is the card supports vcc of 2.7-3.6V? */
 914              		.loc 1 339 11 view .LVU220
 915 0090 2546     		mov	r5, r4
 916 0092 08E0     		b	.L73
 917              	.LVL88:
 918              	.L75:
 339:FATFS/Target/user_diskio_spi.c **** 			if (ocr[2] == 0x01 && ocr[3] == 0xAA) {				/* Is the card supports vcc of 2.7-3.6V? */
 919              		.loc 1 339 28 is_stmt 1 discriminator 3 view .LVU221
 339:FATFS/Target/user_diskio_spi.c **** 			if (ocr[2] == 0x01 && ocr[3] == 0xAA) {				/* Is the card supports vcc of 2.7-3.6V? */
 920              		.loc 1 339 37 is_stmt 0 discriminator 3 view .LVU222
 921 0094 FF20     		movs	r0, #255
 922 0096 FFF7FEFF 		bl	xchg_spi
 923              	.LVL89:
 339:FATFS/Target/user_diskio_spi.c **** 			if (ocr[2] == 0x01 && ocr[3] == 0xAA) {				/* Is the card supports vcc of 2.7-3.6V? */
 924              		.loc 1 339 35 discriminator 3 view .LVU223
 925 009a 02AB     		add	r3, sp, #8
 926 009c 2B44     		add	r3, r3, r5
 927 009e 03F8040C 		strb	r0, [r3, #-4]
 339:FATFS/Target/user_diskio_spi.c **** 			if (ocr[2] == 0x01 && ocr[3] == 0xAA) {				/* Is the card supports vcc of 2.7-3.6V? */
 928              		.loc 1 339 23 is_stmt 1 discriminator 3 view .LVU224
 339:FATFS/Target/user_diskio_spi.c **** 			if (ocr[2] == 0x01 && ocr[3] == 0xAA) {				/* Is the card supports vcc of 2.7-3.6V? */
 929              		.loc 1 339 24 is_stmt 0 discriminator 3 view .LVU225
 930 00a2 0135     		adds	r5, r5, #1
 931              	.LVL90:
 339:FATFS/Target/user_diskio_spi.c **** 			if (ocr[2] == 0x01 && ocr[3] == 0xAA) {				/* Is the card supports vcc of 2.7-3.6V? */
 932              		.loc 1 339 24 discriminator 3 view .LVU226
 933 00a4 EDB2     		uxtb	r5, r5
 934              	.LVL91:
 935              	.L73:
 339:FATFS/Target/user_diskio_spi.c **** 			if (ocr[2] == 0x01 && ocr[3] == 0xAA) {				/* Is the card supports vcc of 2.7-3.6V? */
 936              		.loc 1 339 16 is_stmt 1 discriminator 1 view .LVU227
 339:FATFS/Target/user_diskio_spi.c **** 			if (ocr[2] == 0x01 && ocr[3] == 0xAA) {				/* Is the card supports vcc of 2.7-3.6V? */
 937              		.loc 1 339 4 is_stmt 0 discriminator 1 view .LVU228
 938 00a6 032D     		cmp	r5, #3
 939 00a8 F4D9     		bls	.L75
 340:FATFS/Target/user_diskio_spi.c **** 				while (SPI_Timer_Status() && send_cmd(ACMD41, 1UL << 30)) ;	/* Wait for end of initialization w
 940              		.loc 1 340 4 is_stmt 1 view .LVU229
 340:FATFS/Target/user_diskio_spi.c **** 				while (SPI_Timer_Status() && send_cmd(ACMD41, 1UL << 30)) ;	/* Wait for end of initialization w
 941              		.loc 1 340 11 is_stmt 0 view .LVU230
 942 00aa 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 340:FATFS/Target/user_diskio_spi.c **** 				while (SPI_Timer_Status() && send_cmd(ACMD41, 1UL << 30)) ;	/* Wait for end of initialization w
 943              		.loc 1 340 7 view .LVU231
 944 00ae 012B     		cmp	r3, #1
 945 00b0 CBD1     		bne	.L72
 340:FATFS/Target/user_diskio_spi.c **** 				while (SPI_Timer_Status() && send_cmd(ACMD41, 1UL << 30)) ;	/* Wait for end of initialization w
 946              		.loc 1 340 29 discriminator 1 view .LVU232
 947 00b2 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
ARM GAS  /tmp/ccDHyNL9.s 			page 26


 340:FATFS/Target/user_diskio_spi.c **** 				while (SPI_Timer_Status() && send_cmd(ACMD41, 1UL << 30)) ;	/* Wait for end of initialization w
 948              		.loc 1 340 23 discriminator 1 view .LVU233
 949 00b6 AA2B     		cmp	r3, #170
 950 00b8 C7D1     		bne	.L72
 951              	.L77:
 341:FATFS/Target/user_diskio_spi.c **** 				if (SPI_Timer_Status() && send_cmd(CMD58, 0) == 0) {		/* Check CCS bit in the OCR */
 952              		.loc 1 341 63 is_stmt 1 discriminator 2 view .LVU234
 341:FATFS/Target/user_diskio_spi.c **** 				if (SPI_Timer_Status() && send_cmd(CMD58, 0) == 0) {		/* Check CCS bit in the OCR */
 953              		.loc 1 341 11 discriminator 2 view .LVU235
 341:FATFS/Target/user_diskio_spi.c **** 				if (SPI_Timer_Status() && send_cmd(CMD58, 0) == 0) {		/* Check CCS bit in the OCR */
 954              		.loc 1 341 12 is_stmt 0 discriminator 2 view .LVU236
 955 00ba FFF7FEFF 		bl	SPI_Timer_Status
 956              	.LVL92:
 341:FATFS/Target/user_diskio_spi.c **** 				if (SPI_Timer_Status() && send_cmd(CMD58, 0) == 0) {		/* Check CCS bit in the OCR */
 957              		.loc 1 341 11 discriminator 2 view .LVU237
 958 00be 30B1     		cbz	r0, .L76
 341:FATFS/Target/user_diskio_spi.c **** 				if (SPI_Timer_Status() && send_cmd(CMD58, 0) == 0) {		/* Check CCS bit in the OCR */
 959              		.loc 1 341 34 discriminator 1 view .LVU238
 960 00c0 4FF08041 		mov	r1, #1073741824
 961 00c4 A920     		movs	r0, #169
 962 00c6 FFF7FEFF 		bl	send_cmd
 963              	.LVL93:
 341:FATFS/Target/user_diskio_spi.c **** 				if (SPI_Timer_Status() && send_cmd(CMD58, 0) == 0) {		/* Check CCS bit in the OCR */
 964              		.loc 1 341 31 discriminator 1 view .LVU239
 965 00ca 0028     		cmp	r0, #0
 966 00cc F5D1     		bne	.L77
 967              	.L76:
 342:FATFS/Target/user_diskio_spi.c **** 					for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);
 968              		.loc 1 342 5 is_stmt 1 view .LVU240
 342:FATFS/Target/user_diskio_spi.c **** 					for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);
 969              		.loc 1 342 9 is_stmt 0 view .LVU241
 970 00ce FFF7FEFF 		bl	SPI_Timer_Status
 971              	.LVL94:
 342:FATFS/Target/user_diskio_spi.c **** 					for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);
 972              		.loc 1 342 8 view .LVU242
 973 00d2 08B9     		cbnz	r0, .L99
 335:FATFS/Target/user_diskio_spi.c **** 	if (send_cmd(CMD0, 0) == 1) {			/* Put the card SPI/Idle state */
 974              		.loc 1 335 5 view .LVU243
 975 00d4 0446     		mov	r4, r0
 976 00d6 B8E7     		b	.L72
 977              	.L99:
 342:FATFS/Target/user_diskio_spi.c **** 					for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);
 978              		.loc 1 342 31 discriminator 1 view .LVU244
 979 00d8 0021     		movs	r1, #0
 980 00da 3A20     		movs	r0, #58
 981 00dc FFF7FEFF 		bl	send_cmd
 982              	.LVL95:
 342:FATFS/Target/user_diskio_spi.c **** 					for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);
 983              		.loc 1 342 28 discriminator 1 view .LVU245
 984 00e0 0546     		mov	r5, r0
 985              	.LVL96:
 342:FATFS/Target/user_diskio_spi.c **** 					for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);
 986              		.loc 1 342 28 discriminator 1 view .LVU246
 987 00e2 48B1     		cbz	r0, .L78
 988 00e4 B1E7     		b	.L72
 989              	.LVL97:
 990              	.L79:
ARM GAS  /tmp/ccDHyNL9.s 			page 27


 343:FATFS/Target/user_diskio_spi.c **** 					ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	/* Card id SDv2 */
 991              		.loc 1 343 30 is_stmt 1 discriminator 3 view .LVU247
 343:FATFS/Target/user_diskio_spi.c **** 					ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	/* Card id SDv2 */
 992              		.loc 1 343 39 is_stmt 0 discriminator 3 view .LVU248
 993 00e6 FF20     		movs	r0, #255
 994 00e8 FFF7FEFF 		bl	xchg_spi
 995              	.LVL98:
 343:FATFS/Target/user_diskio_spi.c **** 					ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	/* Card id SDv2 */
 996              		.loc 1 343 37 discriminator 3 view .LVU249
 997 00ec 02AB     		add	r3, sp, #8
 998 00ee 2B44     		add	r3, r3, r5
 999 00f0 03F8040C 		strb	r0, [r3, #-4]
 343:FATFS/Target/user_diskio_spi.c **** 					ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	/* Card id SDv2 */
 1000              		.loc 1 343 25 is_stmt 1 discriminator 3 view .LVU250
 343:FATFS/Target/user_diskio_spi.c **** 					ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	/* Card id SDv2 */
 1001              		.loc 1 343 26 is_stmt 0 discriminator 3 view .LVU251
 1002 00f4 0135     		adds	r5, r5, #1
 1003              	.LVL99:
 343:FATFS/Target/user_diskio_spi.c **** 					ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	/* Card id SDv2 */
 1004              		.loc 1 343 26 discriminator 3 view .LVU252
 1005 00f6 EDB2     		uxtb	r5, r5
 1006              	.LVL100:
 1007              	.L78:
 343:FATFS/Target/user_diskio_spi.c **** 					ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	/* Card id SDv2 */
 1008              		.loc 1 343 18 is_stmt 1 discriminator 1 view .LVU253
 343:FATFS/Target/user_diskio_spi.c **** 					ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	/* Card id SDv2 */
 1009              		.loc 1 343 6 is_stmt 0 discriminator 1 view .LVU254
 1010 00f8 032D     		cmp	r5, #3
 1011 00fa F4D9     		bls	.L79
 344:FATFS/Target/user_diskio_spi.c **** 				}
 1012              		.loc 1 344 6 is_stmt 1 view .LVU255
 344:FATFS/Target/user_diskio_spi.c **** 				}
 1013              		.loc 1 344 15 is_stmt 0 view .LVU256
 1014 00fc 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 344:FATFS/Target/user_diskio_spi.c **** 				}
 1015              		.loc 1 344 9 view .LVU257
 1016 0100 13F0400F 		tst	r3, #64
 1017 0104 22D0     		beq	.L88
 1018 0106 0C24     		movs	r4, #12
 1019 0108 9FE7     		b	.L72
 1020              	.LVL101:
 1021              	.L98:
 348:FATFS/Target/user_diskio_spi.c **** 				ty = CT_SD1; cmd = ACMD41;	/* SDv1 (ACMD41(0)) */
 1022              		.loc 1 348 4 is_stmt 1 view .LVU258
 348:FATFS/Target/user_diskio_spi.c **** 				ty = CT_SD1; cmd = ACMD41;	/* SDv1 (ACMD41(0)) */
 1023              		.loc 1 348 8 is_stmt 0 view .LVU259
 1024 010a 0021     		movs	r1, #0
 1025 010c A920     		movs	r0, #169
 1026 010e FFF7FEFF 		bl	send_cmd
 1027              	.LVL102:
 348:FATFS/Target/user_diskio_spi.c **** 				ty = CT_SD1; cmd = ACMD41;	/* SDv1 (ACMD41(0)) */
 1028              		.loc 1 348 7 view .LVU260
 1029 0112 0128     		cmp	r0, #1
 1030 0114 0ED9     		bls	.L100
 351:FATFS/Target/user_diskio_spi.c **** 			}
 1031              		.loc 1 351 8 view .LVU261
 1032 0116 2E46     		mov	r6, r5
ARM GAS  /tmp/ccDHyNL9.s 			page 28


 1033              	.LVL103:
 1034              	.L82:
 353:FATFS/Target/user_diskio_spi.c **** 			if (!SPI_Timer_Status() || send_cmd(CMD16, 512) != 0)	/* Set block length: 512 */
 1035              		.loc 1 353 51 is_stmt 1 discriminator 2 view .LVU262
 353:FATFS/Target/user_diskio_spi.c **** 			if (!SPI_Timer_Status() || send_cmd(CMD16, 512) != 0)	/* Set block length: 512 */
 1036              		.loc 1 353 10 discriminator 2 view .LVU263
 353:FATFS/Target/user_diskio_spi.c **** 			if (!SPI_Timer_Status() || send_cmd(CMD16, 512) != 0)	/* Set block length: 512 */
 1037              		.loc 1 353 11 is_stmt 0 discriminator 2 view .LVU264
 1038 0118 FFF7FEFF 		bl	SPI_Timer_Status
 1039              	.LVL104:
 353:FATFS/Target/user_diskio_spi.c **** 			if (!SPI_Timer_Status() || send_cmd(CMD16, 512) != 0)	/* Set block length: 512 */
 1040              		.loc 1 353 10 discriminator 2 view .LVU265
 1041 011c 28B1     		cbz	r0, .L81
 353:FATFS/Target/user_diskio_spi.c **** 			if (!SPI_Timer_Status() || send_cmd(CMD16, 512) != 0)	/* Set block length: 512 */
 1042              		.loc 1 353 33 discriminator 1 view .LVU266
 1043 011e 0021     		movs	r1, #0
 1044 0120 2846     		mov	r0, r5
 1045 0122 FFF7FEFF 		bl	send_cmd
 1046              	.LVL105:
 353:FATFS/Target/user_diskio_spi.c **** 			if (!SPI_Timer_Status() || send_cmd(CMD16, 512) != 0)	/* Set block length: 512 */
 1047              		.loc 1 353 30 discriminator 1 view .LVU267
 1048 0126 0028     		cmp	r0, #0
 1049 0128 F6D1     		bne	.L82
 1050              	.L81:
 354:FATFS/Target/user_diskio_spi.c **** 				ty = 0;
 1051              		.loc 1 354 4 is_stmt 1 view .LVU268
 354:FATFS/Target/user_diskio_spi.c **** 				ty = 0;
 1052              		.loc 1 354 9 is_stmt 0 view .LVU269
 1053 012a FFF7FEFF 		bl	SPI_Timer_Status
 1054              	.LVL106:
 354:FATFS/Target/user_diskio_spi.c **** 				ty = 0;
 1055              		.loc 1 354 7 view .LVU270
 1056 012e 20B9     		cbnz	r0, .L101
 355:FATFS/Target/user_diskio_spi.c **** 		}
 1057              		.loc 1 355 8 view .LVU271
 1058 0130 0446     		mov	r4, r0
 1059              	.LVL107:
 355:FATFS/Target/user_diskio_spi.c **** 		}
 1060              		.loc 1 355 8 view .LVU272
 1061 0132 8AE7     		b	.L72
 1062              	.LVL108:
 1063              	.L100:
 349:FATFS/Target/user_diskio_spi.c **** 			} else {
 1064              		.loc 1 349 8 view .LVU273
 1065 0134 0226     		movs	r6, #2
 349:FATFS/Target/user_diskio_spi.c **** 			} else {
 1066              		.loc 1 349 22 view .LVU274
 1067 0136 A925     		movs	r5, #169
 1068 0138 EEE7     		b	.L82
 1069              	.LVL109:
 1070              	.L101:
 354:FATFS/Target/user_diskio_spi.c **** 				ty = 0;
 1071              		.loc 1 354 31 discriminator 1 view .LVU275
 1072 013a 4FF40071 		mov	r1, #512
 1073 013e 1020     		movs	r0, #16
 1074 0140 FFF7FEFF 		bl	send_cmd
 1075              	.LVL110:
ARM GAS  /tmp/ccDHyNL9.s 			page 29


 354:FATFS/Target/user_diskio_spi.c **** 				ty = 0;
 1076              		.loc 1 354 28 discriminator 1 view .LVU276
 1077 0144 0028     		cmp	r0, #0
 1078 0146 80D1     		bne	.L72
 354:FATFS/Target/user_diskio_spi.c **** 				ty = 0;
 1079              		.loc 1 354 28 view .LVU277
 1080 0148 3446     		mov	r4, r6
 1081              	.LVL111:
 354:FATFS/Target/user_diskio_spi.c **** 				ty = 0;
 1082              		.loc 1 354 28 view .LVU278
 1083 014a 7EE7     		b	.L72
 1084              	.LVL112:
 1085              	.L88:
 344:FATFS/Target/user_diskio_spi.c **** 				}
 1086              		.loc 1 344 9 view .LVU279
 1087 014c 0424     		movs	r4, #4
 1088 014e 7CE7     		b	.L72
 1089              	.LVL113:
 1090              	.L83:
 365:FATFS/Target/user_diskio_spi.c **** 	}
 1091              		.loc 1 365 3 is_stmt 1 view .LVU280
 365:FATFS/Target/user_diskio_spi.c **** 	}
 1092              		.loc 1 365 8 is_stmt 0 view .LVU281
 1093 0150 024B     		ldr	r3, .L102
 1094 0152 0122     		movs	r2, #1
 1095 0154 1A70     		strb	r2, [r3]
 1096 0156 8BE7     		b	.L84
 1097              	.LVL114:
 1098              	.L85:
 1099              	.LCFI19:
 1100              		.cfi_def_cfa_offset 0
 1101              		.cfi_restore 4
 1102              		.cfi_restore 5
 1103              		.cfi_restore 6
 1104              		.cfi_restore 14
 327:FATFS/Target/user_diskio_spi.c **** 	//assume SPI already init init_spi();	/* Initialize SPI */
 1105              		.loc 1 327 23 view .LVU282
 1106 0158 0120     		movs	r0, #1
 1107              	.LVL115:
 1108              		.loc 1 369 1 view .LVU283
 1109 015a 7047     		bx	lr
 1110              	.L103:
 1111              		.align	2
 1112              	.L102:
 1113 015c 00000000 		.word	.LANCHOR0
 1114 0160 00000000 		.word	hspi2
 1115 0164 00000000 		.word	.LANCHOR1
 1116              		.cfi_endproc
 1117              	.LFE76:
 1119              		.section	.text.USER_SPI_status,"ax",%progbits
 1120              		.align	1
 1121              		.global	USER_SPI_status
 1122              		.syntax unified
 1123              		.thumb
 1124              		.thumb_func
 1125              		.fpu softvfp
 1127              	USER_SPI_status:
ARM GAS  /tmp/ccDHyNL9.s 			page 30


 1128              	.LVL116:
 1129              	.LFB77:
 370:FATFS/Target/user_diskio_spi.c **** 
 371:FATFS/Target/user_diskio_spi.c **** 
 372:FATFS/Target/user_diskio_spi.c **** 
 373:FATFS/Target/user_diskio_spi.c **** /*-----------------------------------------------------------------------*/
 374:FATFS/Target/user_diskio_spi.c **** /* Get disk status                                                       */
 375:FATFS/Target/user_diskio_spi.c **** /*-----------------------------------------------------------------------*/
 376:FATFS/Target/user_diskio_spi.c **** 
 377:FATFS/Target/user_diskio_spi.c **** inline DSTATUS USER_SPI_status (
 378:FATFS/Target/user_diskio_spi.c **** 	BYTE drv		/* Physical drive number (0) */
 379:FATFS/Target/user_diskio_spi.c **** )
 380:FATFS/Target/user_diskio_spi.c **** {
 1130              		.loc 1 380 1 is_stmt 1 view -0
 1131              		.cfi_startproc
 1132              		@ args = 0, pretend = 0, frame = 0
 1133              		@ frame_needed = 0, uses_anonymous_args = 0
 1134              		@ link register save eliminated.
 381:FATFS/Target/user_diskio_spi.c **** 	if (drv) return STA_NOINIT;		/* Supports only drive 0 */
 1135              		.loc 1 381 2 view .LVU285
 1136              		.loc 1 381 5 is_stmt 0 view .LVU286
 1137 0000 18B9     		cbnz	r0, .L106
 382:FATFS/Target/user_diskio_spi.c **** 
 383:FATFS/Target/user_diskio_spi.c **** 	return Stat;	/* Return disk status */
 1138              		.loc 1 383 2 is_stmt 1 view .LVU287
 1139              		.loc 1 383 9 is_stmt 0 view .LVU288
 1140 0002 034B     		ldr	r3, .L107
 1141 0004 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1142              	.LVL117:
 1143              		.loc 1 383 9 view .LVU289
 1144 0006 C0B2     		uxtb	r0, r0
 1145 0008 7047     		bx	lr
 1146              	.LVL118:
 1147              	.L106:
 381:FATFS/Target/user_diskio_spi.c **** 	if (drv) return STA_NOINIT;		/* Supports only drive 0 */
 1148              		.loc 1 381 18 view .LVU290
 1149 000a 0120     		movs	r0, #1
 1150              	.LVL119:
 384:FATFS/Target/user_diskio_spi.c **** }
 1151              		.loc 1 384 1 view .LVU291
 1152 000c 7047     		bx	lr
 1153              	.L108:
 1154 000e 00BF     		.align	2
 1155              	.L107:
 1156 0010 00000000 		.word	.LANCHOR0
 1157              		.cfi_endproc
 1158              	.LFE77:
 1160              		.section	.text.USER_SPI_read,"ax",%progbits
 1161              		.align	1
 1162              		.global	USER_SPI_read
 1163              		.syntax unified
 1164              		.thumb
 1165              		.thumb_func
 1166              		.fpu softvfp
 1168              	USER_SPI_read:
 1169              	.LVL120:
 1170              	.LFB78:
ARM GAS  /tmp/ccDHyNL9.s 			page 31


 385:FATFS/Target/user_diskio_spi.c **** 
 386:FATFS/Target/user_diskio_spi.c **** 
 387:FATFS/Target/user_diskio_spi.c **** 
 388:FATFS/Target/user_diskio_spi.c **** /*-----------------------------------------------------------------------*/
 389:FATFS/Target/user_diskio_spi.c **** /* Read sector(s)                                                        */
 390:FATFS/Target/user_diskio_spi.c **** /*-----------------------------------------------------------------------*/
 391:FATFS/Target/user_diskio_spi.c **** 
 392:FATFS/Target/user_diskio_spi.c **** inline DRESULT USER_SPI_read (
 393:FATFS/Target/user_diskio_spi.c **** 	BYTE drv,		/* Physical drive number (0) */
 394:FATFS/Target/user_diskio_spi.c **** 	BYTE *buff,		/* Pointer to the data buffer to store read data */
 395:FATFS/Target/user_diskio_spi.c **** 	DWORD sector,	/* Start sector number (LBA) */
 396:FATFS/Target/user_diskio_spi.c **** 	UINT count		/* Number of sectors to read (1..128) */
 397:FATFS/Target/user_diskio_spi.c **** )
 398:FATFS/Target/user_diskio_spi.c **** {
 1171              		.loc 1 398 1 is_stmt 1 view -0
 1172              		.cfi_startproc
 1173              		@ args = 0, pretend = 0, frame = 0
 1174              		@ frame_needed = 0, uses_anonymous_args = 0
 399:FATFS/Target/user_diskio_spi.c **** 	if (drv || !count) return RES_PARERR;		/* Check parameter */
 1175              		.loc 1 399 2 view .LVU293
 1176              		.loc 1 399 5 is_stmt 0 view .LVU294
 1177 0000 0028     		cmp	r0, #0
 1178 0002 39D1     		bne	.L116
 398:FATFS/Target/user_diskio_spi.c **** 	if (drv || !count) return RES_PARERR;		/* Check parameter */
 1179              		.loc 1 398 1 discriminator 2 view .LVU295
 1180 0004 38B5     		push	{r3, r4, r5, lr}
 1181              	.LCFI20:
 1182              		.cfi_def_cfa_offset 16
 1183              		.cfi_offset 3, -16
 1184              		.cfi_offset 4, -12
 1185              		.cfi_offset 5, -8
 1186              		.cfi_offset 14, -4
 1187 0006 0D46     		mov	r5, r1
 1188 0008 1C46     		mov	r4, r3
 1189              		.loc 1 399 10 discriminator 2 view .LVU296
 1190 000a 002B     		cmp	r3, #0
 1191 000c 36D0     		beq	.L117
 400:FATFS/Target/user_diskio_spi.c **** 	if (Stat & STA_NOINIT) return RES_NOTRDY;	/* Check if drive is ready */
 1192              		.loc 1 400 2 is_stmt 1 view .LVU297
 1193              		.loc 1 400 11 is_stmt 0 view .LVU298
 1194 000e 1D4B     		ldr	r3, .L125
 1195              	.LVL121:
 1196              		.loc 1 400 11 view .LVU299
 1197 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1198              		.loc 1 400 5 view .LVU300
 1199 0012 13F0010F 		tst	r3, #1
 1200 0016 33D1     		bne	.L118
 401:FATFS/Target/user_diskio_spi.c **** 
 402:FATFS/Target/user_diskio_spi.c **** 	if (!(CardType & CT_BLOCK)) sector *= 512;	/* LBA ot BA conversion (byte addressing cards) */
 1201              		.loc 1 402 2 is_stmt 1 view .LVU301
 1202              		.loc 1 402 17 is_stmt 0 view .LVU302
 1203 0018 1B4B     		ldr	r3, .L125+4
 1204 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1205              		.loc 1 402 5 view .LVU303
 1206 001c 13F0080F 		tst	r3, #8
 1207 0020 00D1     		bne	.L111
 1208              		.loc 1 402 30 is_stmt 1 discriminator 1 view .LVU304
ARM GAS  /tmp/ccDHyNL9.s 			page 32


 1209              		.loc 1 402 37 is_stmt 0 discriminator 1 view .LVU305
 1210 0022 5202     		lsls	r2, r2, #9
 1211              	.LVL122:
 1212              	.L111:
 403:FATFS/Target/user_diskio_spi.c **** 
 404:FATFS/Target/user_diskio_spi.c **** 	if (count == 1) {	/* Single sector read */
 1213              		.loc 1 404 2 is_stmt 1 view .LVU306
 1214              		.loc 1 404 5 is_stmt 0 view .LVU307
 1215 0024 012C     		cmp	r4, #1
 1216 0026 18D0     		beq	.L124
 405:FATFS/Target/user_diskio_spi.c **** 		if ((send_cmd(CMD17, sector) == 0)	/* READ_SINGLE_BLOCK */
 406:FATFS/Target/user_diskio_spi.c **** 			&& rcvr_datablock(buff, 512)) {
 407:FATFS/Target/user_diskio_spi.c **** 			count = 0;
 408:FATFS/Target/user_diskio_spi.c **** 		}
 409:FATFS/Target/user_diskio_spi.c **** 	}
 410:FATFS/Target/user_diskio_spi.c **** 	else {				/* Multiple sector read */
 411:FATFS/Target/user_diskio_spi.c **** 		if (send_cmd(CMD18, sector) == 0) {	/* READ_MULTIPLE_BLOCK */
 1217              		.loc 1 411 3 is_stmt 1 view .LVU308
 1218              		.loc 1 411 7 is_stmt 0 view .LVU309
 1219 0028 1146     		mov	r1, r2
 1220              	.LVL123:
 1221              		.loc 1 411 7 view .LVU310
 1222 002a 1220     		movs	r0, #18
 1223              	.LVL124:
 1224              		.loc 1 411 7 view .LVU311
 1225 002c FFF7FEFF 		bl	send_cmd
 1226              	.LVL125:
 1227              		.loc 1 411 6 view .LVU312
 1228 0030 68B9     		cbnz	r0, .L113
 1229              	.L115:
 412:FATFS/Target/user_diskio_spi.c **** 			do {
 1230              		.loc 1 412 4 is_stmt 1 view .LVU313
 413:FATFS/Target/user_diskio_spi.c **** 				if (!rcvr_datablock(buff, 512)) break;
 1231              		.loc 1 413 5 view .LVU314
 1232              		.loc 1 413 10 is_stmt 0 view .LVU315
 1233 0032 4FF40071 		mov	r1, #512
 1234 0036 2846     		mov	r0, r5
 1235 0038 FFF7FEFF 		bl	rcvr_datablock
 1236              	.LVL126:
 1237              		.loc 1 413 8 view .LVU316
 1238 003c 18B1     		cbz	r0, .L114
 414:FATFS/Target/user_diskio_spi.c **** 				buff += 512;
 1239              		.loc 1 414 5 is_stmt 1 view .LVU317
 1240              		.loc 1 414 10 is_stmt 0 view .LVU318
 1241 003e 05F50075 		add	r5, r5, #512
 1242              	.LVL127:
 415:FATFS/Target/user_diskio_spi.c **** 			} while (--count);
 1243              		.loc 1 415 12 is_stmt 1 view .LVU319
 1244              		.loc 1 415 4 is_stmt 0 view .LVU320
 1245 0042 013C     		subs	r4, r4, #1
 1246              	.LVL128:
 1247              		.loc 1 415 4 view .LVU321
 1248 0044 F5D1     		bne	.L115
 1249              	.L114:
 416:FATFS/Target/user_diskio_spi.c **** 			send_cmd(CMD12, 0);				/* STOP_TRANSMISSION */
 1250              		.loc 1 416 4 is_stmt 1 view .LVU322
 1251 0046 0021     		movs	r1, #0
ARM GAS  /tmp/ccDHyNL9.s 			page 33


 1252 0048 0C20     		movs	r0, #12
 1253 004a FFF7FEFF 		bl	send_cmd
 1254              	.LVL129:
 1255              	.L113:
 417:FATFS/Target/user_diskio_spi.c **** 		}
 418:FATFS/Target/user_diskio_spi.c **** 	}
 419:FATFS/Target/user_diskio_spi.c **** 	despiselect();
 1256              		.loc 1 419 2 view .LVU323
 1257 004e FFF7FEFF 		bl	despiselect
 1258              	.LVL130:
 420:FATFS/Target/user_diskio_spi.c **** 
 421:FATFS/Target/user_diskio_spi.c **** 	return count ? RES_ERROR : RES_OK;	/* Return result */
 1259              		.loc 1 421 2 view .LVU324
 1260              		.loc 1 421 27 is_stmt 0 view .LVU325
 1261 0052 201E     		subs	r0, r4, #0
 1262 0054 18BF     		it	ne
 1263 0056 0120     		movne	r0, #1
 1264              	.L110:
 422:FATFS/Target/user_diskio_spi.c **** }
 1265              		.loc 1 422 1 view .LVU326
 1266 0058 38BD     		pop	{r3, r4, r5, pc}
 1267              	.LVL131:
 1268              	.L124:
 405:FATFS/Target/user_diskio_spi.c **** 			&& rcvr_datablock(buff, 512)) {
 1269              		.loc 1 405 3 is_stmt 1 view .LVU327
 405:FATFS/Target/user_diskio_spi.c **** 			&& rcvr_datablock(buff, 512)) {
 1270              		.loc 1 405 8 is_stmt 0 view .LVU328
 1271 005a 1146     		mov	r1, r2
 1272              	.LVL132:
 405:FATFS/Target/user_diskio_spi.c **** 			&& rcvr_datablock(buff, 512)) {
 1273              		.loc 1 405 8 view .LVU329
 1274 005c 1120     		movs	r0, #17
 1275              	.LVL133:
 405:FATFS/Target/user_diskio_spi.c **** 			&& rcvr_datablock(buff, 512)) {
 1276              		.loc 1 405 8 view .LVU330
 1277 005e FFF7FEFF 		bl	send_cmd
 1278              	.LVL134:
 405:FATFS/Target/user_diskio_spi.c **** 			&& rcvr_datablock(buff, 512)) {
 1279              		.loc 1 405 6 view .LVU331
 1280 0062 0028     		cmp	r0, #0
 1281 0064 F3D1     		bne	.L113
 406:FATFS/Target/user_diskio_spi.c **** 			count = 0;
 1282              		.loc 1 406 7 view .LVU332
 1283 0066 4FF40071 		mov	r1, #512
 1284 006a 2846     		mov	r0, r5
 1285 006c FFF7FEFF 		bl	rcvr_datablock
 1286              	.LVL135:
 406:FATFS/Target/user_diskio_spi.c **** 			count = 0;
 1287              		.loc 1 406 4 view .LVU333
 1288 0070 0028     		cmp	r0, #0
 1289 0072 ECD0     		beq	.L113
 407:FATFS/Target/user_diskio_spi.c **** 		}
 1290              		.loc 1 407 10 view .LVU334
 1291 0074 0024     		movs	r4, #0
 1292              	.LVL136:
 407:FATFS/Target/user_diskio_spi.c **** 		}
 1293              		.loc 1 407 10 view .LVU335
ARM GAS  /tmp/ccDHyNL9.s 			page 34


 1294 0076 EAE7     		b	.L113
 1295              	.LVL137:
 1296              	.L116:
 1297              	.LCFI21:
 1298              		.cfi_def_cfa_offset 0
 1299              		.cfi_restore 3
 1300              		.cfi_restore 4
 1301              		.cfi_restore 5
 1302              		.cfi_restore 14
 399:FATFS/Target/user_diskio_spi.c **** 	if (Stat & STA_NOINIT) return RES_NOTRDY;	/* Check if drive is ready */
 1303              		.loc 1 399 28 view .LVU336
 1304 0078 0420     		movs	r0, #4
 1305              	.LVL138:
 1306              		.loc 1 422 1 view .LVU337
 1307 007a 7047     		bx	lr
 1308              	.LVL139:
 1309              	.L117:
 1310              	.LCFI22:
 1311              		.cfi_def_cfa_offset 16
 1312              		.cfi_offset 3, -16
 1313              		.cfi_offset 4, -12
 1314              		.cfi_offset 5, -8
 1315              		.cfi_offset 14, -4
 399:FATFS/Target/user_diskio_spi.c **** 	if (Stat & STA_NOINIT) return RES_NOTRDY;	/* Check if drive is ready */
 1316              		.loc 1 399 28 view .LVU338
 1317 007c 0420     		movs	r0, #4
 1318              	.LVL140:
 399:FATFS/Target/user_diskio_spi.c **** 	if (Stat & STA_NOINIT) return RES_NOTRDY;	/* Check if drive is ready */
 1319              		.loc 1 399 28 view .LVU339
 1320 007e EBE7     		b	.L110
 1321              	.LVL141:
 1322              	.L118:
 400:FATFS/Target/user_diskio_spi.c **** 
 1323              		.loc 1 400 32 view .LVU340
 1324 0080 0320     		movs	r0, #3
 1325              	.LVL142:
 400:FATFS/Target/user_diskio_spi.c **** 
 1326              		.loc 1 400 32 view .LVU341
 1327 0082 E9E7     		b	.L110
 1328              	.L126:
 1329              		.align	2
 1330              	.L125:
 1331 0084 00000000 		.word	.LANCHOR0
 1332 0088 00000000 		.word	.LANCHOR1
 1333              		.cfi_endproc
 1334              	.LFE78:
 1336              		.section	.text.USER_SPI_write,"ax",%progbits
 1337              		.align	1
 1338              		.global	USER_SPI_write
 1339              		.syntax unified
 1340              		.thumb
 1341              		.thumb_func
 1342              		.fpu softvfp
 1344              	USER_SPI_write:
 1345              	.LVL143:
 1346              	.LFB79:
 423:FATFS/Target/user_diskio_spi.c **** 
ARM GAS  /tmp/ccDHyNL9.s 			page 35


 424:FATFS/Target/user_diskio_spi.c **** 
 425:FATFS/Target/user_diskio_spi.c **** 
 426:FATFS/Target/user_diskio_spi.c **** /*-----------------------------------------------------------------------*/
 427:FATFS/Target/user_diskio_spi.c **** /* Write sector(s)                                                       */
 428:FATFS/Target/user_diskio_spi.c **** /*-----------------------------------------------------------------------*/
 429:FATFS/Target/user_diskio_spi.c **** 
 430:FATFS/Target/user_diskio_spi.c **** #if _USE_WRITE
 431:FATFS/Target/user_diskio_spi.c **** inline DRESULT USER_SPI_write (
 432:FATFS/Target/user_diskio_spi.c **** 	BYTE drv,			/* Physical drive number (0) */
 433:FATFS/Target/user_diskio_spi.c **** 	const BYTE *buff,	/* Ponter to the data to write */
 434:FATFS/Target/user_diskio_spi.c **** 	DWORD sector,		/* Start sector number (LBA) */
 435:FATFS/Target/user_diskio_spi.c **** 	UINT count			/* Number of sectors to write (1..128) */
 436:FATFS/Target/user_diskio_spi.c **** )
 437:FATFS/Target/user_diskio_spi.c **** {
 1347              		.loc 1 437 1 is_stmt 1 view -0
 1348              		.cfi_startproc
 1349              		@ args = 0, pretend = 0, frame = 0
 1350              		@ frame_needed = 0, uses_anonymous_args = 0
 438:FATFS/Target/user_diskio_spi.c **** 	if (drv || !count) return RES_PARERR;		/* Check parameter */
 1351              		.loc 1 438 2 view .LVU343
 1352              		.loc 1 438 5 is_stmt 0 view .LVU344
 1353 0000 0028     		cmp	r0, #0
 1354 0002 48D1     		bne	.L135
 437:FATFS/Target/user_diskio_spi.c **** 	if (drv || !count) return RES_PARERR;		/* Check parameter */
 1355              		.loc 1 437 1 discriminator 2 view .LVU345
 1356 0004 70B5     		push	{r4, r5, r6, lr}
 1357              	.LCFI23:
 1358              		.cfi_def_cfa_offset 16
 1359              		.cfi_offset 4, -16
 1360              		.cfi_offset 5, -12
 1361              		.cfi_offset 6, -8
 1362              		.cfi_offset 14, -4
 1363 0006 0D46     		mov	r5, r1
 1364 0008 1646     		mov	r6, r2
 1365 000a 1C46     		mov	r4, r3
 1366              		.loc 1 438 10 discriminator 2 view .LVU346
 1367 000c 002B     		cmp	r3, #0
 1368 000e 44D0     		beq	.L136
 439:FATFS/Target/user_diskio_spi.c **** 	if (Stat & STA_NOINIT) return RES_NOTRDY;	/* Check drive status */
 1369              		.loc 1 439 2 is_stmt 1 view .LVU347
 1370              		.loc 1 439 11 is_stmt 0 view .LVU348
 1371 0010 254B     		ldr	r3, .L147
 1372              	.LVL144:
 1373              		.loc 1 439 11 view .LVU349
 1374 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1375              		.loc 1 439 5 view .LVU350
 1376 0014 13F0010F 		tst	r3, #1
 1377 0018 41D1     		bne	.L137
 440:FATFS/Target/user_diskio_spi.c **** 	if (Stat & STA_PROTECT) return RES_WRPRT;	/* Check write protect */
 1378              		.loc 1 440 2 is_stmt 1 view .LVU351
 1379              		.loc 1 440 11 is_stmt 0 view .LVU352
 1380 001a 234B     		ldr	r3, .L147
 1381 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1382              		.loc 1 440 5 view .LVU353
 1383 001e 13F0040F 		tst	r3, #4
 1384 0022 3ED1     		bne	.L138
 441:FATFS/Target/user_diskio_spi.c **** 
ARM GAS  /tmp/ccDHyNL9.s 			page 36


 442:FATFS/Target/user_diskio_spi.c **** 	if (!(CardType & CT_BLOCK)) sector *= 512;	/* LBA ==> BA conversion (byte addressing cards) */
 1385              		.loc 1 442 2 is_stmt 1 view .LVU354
 1386              		.loc 1 442 17 is_stmt 0 view .LVU355
 1387 0024 214B     		ldr	r3, .L147+4
 1388 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1389              		.loc 1 442 5 view .LVU356
 1390 0028 13F0080F 		tst	r3, #8
 1391 002c 00D1     		bne	.L129
 1392              		.loc 1 442 30 is_stmt 1 discriminator 1 view .LVU357
 1393              		.loc 1 442 37 is_stmt 0 discriminator 1 view .LVU358
 1394 002e 5602     		lsls	r6, r2, #9
 1395              	.LVL145:
 1396              	.L129:
 443:FATFS/Target/user_diskio_spi.c **** 
 444:FATFS/Target/user_diskio_spi.c **** 	if (count == 1) {	/* Single sector write */
 1397              		.loc 1 444 2 is_stmt 1 view .LVU359
 1398              		.loc 1 444 5 is_stmt 0 view .LVU360
 1399 0030 012C     		cmp	r4, #1
 1400 0032 1BD0     		beq	.L145
 445:FATFS/Target/user_diskio_spi.c **** 		if ((send_cmd(CMD24, sector) == 0)	/* WRITE_BLOCK */
 446:FATFS/Target/user_diskio_spi.c **** 			&& xmit_datablock(buff, 0xFE)) {
 447:FATFS/Target/user_diskio_spi.c **** 			count = 0;
 448:FATFS/Target/user_diskio_spi.c **** 		}
 449:FATFS/Target/user_diskio_spi.c **** 	}
 450:FATFS/Target/user_diskio_spi.c **** 	else {				/* Multiple sector write */
 451:FATFS/Target/user_diskio_spi.c **** 		if (CardType & CT_SDC) send_cmd(ACMD23, count);	/* Predefine number of sectors */
 1401              		.loc 1 451 3 is_stmt 1 view .LVU361
 1402              		.loc 1 451 6 is_stmt 0 view .LVU362
 1403 0034 13F0060F 		tst	r3, #6
 1404 0038 26D1     		bne	.L146
 1405              	.LVL146:
 1406              	.L132:
 452:FATFS/Target/user_diskio_spi.c **** 		if (send_cmd(CMD25, sector) == 0) {	/* WRITE_MULTIPLE_BLOCK */
 1407              		.loc 1 452 3 is_stmt 1 view .LVU363
 1408              		.loc 1 452 7 is_stmt 0 view .LVU364
 1409 003a 3146     		mov	r1, r6
 1410 003c 1920     		movs	r0, #25
 1411 003e FFF7FEFF 		bl	send_cmd
 1412              	.LVL147:
 1413              		.loc 1 452 6 view .LVU365
 1414 0042 68B9     		cbnz	r0, .L131
 1415              	.L134:
 453:FATFS/Target/user_diskio_spi.c **** 			do {
 1416              		.loc 1 453 4 is_stmt 1 view .LVU366
 454:FATFS/Target/user_diskio_spi.c **** 				if (!xmit_datablock(buff, 0xFC)) break;
 1417              		.loc 1 454 5 view .LVU367
 1418              		.loc 1 454 10 is_stmt 0 view .LVU368
 1419 0044 FC21     		movs	r1, #252
 1420 0046 2846     		mov	r0, r5
 1421 0048 FFF7FEFF 		bl	xmit_datablock
 1422              	.LVL148:
 1423              		.loc 1 454 8 view .LVU369
 1424 004c 18B1     		cbz	r0, .L133
 455:FATFS/Target/user_diskio_spi.c **** 				buff += 512;
 1425              		.loc 1 455 5 is_stmt 1 view .LVU370
 1426              		.loc 1 455 10 is_stmt 0 view .LVU371
 1427 004e 05F50075 		add	r5, r5, #512
ARM GAS  /tmp/ccDHyNL9.s 			page 37


 1428              	.LVL149:
 456:FATFS/Target/user_diskio_spi.c **** 			} while (--count);
 1429              		.loc 1 456 12 is_stmt 1 view .LVU372
 1430              		.loc 1 456 4 is_stmt 0 view .LVU373
 1431 0052 013C     		subs	r4, r4, #1
 1432              	.LVL150:
 1433              		.loc 1 456 4 view .LVU374
 1434 0054 F6D1     		bne	.L134
 1435              	.L133:
 457:FATFS/Target/user_diskio_spi.c **** 			if (!xmit_datablock(0, 0xFD)) count = 1;	/* STOP_TRAN token */
 1436              		.loc 1 457 4 is_stmt 1 view .LVU375
 1437              		.loc 1 457 9 is_stmt 0 view .LVU376
 1438 0056 FD21     		movs	r1, #253
 1439 0058 0020     		movs	r0, #0
 1440 005a FFF7FEFF 		bl	xmit_datablock
 1441              	.LVL151:
 1442              		.loc 1 457 7 view .LVU377
 1443 005e C0B1     		cbz	r0, .L140
 1444              	.LVL152:
 1445              	.L131:
 458:FATFS/Target/user_diskio_spi.c **** 		}
 459:FATFS/Target/user_diskio_spi.c **** 	}
 460:FATFS/Target/user_diskio_spi.c **** 	despiselect();
 1446              		.loc 1 460 2 is_stmt 1 view .LVU378
 1447 0060 FFF7FEFF 		bl	despiselect
 1448              	.LVL153:
 461:FATFS/Target/user_diskio_spi.c **** 
 462:FATFS/Target/user_diskio_spi.c **** 	return count ? RES_ERROR : RES_OK;	/* Return result */
 1449              		.loc 1 462 2 view .LVU379
 1450              		.loc 1 462 27 is_stmt 0 view .LVU380
 1451 0064 201E     		subs	r0, r4, #0
 1452 0066 18BF     		it	ne
 1453 0068 0120     		movne	r0, #1
 1454              	.L128:
 463:FATFS/Target/user_diskio_spi.c **** }
 1455              		.loc 1 463 1 view .LVU381
 1456 006a 70BD     		pop	{r4, r5, r6, pc}
 1457              	.LVL154:
 1458              	.L145:
 445:FATFS/Target/user_diskio_spi.c **** 			&& xmit_datablock(buff, 0xFE)) {
 1459              		.loc 1 445 3 is_stmt 1 view .LVU382
 445:FATFS/Target/user_diskio_spi.c **** 			&& xmit_datablock(buff, 0xFE)) {
 1460              		.loc 1 445 8 is_stmt 0 view .LVU383
 1461 006c 3146     		mov	r1, r6
 1462              	.LVL155:
 445:FATFS/Target/user_diskio_spi.c **** 			&& xmit_datablock(buff, 0xFE)) {
 1463              		.loc 1 445 8 view .LVU384
 1464 006e 1820     		movs	r0, #24
 1465              	.LVL156:
 445:FATFS/Target/user_diskio_spi.c **** 			&& xmit_datablock(buff, 0xFE)) {
 1466              		.loc 1 445 8 view .LVU385
 1467 0070 FFF7FEFF 		bl	send_cmd
 1468              	.LVL157:
 445:FATFS/Target/user_diskio_spi.c **** 			&& xmit_datablock(buff, 0xFE)) {
 1469              		.loc 1 445 6 view .LVU386
 1470 0074 0028     		cmp	r0, #0
 1471 0076 F3D1     		bne	.L131
ARM GAS  /tmp/ccDHyNL9.s 			page 38


 446:FATFS/Target/user_diskio_spi.c **** 			count = 0;
 1472              		.loc 1 446 7 view .LVU387
 1473 0078 FE21     		movs	r1, #254
 1474 007a 2846     		mov	r0, r5
 1475 007c FFF7FEFF 		bl	xmit_datablock
 1476              	.LVL158:
 446:FATFS/Target/user_diskio_spi.c **** 			count = 0;
 1477              		.loc 1 446 4 view .LVU388
 1478 0080 0028     		cmp	r0, #0
 1479 0082 EDD0     		beq	.L131
 447:FATFS/Target/user_diskio_spi.c **** 		}
 1480              		.loc 1 447 10 view .LVU389
 1481 0084 0024     		movs	r4, #0
 1482              	.LVL159:
 447:FATFS/Target/user_diskio_spi.c **** 		}
 1483              		.loc 1 447 10 view .LVU390
 1484 0086 EBE7     		b	.L131
 1485              	.LVL160:
 1486              	.L146:
 451:FATFS/Target/user_diskio_spi.c **** 		if (send_cmd(CMD25, sector) == 0) {	/* WRITE_MULTIPLE_BLOCK */
 1487              		.loc 1 451 26 is_stmt 1 discriminator 1 view .LVU391
 1488 0088 2146     		mov	r1, r4
 1489              	.LVL161:
 451:FATFS/Target/user_diskio_spi.c **** 		if (send_cmd(CMD25, sector) == 0) {	/* WRITE_MULTIPLE_BLOCK */
 1490              		.loc 1 451 26 is_stmt 0 discriminator 1 view .LVU392
 1491 008a 9720     		movs	r0, #151
 1492              	.LVL162:
 451:FATFS/Target/user_diskio_spi.c **** 		if (send_cmd(CMD25, sector) == 0) {	/* WRITE_MULTIPLE_BLOCK */
 1493              		.loc 1 451 26 discriminator 1 view .LVU393
 1494 008c FFF7FEFF 		bl	send_cmd
 1495              	.LVL163:
 1496 0090 D3E7     		b	.L132
 1497              	.L140:
 457:FATFS/Target/user_diskio_spi.c **** 		}
 1498              		.loc 1 457 40 view .LVU394
 1499 0092 0124     		movs	r4, #1
 1500              	.LVL164:
 457:FATFS/Target/user_diskio_spi.c **** 		}
 1501              		.loc 1 457 40 view .LVU395
 1502 0094 E4E7     		b	.L131
 1503              	.LVL165:
 1504              	.L135:
 1505              	.LCFI24:
 1506              		.cfi_def_cfa_offset 0
 1507              		.cfi_restore 4
 1508              		.cfi_restore 5
 1509              		.cfi_restore 6
 1510              		.cfi_restore 14
 438:FATFS/Target/user_diskio_spi.c **** 	if (Stat & STA_NOINIT) return RES_NOTRDY;	/* Check drive status */
 1511              		.loc 1 438 28 view .LVU396
 1512 0096 0420     		movs	r0, #4
 1513              	.LVL166:
 1514              		.loc 1 463 1 view .LVU397
 1515 0098 7047     		bx	lr
 1516              	.LVL167:
 1517              	.L136:
 1518              	.LCFI25:
ARM GAS  /tmp/ccDHyNL9.s 			page 39


 1519              		.cfi_def_cfa_offset 16
 1520              		.cfi_offset 4, -16
 1521              		.cfi_offset 5, -12
 1522              		.cfi_offset 6, -8
 1523              		.cfi_offset 14, -4
 438:FATFS/Target/user_diskio_spi.c **** 	if (Stat & STA_NOINIT) return RES_NOTRDY;	/* Check drive status */
 1524              		.loc 1 438 28 view .LVU398
 1525 009a 0420     		movs	r0, #4
 1526              	.LVL168:
 438:FATFS/Target/user_diskio_spi.c **** 	if (Stat & STA_NOINIT) return RES_NOTRDY;	/* Check drive status */
 1527              		.loc 1 438 28 view .LVU399
 1528 009c E5E7     		b	.L128
 1529              	.LVL169:
 1530              	.L137:
 439:FATFS/Target/user_diskio_spi.c **** 	if (Stat & STA_PROTECT) return RES_WRPRT;	/* Check write protect */
 1531              		.loc 1 439 32 view .LVU400
 1532 009e 0320     		movs	r0, #3
 1533              	.LVL170:
 439:FATFS/Target/user_diskio_spi.c **** 	if (Stat & STA_PROTECT) return RES_WRPRT;	/* Check write protect */
 1534              		.loc 1 439 32 view .LVU401
 1535 00a0 E3E7     		b	.L128
 1536              	.LVL171:
 1537              	.L138:
 440:FATFS/Target/user_diskio_spi.c **** 
 1538              		.loc 1 440 33 view .LVU402
 1539 00a2 0220     		movs	r0, #2
 1540              	.LVL172:
 440:FATFS/Target/user_diskio_spi.c **** 
 1541              		.loc 1 440 33 view .LVU403
 1542 00a4 E1E7     		b	.L128
 1543              	.L148:
 1544 00a6 00BF     		.align	2
 1545              	.L147:
 1546 00a8 00000000 		.word	.LANCHOR0
 1547 00ac 00000000 		.word	.LANCHOR1
 1548              		.cfi_endproc
 1549              	.LFE79:
 1551              		.section	.text.USER_SPI_ioctl,"ax",%progbits
 1552              		.align	1
 1553              		.global	USER_SPI_ioctl
 1554              		.syntax unified
 1555              		.thumb
 1556              		.thumb_func
 1557              		.fpu softvfp
 1559              	USER_SPI_ioctl:
 1560              	.LVL173:
 1561              	.LFB80:
 464:FATFS/Target/user_diskio_spi.c **** #endif
 465:FATFS/Target/user_diskio_spi.c **** 
 466:FATFS/Target/user_diskio_spi.c **** 
 467:FATFS/Target/user_diskio_spi.c **** /*-----------------------------------------------------------------------*/
 468:FATFS/Target/user_diskio_spi.c **** /* Miscellaneous drive controls other than data read/write               */
 469:FATFS/Target/user_diskio_spi.c **** /*-----------------------------------------------------------------------*/
 470:FATFS/Target/user_diskio_spi.c **** 
 471:FATFS/Target/user_diskio_spi.c **** #if _USE_IOCTL
 472:FATFS/Target/user_diskio_spi.c **** inline DRESULT USER_SPI_ioctl (
 473:FATFS/Target/user_diskio_spi.c **** 	BYTE drv,		/* Physical drive number (0) */
ARM GAS  /tmp/ccDHyNL9.s 			page 40


 474:FATFS/Target/user_diskio_spi.c **** 	BYTE cmd,		/* Control command code */
 475:FATFS/Target/user_diskio_spi.c **** 	void *buff		/* Pointer to the conrtol data */
 476:FATFS/Target/user_diskio_spi.c **** )
 477:FATFS/Target/user_diskio_spi.c **** {
 1562              		.loc 1 477 1 is_stmt 1 view -0
 1563              		.cfi_startproc
 1564              		@ args = 0, pretend = 0, frame = 16
 1565              		@ frame_needed = 0, uses_anonymous_args = 0
 1566              		.loc 1 477 1 is_stmt 0 view .LVU405
 1567 0000 70B5     		push	{r4, r5, r6, lr}
 1568              	.LCFI26:
 1569              		.cfi_def_cfa_offset 16
 1570              		.cfi_offset 4, -16
 1571              		.cfi_offset 5, -12
 1572              		.cfi_offset 6, -8
 1573              		.cfi_offset 14, -4
 1574 0002 84B0     		sub	sp, sp, #16
 1575              	.LCFI27:
 1576              		.cfi_def_cfa_offset 32
 478:FATFS/Target/user_diskio_spi.c **** 	DRESULT res;
 1577              		.loc 1 478 2 is_stmt 1 view .LVU406
 479:FATFS/Target/user_diskio_spi.c **** 	BYTE n, csd[16];
 1578              		.loc 1 479 2 view .LVU407
 480:FATFS/Target/user_diskio_spi.c **** 	DWORD *dp, st, ed, csize;
 1579              		.loc 1 480 2 view .LVU408
 481:FATFS/Target/user_diskio_spi.c **** 
 482:FATFS/Target/user_diskio_spi.c **** 
 483:FATFS/Target/user_diskio_spi.c **** 	if (drv) return RES_PARERR;					/* Check parameter */
 1580              		.loc 1 483 2 view .LVU409
 1581              		.loc 1 483 5 is_stmt 0 view .LVU410
 1582 0004 0028     		cmp	r0, #0
 1583 0006 40F00481 		bne	.L164
 1584 000a 0D46     		mov	r5, r1
 1585 000c 1646     		mov	r6, r2
 484:FATFS/Target/user_diskio_spi.c **** 	if (Stat & STA_NOINIT) return RES_NOTRDY;	/* Check if drive is ready */
 1586              		.loc 1 484 2 is_stmt 1 view .LVU411
 1587              		.loc 1 484 11 is_stmt 0 view .LVU412
 1588 000e 834B     		ldr	r3, .L189
 1589 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1590              		.loc 1 484 5 view .LVU413
 1591 0012 13F0010F 		tst	r3, #1
 1592 0016 40F0FE80 		bne	.L165
 485:FATFS/Target/user_diskio_spi.c **** 
 486:FATFS/Target/user_diskio_spi.c **** 	res = RES_ERROR;
 1593              		.loc 1 486 2 is_stmt 1 view .LVU414
 1594              	.LVL174:
 487:FATFS/Target/user_diskio_spi.c **** 
 488:FATFS/Target/user_diskio_spi.c **** 	switch (cmd) {
 1595              		.loc 1 488 2 view .LVU415
 1596 001a 0429     		cmp	r1, #4
 1597 001c 00F2ED80 		bhi	.L166
 1598 0020 DFE811F0 		tbh	[pc, r1, lsl #1]
 1599              	.L153:
 1600 0024 0500     		.2byte	(.L156-.L153)/2
 1601 0026 0C00     		.2byte	(.L155-.L153)/2
 1602 0028 EB00     		.2byte	(.L166-.L153)/2
 1603 002a 5400     		.2byte	(.L154-.L153)/2
ARM GAS  /tmp/ccDHyNL9.s 			page 41


 1604 002c AF00     		.2byte	(.L152-.L153)/2
 1605              		.p2align 1
 1606              	.L156:
 489:FATFS/Target/user_diskio_spi.c **** 	case CTRL_SYNC :		/* Wait for end of internal write process of the drive */
 490:FATFS/Target/user_diskio_spi.c **** 		if (spiselect()) res = RES_OK;
 1607              		.loc 1 490 3 view .LVU416
 1608              		.loc 1 490 7 is_stmt 0 view .LVU417
 1609 002e FFF7FEFF 		bl	spiselect
 1610              	.LVL175:
 1611              		.loc 1 490 6 view .LVU418
 1612 0032 0028     		cmp	r0, #0
 1613 0034 40F0E380 		bne	.L167
 486:FATFS/Target/user_diskio_spi.c **** 
 1614              		.loc 1 486 6 view .LVU419
 1615 0038 0124     		movs	r4, #1
 1616 003a 06E0     		b	.L151
 1617              	.LVL176:
 1618              	.L155:
 491:FATFS/Target/user_diskio_spi.c **** 		break;
 492:FATFS/Target/user_diskio_spi.c **** 
 493:FATFS/Target/user_diskio_spi.c **** 	case GET_SECTOR_COUNT :	/* Get drive capacity in unit of sector (DWORD) */
 494:FATFS/Target/user_diskio_spi.c **** 		if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {
 1619              		.loc 1 494 3 is_stmt 1 view .LVU420
 1620              		.loc 1 494 8 is_stmt 0 view .LVU421
 1621 003c 0021     		movs	r1, #0
 1622              	.LVL177:
 1623              		.loc 1 494 8 view .LVU422
 1624 003e 0920     		movs	r0, #9
 1625              	.LVL178:
 1626              		.loc 1 494 8 view .LVU423
 1627 0040 FFF7FEFF 		bl	send_cmd
 1628              	.LVL179:
 1629              		.loc 1 494 6 view .LVU424
 1630 0044 0446     		mov	r4, r0
 1631 0046 28B1     		cbz	r0, .L181
 486:FATFS/Target/user_diskio_spi.c **** 
 1632              		.loc 1 486 6 view .LVU425
 1633 0048 2C46     		mov	r4, r5
 1634              	.LVL180:
 1635              	.L151:
 495:FATFS/Target/user_diskio_spi.c **** 			if ((csd[0] >> 6) == 1) {	/* SDC ver 2.00 */
 496:FATFS/Target/user_diskio_spi.c **** 				csize = csd[9] + ((WORD)csd[8] << 8) + ((DWORD)(csd[7] & 63) << 16) + 1;
 497:FATFS/Target/user_diskio_spi.c **** 				*(DWORD*)buff = csize << 10;
 498:FATFS/Target/user_diskio_spi.c **** 			} else {					/* SDC ver 1.XX or MMC ver 3 */
 499:FATFS/Target/user_diskio_spi.c **** 				n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
 500:FATFS/Target/user_diskio_spi.c **** 				csize = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
 501:FATFS/Target/user_diskio_spi.c **** 				*(DWORD*)buff = csize << (n - 9);
 502:FATFS/Target/user_diskio_spi.c **** 			}
 503:FATFS/Target/user_diskio_spi.c **** 			res = RES_OK;
 504:FATFS/Target/user_diskio_spi.c **** 		}
 505:FATFS/Target/user_diskio_spi.c **** 		break;
 506:FATFS/Target/user_diskio_spi.c **** 
 507:FATFS/Target/user_diskio_spi.c **** 	case GET_BLOCK_SIZE :	/* Get erase block size in unit of sector (DWORD) */
 508:FATFS/Target/user_diskio_spi.c **** 		if (CardType & CT_SD2) {	/* SDC ver 2.00 */
 509:FATFS/Target/user_diskio_spi.c **** 			if (send_cmd(ACMD13, 0) == 0) {	/* Read SD status */
 510:FATFS/Target/user_diskio_spi.c **** 				xchg_spi(0xFF);
 511:FATFS/Target/user_diskio_spi.c **** 				if (rcvr_datablock(csd, 16)) {				/* Read partial block */
ARM GAS  /tmp/ccDHyNL9.s 			page 42


 512:FATFS/Target/user_diskio_spi.c **** 					for (n = 64 - 16; n; n--) xchg_spi(0xFF);	/* Purge trailing data */
 513:FATFS/Target/user_diskio_spi.c **** 					*(DWORD*)buff = 16UL << (csd[10] >> 4);
 514:FATFS/Target/user_diskio_spi.c **** 					res = RES_OK;
 515:FATFS/Target/user_diskio_spi.c **** 				}
 516:FATFS/Target/user_diskio_spi.c **** 			}
 517:FATFS/Target/user_diskio_spi.c **** 		} else {					/* SDC ver 1.XX or MMC */
 518:FATFS/Target/user_diskio_spi.c **** 			if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {	/* Read CSD */
 519:FATFS/Target/user_diskio_spi.c **** 				if (CardType & CT_SD1) {	/* SDC ver 1.XX */
 520:FATFS/Target/user_diskio_spi.c **** 					*(DWORD*)buff = (((csd[10] & 63) << 1) + ((WORD)(csd[11] & 128) >> 7) + 1) << ((csd[13] >> 6) 
 521:FATFS/Target/user_diskio_spi.c **** 				} else {					/* MMC */
 522:FATFS/Target/user_diskio_spi.c **** 					*(DWORD*)buff = ((WORD)((csd[10] & 124) >> 2) + 1) * (((csd[11] & 3) << 3) + ((csd[11] & 224) 
 523:FATFS/Target/user_diskio_spi.c **** 				}
 524:FATFS/Target/user_diskio_spi.c **** 				res = RES_OK;
 525:FATFS/Target/user_diskio_spi.c **** 			}
 526:FATFS/Target/user_diskio_spi.c **** 		}
 527:FATFS/Target/user_diskio_spi.c **** 		break;
 528:FATFS/Target/user_diskio_spi.c **** 
 529:FATFS/Target/user_diskio_spi.c **** 	case CTRL_TRIM :	/* Erase a block of sectors (used when _USE_ERASE == 1) */
 530:FATFS/Target/user_diskio_spi.c **** 		if (!(CardType & CT_SDC)) break;				/* Check if the card is SDC */
 531:FATFS/Target/user_diskio_spi.c **** 		if (USER_SPI_ioctl(drv, MMC_GET_CSD, csd)) break;	/* Get CSD */
 532:FATFS/Target/user_diskio_spi.c **** 		if (!(csd[0] >> 6) && !(csd[10] & 0x40)) break;	/* Check if sector erase can be applied to the ca
 533:FATFS/Target/user_diskio_spi.c **** 		dp = buff; st = dp[0]; ed = dp[1];				/* Load sector block */
 534:FATFS/Target/user_diskio_spi.c **** 		if (!(CardType & CT_BLOCK)) {
 535:FATFS/Target/user_diskio_spi.c **** 			st *= 512; ed *= 512;
 536:FATFS/Target/user_diskio_spi.c **** 		}
 537:FATFS/Target/user_diskio_spi.c **** 		if (send_cmd(CMD32, st) == 0 && send_cmd(CMD33, ed) == 0 && send_cmd(CMD38, 0) == 0 && wait_ready
 538:FATFS/Target/user_diskio_spi.c **** 			res = RES_OK;	/* FatFs does not check result of this command */
 539:FATFS/Target/user_diskio_spi.c **** 		}
 540:FATFS/Target/user_diskio_spi.c **** 		break;
 541:FATFS/Target/user_diskio_spi.c **** 
 542:FATFS/Target/user_diskio_spi.c **** 	default:
 543:FATFS/Target/user_diskio_spi.c **** 		res = RES_PARERR;
 544:FATFS/Target/user_diskio_spi.c **** 	}
 545:FATFS/Target/user_diskio_spi.c **** 
 546:FATFS/Target/user_diskio_spi.c **** 	despiselect();
 1636              		.loc 1 546 2 is_stmt 1 view .LVU426
 1637 004a FFF7FEFF 		bl	despiselect
 1638              	.LVL181:
 547:FATFS/Target/user_diskio_spi.c **** 
 548:FATFS/Target/user_diskio_spi.c **** 	return res;
 1639              		.loc 1 548 2 view .LVU427
 1640              	.L150:
 549:FATFS/Target/user_diskio_spi.c **** }
 1641              		.loc 1 549 1 is_stmt 0 view .LVU428
 1642 004e 2046     		mov	r0, r4
 1643 0050 04B0     		add	sp, sp, #16
 1644              	.LCFI28:
 1645              		.cfi_remember_state
 1646              		.cfi_def_cfa_offset 16
 1647              		@ sp needed
 1648 0052 70BD     		pop	{r4, r5, r6, pc}
 1649              	.LVL182:
 1650              	.L181:
 1651              	.LCFI29:
 1652              		.cfi_restore_state
 494:FATFS/Target/user_diskio_spi.c **** 			if ((csd[0] >> 6) == 1) {	/* SDC ver 2.00 */
 1653              		.loc 1 494 35 discriminator 1 view .LVU429
ARM GAS  /tmp/ccDHyNL9.s 			page 43


 1654 0054 1021     		movs	r1, #16
 1655 0056 6846     		mov	r0, sp
 1656 0058 FFF7FEFF 		bl	rcvr_datablock
 1657              	.LVL183:
 494:FATFS/Target/user_diskio_spi.c **** 			if ((csd[0] >> 6) == 1) {	/* SDC ver 2.00 */
 1658              		.loc 1 494 32 discriminator 1 view .LVU430
 1659 005c 0028     		cmp	r0, #0
 1660 005e 00F0D080 		beq	.L169
 495:FATFS/Target/user_diskio_spi.c **** 				csize = csd[9] + ((WORD)csd[8] << 8) + ((DWORD)(csd[7] & 63) << 16) + 1;
 1661              		.loc 1 495 4 is_stmt 1 view .LVU431
 495:FATFS/Target/user_diskio_spi.c **** 				csize = csd[9] + ((WORD)csd[8] << 8) + ((DWORD)(csd[7] & 63) << 16) + 1;
 1662              		.loc 1 495 12 is_stmt 0 view .LVU432
 1663 0062 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
 495:FATFS/Target/user_diskio_spi.c **** 				csize = csd[9] + ((WORD)csd[8] << 8) + ((DWORD)(csd[7] & 63) << 16) + 1;
 1664              		.loc 1 495 22 view .LVU433
 1665 0066 9B09     		lsrs	r3, r3, #6
 495:FATFS/Target/user_diskio_spi.c **** 				csize = csd[9] + ((WORD)csd[8] << 8) + ((DWORD)(csd[7] & 63) << 16) + 1;
 1666              		.loc 1 495 7 view .LVU434
 1667 0068 012B     		cmp	r3, #1
 1668 006a 1FD0     		beq	.L182
 499:FATFS/Target/user_diskio_spi.c **** 				csize = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
 1669              		.loc 1 499 5 is_stmt 1 view .LVU435
 499:FATFS/Target/user_diskio_spi.c **** 				csize = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
 1670              		.loc 1 499 13 is_stmt 0 view .LVU436
 1671 006c 9DF80520 		ldrb	r2, [sp, #5]	@ zero_extendqisi2
 499:FATFS/Target/user_diskio_spi.c **** 				csize = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
 1672              		.loc 1 499 17 view .LVU437
 1673 0070 02F00F02 		and	r2, r2, #15
 499:FATFS/Target/user_diskio_spi.c **** 				csize = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
 1674              		.loc 1 499 30 view .LVU438
 1675 0074 9DF80A30 		ldrb	r3, [sp, #10]	@ zero_extendqisi2
 499:FATFS/Target/user_diskio_spi.c **** 				csize = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
 1676              		.loc 1 499 23 view .LVU439
 1677 0078 02EBD312 		add	r2, r2, r3, lsr #7
 499:FATFS/Target/user_diskio_spi.c **** 				csize = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
 1678              		.loc 1 499 55 view .LVU440
 1679 007c 9DF80930 		ldrb	r3, [sp, #9]	@ zero_extendqisi2
 499:FATFS/Target/user_diskio_spi.c **** 				csize = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
 1680              		.loc 1 499 64 view .LVU441
 1681 0080 5B00     		lsls	r3, r3, #1
 1682 0082 03F00603 		and	r3, r3, #6
 499:FATFS/Target/user_diskio_spi.c **** 				csize = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
 1683              		.loc 1 499 48 view .LVU442
 1684 0086 1A44     		add	r2, r2, r3
 1685              	.LVL184:
 500:FATFS/Target/user_diskio_spi.c **** 				*(DWORD*)buff = csize << (n - 9);
 1686              		.loc 1 500 5 is_stmt 1 view .LVU443
 500:FATFS/Target/user_diskio_spi.c **** 				*(DWORD*)buff = csize << (n - 9);
 1687              		.loc 1 500 17 is_stmt 0 view .LVU444
 1688 0088 9DF80810 		ldrb	r1, [sp, #8]	@ zero_extendqisi2
 500:FATFS/Target/user_diskio_spi.c **** 				*(DWORD*)buff = csize << (n - 9);
 1689              		.loc 1 500 39 view .LVU445
 1690 008c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 500:FATFS/Target/user_diskio_spi.c **** 				*(DWORD*)buff = csize << (n - 9);
 1691              		.loc 1 500 43 view .LVU446
 1692 0090 9B00     		lsls	r3, r3, #2
 500:FATFS/Target/user_diskio_spi.c **** 				*(DWORD*)buff = csize << (n - 9);
ARM GAS  /tmp/ccDHyNL9.s 			page 44


 1693              		.loc 1 500 27 view .LVU447
 1694 0092 03EB9113 		add	r3, r3, r1, lsr #6
 500:FATFS/Target/user_diskio_spi.c **** 				*(DWORD*)buff = csize << (n - 9);
 1695              		.loc 1 500 62 view .LVU448
 1696 0096 9DF80610 		ldrb	r1, [sp, #6]	@ zero_extendqisi2
 500:FATFS/Target/user_diskio_spi.c **** 				*(DWORD*)buff = csize << (n - 9);
 1697              		.loc 1 500 71 view .LVU449
 1698 009a 8902     		lsls	r1, r1, #10
 1699 009c 01F44061 		and	r1, r1, #3072
 500:FATFS/Target/user_diskio_spi.c **** 				*(DWORD*)buff = csize << (n - 9);
 1700              		.loc 1 500 49 view .LVU450
 1701 00a0 0B44     		add	r3, r3, r1
 500:FATFS/Target/user_diskio_spi.c **** 				*(DWORD*)buff = csize << (n - 9);
 1702              		.loc 1 500 78 view .LVU451
 1703 00a2 0133     		adds	r3, r3, #1
 1704              	.LVL185:
 501:FATFS/Target/user_diskio_spi.c **** 			}
 1705              		.loc 1 501 5 is_stmt 1 view .LVU452
 501:FATFS/Target/user_diskio_spi.c **** 			}
 1706              		.loc 1 501 33 is_stmt 0 view .LVU453
 1707 00a4 073A     		subs	r2, r2, #7
 1708              	.LVL186:
 501:FATFS/Target/user_diskio_spi.c **** 			}
 1709              		.loc 1 501 27 view .LVU454
 1710 00a6 9340     		lsls	r3, r3, r2
 1711              	.LVL187:
 501:FATFS/Target/user_diskio_spi.c **** 			}
 1712              		.loc 1 501 19 view .LVU455
 1713 00a8 3360     		str	r3, [r6]
 1714              	.LVL188:
 501:FATFS/Target/user_diskio_spi.c **** 			}
 1715              		.loc 1 501 19 view .LVU456
 1716 00aa CEE7     		b	.L151
 1717              	.LVL189:
 1718              	.L182:
 496:FATFS/Target/user_diskio_spi.c **** 				*(DWORD*)buff = csize << 10;
 1719              		.loc 1 496 5 is_stmt 1 view .LVU457
 496:FATFS/Target/user_diskio_spi.c **** 				*(DWORD*)buff = csize << 10;
 1720              		.loc 1 496 16 is_stmt 0 view .LVU458
 1721 00ac 9DF80930 		ldrb	r3, [sp, #9]	@ zero_extendqisi2
 496:FATFS/Target/user_diskio_spi.c **** 				*(DWORD*)buff = csize << 10;
 1722              		.loc 1 496 32 view .LVU459
 1723 00b0 9DF80820 		ldrb	r2, [sp, #8]	@ zero_extendqisi2
 496:FATFS/Target/user_diskio_spi.c **** 				*(DWORD*)buff = csize << 10;
 1724              		.loc 1 496 20 view .LVU460
 1725 00b4 03EB0223 		add	r3, r3, r2, lsl #8
 496:FATFS/Target/user_diskio_spi.c **** 				*(DWORD*)buff = csize << 10;
 1726              		.loc 1 496 56 view .LVU461
 1727 00b8 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 496:FATFS/Target/user_diskio_spi.c **** 				*(DWORD*)buff = csize << 10;
 1728              		.loc 1 496 66 view .LVU462
 1729 00bc 1204     		lsls	r2, r2, #16
 1730 00be 02F47C12 		and	r2, r2, #4128768
 496:FATFS/Target/user_diskio_spi.c **** 				*(DWORD*)buff = csize << 10;
 1731              		.loc 1 496 42 view .LVU463
 1732 00c2 1344     		add	r3, r3, r2
 496:FATFS/Target/user_diskio_spi.c **** 				*(DWORD*)buff = csize << 10;
ARM GAS  /tmp/ccDHyNL9.s 			page 45


 1733              		.loc 1 496 11 view .LVU464
 1734 00c4 0133     		adds	r3, r3, #1
 1735              	.LVL190:
 497:FATFS/Target/user_diskio_spi.c **** 			} else {					/* SDC ver 1.XX or MMC ver 3 */
 1736              		.loc 1 497 5 is_stmt 1 view .LVU465
 497:FATFS/Target/user_diskio_spi.c **** 			} else {					/* SDC ver 1.XX or MMC ver 3 */
 1737              		.loc 1 497 27 is_stmt 0 view .LVU466
 1738 00c6 9B02     		lsls	r3, r3, #10
 1739              	.LVL191:
 497:FATFS/Target/user_diskio_spi.c **** 			} else {					/* SDC ver 1.XX or MMC ver 3 */
 1740              		.loc 1 497 19 view .LVU467
 1741 00c8 3360     		str	r3, [r6]
 1742              	.LVL192:
 497:FATFS/Target/user_diskio_spi.c **** 			} else {					/* SDC ver 1.XX or MMC ver 3 */
 1743              		.loc 1 497 19 view .LVU468
 1744 00ca BEE7     		b	.L151
 1745              	.LVL193:
 1746              	.L154:
 508:FATFS/Target/user_diskio_spi.c **** 			if (send_cmd(ACMD13, 0) == 0) {	/* Read SD status */
 1747              		.loc 1 508 3 is_stmt 1 view .LVU469
 508:FATFS/Target/user_diskio_spi.c **** 			if (send_cmd(ACMD13, 0) == 0) {	/* Read SD status */
 1748              		.loc 1 508 16 is_stmt 0 view .LVU470
 1749 00cc 544B     		ldr	r3, .L189+4
 1750 00ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 508:FATFS/Target/user_diskio_spi.c **** 			if (send_cmd(ACMD13, 0) == 0) {	/* Read SD status */
 1751              		.loc 1 508 6 view .LVU471
 1752 00d0 13F0040F 		tst	r3, #4
 1753 00d4 20D0     		beq	.L158
 509:FATFS/Target/user_diskio_spi.c **** 				xchg_spi(0xFF);
 1754              		.loc 1 509 4 is_stmt 1 view .LVU472
 509:FATFS/Target/user_diskio_spi.c **** 				xchg_spi(0xFF);
 1755              		.loc 1 509 8 is_stmt 0 view .LVU473
 1756 00d6 0021     		movs	r1, #0
 1757              	.LVL194:
 509:FATFS/Target/user_diskio_spi.c **** 				xchg_spi(0xFF);
 1758              		.loc 1 509 8 view .LVU474
 1759 00d8 8D20     		movs	r0, #141
 1760              	.LVL195:
 509:FATFS/Target/user_diskio_spi.c **** 				xchg_spi(0xFF);
 1761              		.loc 1 509 8 view .LVU475
 1762 00da FFF7FEFF 		bl	send_cmd
 1763              	.LVL196:
 509:FATFS/Target/user_diskio_spi.c **** 				xchg_spi(0xFF);
 1764              		.loc 1 509 7 view .LVU476
 1765 00de 08B1     		cbz	r0, .L183
 486:FATFS/Target/user_diskio_spi.c **** 
 1766              		.loc 1 486 6 view .LVU477
 1767 00e0 0124     		movs	r4, #1
 1768 00e2 B2E7     		b	.L151
 1769              	.L183:
 510:FATFS/Target/user_diskio_spi.c **** 				if (rcvr_datablock(csd, 16)) {				/* Read partial block */
 1770              		.loc 1 510 5 is_stmt 1 view .LVU478
 1771 00e4 FF20     		movs	r0, #255
 1772 00e6 FFF7FEFF 		bl	xchg_spi
 1773              	.LVL197:
 511:FATFS/Target/user_diskio_spi.c **** 					for (n = 64 - 16; n; n--) xchg_spi(0xFF);	/* Purge trailing data */
 1774              		.loc 1 511 5 view .LVU479
ARM GAS  /tmp/ccDHyNL9.s 			page 46


 511:FATFS/Target/user_diskio_spi.c **** 					for (n = 64 - 16; n; n--) xchg_spi(0xFF);	/* Purge trailing data */
 1775              		.loc 1 511 9 is_stmt 0 view .LVU480
 1776 00ea 1021     		movs	r1, #16
 1777 00ec 6846     		mov	r0, sp
 1778 00ee FFF7FEFF 		bl	rcvr_datablock
 1779              	.LVL198:
 511:FATFS/Target/user_diskio_spi.c **** 					for (n = 64 - 16; n; n--) xchg_spi(0xFF);	/* Purge trailing data */
 1780              		.loc 1 511 8 view .LVU481
 1781 00f2 78B9     		cbnz	r0, .L171
 486:FATFS/Target/user_diskio_spi.c **** 
 1782              		.loc 1 486 6 view .LVU482
 1783 00f4 0124     		movs	r4, #1
 1784 00f6 A8E7     		b	.L151
 1785              	.LVL199:
 1786              	.L160:
 512:FATFS/Target/user_diskio_spi.c **** 					*(DWORD*)buff = 16UL << (csd[10] >> 4);
 1787              		.loc 1 512 32 is_stmt 1 discriminator 3 view .LVU483
 1788 00f8 FF20     		movs	r0, #255
 1789 00fa FFF7FEFF 		bl	xchg_spi
 1790              	.LVL200:
 512:FATFS/Target/user_diskio_spi.c **** 					*(DWORD*)buff = 16UL << (csd[10] >> 4);
 1791              		.loc 1 512 27 discriminator 3 view .LVU484
 512:FATFS/Target/user_diskio_spi.c **** 					*(DWORD*)buff = 16UL << (csd[10] >> 4);
 1792              		.loc 1 512 28 is_stmt 0 discriminator 3 view .LVU485
 1793 00fe 013C     		subs	r4, r4, #1
 1794              	.LVL201:
 512:FATFS/Target/user_diskio_spi.c **** 					*(DWORD*)buff = 16UL << (csd[10] >> 4);
 1795              		.loc 1 512 28 discriminator 3 view .LVU486
 1796 0100 E4B2     		uxtb	r4, r4
 1797              	.LVL202:
 1798              	.L159:
 512:FATFS/Target/user_diskio_spi.c **** 					*(DWORD*)buff = 16UL << (csd[10] >> 4);
 1799              		.loc 1 512 24 is_stmt 1 discriminator 1 view .LVU487
 512:FATFS/Target/user_diskio_spi.c **** 					*(DWORD*)buff = 16UL << (csd[10] >> 4);
 1800              		.loc 1 512 6 is_stmt 0 discriminator 1 view .LVU488
 1801 0102 002C     		cmp	r4, #0
 1802 0104 F8D1     		bne	.L160
 513:FATFS/Target/user_diskio_spi.c **** 					res = RES_OK;
 1803              		.loc 1 513 6 is_stmt 1 view .LVU489
 513:FATFS/Target/user_diskio_spi.c **** 					res = RES_OK;
 1804              		.loc 1 513 34 is_stmt 0 view .LVU490
 1805 0106 9DF80A30 		ldrb	r3, [sp, #10]	@ zero_extendqisi2
 513:FATFS/Target/user_diskio_spi.c **** 					res = RES_OK;
 1806              		.loc 1 513 39 view .LVU491
 1807 010a 1A09     		lsrs	r2, r3, #4
 513:FATFS/Target/user_diskio_spi.c **** 					res = RES_OK;
 1808              		.loc 1 513 27 view .LVU492
 1809 010c 1023     		movs	r3, #16
 1810 010e 9340     		lsls	r3, r3, r2
 513:FATFS/Target/user_diskio_spi.c **** 					res = RES_OK;
 1811              		.loc 1 513 20 view .LVU493
 1812 0110 3360     		str	r3, [r6]
 514:FATFS/Target/user_diskio_spi.c **** 				}
 1813              		.loc 1 514 6 is_stmt 1 view .LVU494
 1814              	.LVL203:
 514:FATFS/Target/user_diskio_spi.c **** 				}
 1815              		.loc 1 514 6 is_stmt 0 view .LVU495
ARM GAS  /tmp/ccDHyNL9.s 			page 47


 1816 0112 9AE7     		b	.L151
 1817              	.LVL204:
 1818              	.L171:
 512:FATFS/Target/user_diskio_spi.c **** 					*(DWORD*)buff = 16UL << (csd[10] >> 4);
 1819              		.loc 1 512 13 view .LVU496
 1820 0114 3024     		movs	r4, #48
 1821 0116 F4E7     		b	.L159
 1822              	.LVL205:
 1823              	.L158:
 518:FATFS/Target/user_diskio_spi.c **** 				if (CardType & CT_SD1) {	/* SDC ver 1.XX */
 1824              		.loc 1 518 4 is_stmt 1 view .LVU497
 518:FATFS/Target/user_diskio_spi.c **** 				if (CardType & CT_SD1) {	/* SDC ver 1.XX */
 1825              		.loc 1 518 9 is_stmt 0 view .LVU498
 1826 0118 0021     		movs	r1, #0
 1827              	.LVL206:
 518:FATFS/Target/user_diskio_spi.c **** 				if (CardType & CT_SD1) {	/* SDC ver 1.XX */
 1828              		.loc 1 518 9 view .LVU499
 1829 011a 0920     		movs	r0, #9
 1830              	.LVL207:
 518:FATFS/Target/user_diskio_spi.c **** 				if (CardType & CT_SD1) {	/* SDC ver 1.XX */
 1831              		.loc 1 518 9 view .LVU500
 1832 011c FFF7FEFF 		bl	send_cmd
 1833              	.LVL208:
 518:FATFS/Target/user_diskio_spi.c **** 				if (CardType & CT_SD1) {	/* SDC ver 1.XX */
 1834              		.loc 1 518 7 view .LVU501
 1835 0120 0546     		mov	r5, r0
 1836 0122 08B1     		cbz	r0, .L184
 486:FATFS/Target/user_diskio_spi.c **** 
 1837              		.loc 1 486 6 view .LVU502
 1838 0124 0124     		movs	r4, #1
 1839 0126 90E7     		b	.L151
 1840              	.L184:
 518:FATFS/Target/user_diskio_spi.c **** 				if (CardType & CT_SD1) {	/* SDC ver 1.XX */
 1841              		.loc 1 518 36 discriminator 1 view .LVU503
 1842 0128 1021     		movs	r1, #16
 1843 012a 6846     		mov	r0, sp
 1844 012c FFF7FEFF 		bl	rcvr_datablock
 1845              	.LVL209:
 518:FATFS/Target/user_diskio_spi.c **** 				if (CardType & CT_SD1) {	/* SDC ver 1.XX */
 1846              		.loc 1 518 33 discriminator 1 view .LVU504
 1847 0130 0028     		cmp	r0, #0
 1848 0132 68D0     		beq	.L173
 519:FATFS/Target/user_diskio_spi.c **** 					*(DWORD*)buff = (((csd[10] & 63) << 1) + ((WORD)(csd[11] & 128) >> 7) + 1) << ((csd[13] >> 6) 
 1849              		.loc 1 519 5 is_stmt 1 view .LVU505
 519:FATFS/Target/user_diskio_spi.c **** 					*(DWORD*)buff = (((csd[10] & 63) << 1) + ((WORD)(csd[11] & 128) >> 7) + 1) << ((csd[13] >> 6) 
 1850              		.loc 1 519 18 is_stmt 0 view .LVU506
 1851 0134 3A4B     		ldr	r3, .L189+4
 1852 0136 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 519:FATFS/Target/user_diskio_spi.c **** 					*(DWORD*)buff = (((csd[10] & 63) << 1) + ((WORD)(csd[11] & 128) >> 7) + 1) << ((csd[13] >> 6) 
 1853              		.loc 1 519 8 view .LVU507
 1854 0138 14F00204 		ands	r4, r4, #2
 1855 013c 11D0     		beq	.L161
 520:FATFS/Target/user_diskio_spi.c **** 				} else {					/* MMC */
 1856              		.loc 1 520 6 is_stmt 1 view .LVU508
 520:FATFS/Target/user_diskio_spi.c **** 				} else {					/* MMC */
 1857              		.loc 1 520 28 is_stmt 0 view .LVU509
 1858 013e 9DF80A30 		ldrb	r3, [sp, #10]	@ zero_extendqisi2
ARM GAS  /tmp/ccDHyNL9.s 			page 48


 520:FATFS/Target/user_diskio_spi.c **** 				} else {					/* MMC */
 1859              		.loc 1 520 39 view .LVU510
 1860 0142 5B00     		lsls	r3, r3, #1
 1861 0144 03F07E03 		and	r3, r3, #126
 520:FATFS/Target/user_diskio_spi.c **** 				} else {					/* MMC */
 1862              		.loc 1 520 58 view .LVU511
 1863 0148 9DF80B20 		ldrb	r2, [sp, #11]	@ zero_extendqisi2
 520:FATFS/Target/user_diskio_spi.c **** 				} else {					/* MMC */
 1864              		.loc 1 520 45 view .LVU512
 1865 014c 03EBD213 		add	r3, r3, r2, lsr #7
 520:FATFS/Target/user_diskio_spi.c **** 				} else {					/* MMC */
 1866              		.loc 1 520 76 view .LVU513
 1867 0150 0133     		adds	r3, r3, #1
 520:FATFS/Target/user_diskio_spi.c **** 				} else {					/* MMC */
 1868              		.loc 1 520 89 view .LVU514
 1869 0152 9DF80D20 		ldrb	r2, [sp, #13]	@ zero_extendqisi2
 520:FATFS/Target/user_diskio_spi.c **** 				} else {					/* MMC */
 1870              		.loc 1 520 94 view .LVU515
 1871 0156 9209     		lsrs	r2, r2, #6
 520:FATFS/Target/user_diskio_spi.c **** 				} else {					/* MMC */
 1872              		.loc 1 520 100 view .LVU516
 1873 0158 013A     		subs	r2, r2, #1
 520:FATFS/Target/user_diskio_spi.c **** 				} else {					/* MMC */
 1874              		.loc 1 520 81 view .LVU517
 1875 015a 9340     		lsls	r3, r3, r2
 520:FATFS/Target/user_diskio_spi.c **** 				} else {					/* MMC */
 1876              		.loc 1 520 20 view .LVU518
 1877 015c 3360     		str	r3, [r6]
 524:FATFS/Target/user_diskio_spi.c **** 			}
 1878              		.loc 1 524 9 view .LVU519
 1879 015e 2C46     		mov	r4, r5
 1880 0160 73E7     		b	.L151
 1881              	.L161:
 522:FATFS/Target/user_diskio_spi.c **** 				}
 1882              		.loc 1 522 6 is_stmt 1 view .LVU520
 522:FATFS/Target/user_diskio_spi.c **** 				}
 1883              		.loc 1 522 34 is_stmt 0 view .LVU521
 1884 0162 9DF80A30 		ldrb	r3, [sp, #10]	@ zero_extendqisi2
 522:FATFS/Target/user_diskio_spi.c **** 				}
 1885              		.loc 1 522 23 view .LVU522
 1886 0166 C3F38402 		ubfx	r2, r3, #2, #5
 522:FATFS/Target/user_diskio_spi.c **** 				}
 1887              		.loc 1 522 65 view .LVU523
 1888 016a 9DF80B10 		ldrb	r1, [sp, #11]	@ zero_extendqisi2
 522:FATFS/Target/user_diskio_spi.c **** 				}
 1889              		.loc 1 522 75 view .LVU524
 1890 016e CB00     		lsls	r3, r1, #3
 1891 0170 03F01803 		and	r3, r3, #24
 522:FATFS/Target/user_diskio_spi.c **** 				}
 1892              		.loc 1 522 81 view .LVU525
 1893 0174 03EB5113 		add	r3, r3, r1, lsr #5
 522:FATFS/Target/user_diskio_spi.c **** 				}
 1894              		.loc 1 522 106 view .LVU526
 1895 0178 0133     		adds	r3, r3, #1
 522:FATFS/Target/user_diskio_spi.c **** 				}
 1896              		.loc 1 522 57 view .LVU527
 1897 017a 02FB0333 		mla	r3, r2, r3, r3
ARM GAS  /tmp/ccDHyNL9.s 			page 49


 522:FATFS/Target/user_diskio_spi.c **** 				}
 1898              		.loc 1 522 20 view .LVU528
 1899 017e 3360     		str	r3, [r6]
 1900 0180 63E7     		b	.L151
 1901              	.LVL210:
 1902              	.L152:
 530:FATFS/Target/user_diskio_spi.c **** 		if (USER_SPI_ioctl(drv, MMC_GET_CSD, csd)) break;	/* Get CSD */
 1903              		.loc 1 530 3 is_stmt 1 view .LVU529
 530:FATFS/Target/user_diskio_spi.c **** 		if (USER_SPI_ioctl(drv, MMC_GET_CSD, csd)) break;	/* Get CSD */
 1904              		.loc 1 530 18 is_stmt 0 view .LVU530
 1905 0182 274B     		ldr	r3, .L189+4
 1906 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 530:FATFS/Target/user_diskio_spi.c **** 		if (USER_SPI_ioctl(drv, MMC_GET_CSD, csd)) break;	/* Get CSD */
 1907              		.loc 1 530 6 view .LVU531
 1908 0186 13F0060F 		tst	r3, #6
 1909 018a 01D1     		bne	.L185
 486:FATFS/Target/user_diskio_spi.c **** 
 1910              		.loc 1 486 6 view .LVU532
 1911 018c 0124     		movs	r4, #1
 1912 018e 5CE7     		b	.L151
 1913              	.L185:
 531:FATFS/Target/user_diskio_spi.c **** 		if (!(csd[0] >> 6) && !(csd[10] & 0x40)) break;	/* Check if sector erase can be applied to the ca
 1914              		.loc 1 531 3 is_stmt 1 view .LVU533
 531:FATFS/Target/user_diskio_spi.c **** 		if (!(csd[0] >> 6) && !(csd[10] & 0x40)) break;	/* Check if sector erase can be applied to the ca
 1915              		.loc 1 531 7 is_stmt 0 view .LVU534
 1916 0190 6A46     		mov	r2, sp
 1917              	.LVL211:
 531:FATFS/Target/user_diskio_spi.c **** 		if (!(csd[0] >> 6) && !(csd[10] & 0x40)) break;	/* Check if sector erase can be applied to the ca
 1918              		.loc 1 531 7 view .LVU535
 1919 0192 0B21     		movs	r1, #11
 1920              	.LVL212:
 531:FATFS/Target/user_diskio_spi.c **** 		if (!(csd[0] >> 6) && !(csd[10] & 0x40)) break;	/* Check if sector erase can be applied to the ca
 1921              		.loc 1 531 7 view .LVU536
 1922 0194 FFF7FEFF 		bl	USER_SPI_ioctl
 1923              	.LVL213:
 531:FATFS/Target/user_diskio_spi.c **** 		if (!(csd[0] >> 6) && !(csd[10] & 0x40)) break;	/* Check if sector erase can be applied to the ca
 1924              		.loc 1 531 6 view .LVU537
 1925 0198 B8BB     		cbnz	r0, .L175
 532:FATFS/Target/user_diskio_spi.c **** 		dp = buff; st = dp[0]; ed = dp[1];				/* Load sector block */
 1926              		.loc 1 532 3 is_stmt 1 view .LVU538
 532:FATFS/Target/user_diskio_spi.c **** 		dp = buff; st = dp[0]; ed = dp[1];				/* Load sector block */
 1927              		.loc 1 532 12 is_stmt 0 view .LVU539
 1928 019a 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
 532:FATFS/Target/user_diskio_spi.c **** 		dp = buff; st = dp[0]; ed = dp[1];				/* Load sector block */
 1929              		.loc 1 532 6 view .LVU540
 1930 019e 9B09     		lsrs	r3, r3, #6
 1931 01a0 04D1     		bne	.L162
 532:FATFS/Target/user_diskio_spi.c **** 		dp = buff; st = dp[0]; ed = dp[1];				/* Load sector block */
 1932              		.loc 1 532 30 discriminator 1 view .LVU541
 1933 01a2 9DF80A30 		ldrb	r3, [sp, #10]	@ zero_extendqisi2
 532:FATFS/Target/user_diskio_spi.c **** 		dp = buff; st = dp[0]; ed = dp[1];				/* Load sector block */
 1934              		.loc 1 532 22 discriminator 1 view .LVU542
 1935 01a6 13F0400F 		tst	r3, #64
 1936 01aa 30D0     		beq	.L176
 1937              	.L162:
 533:FATFS/Target/user_diskio_spi.c **** 		if (!(CardType & CT_BLOCK)) {
 1938              		.loc 1 533 3 is_stmt 1 view .LVU543
ARM GAS  /tmp/ccDHyNL9.s 			page 50


 1939              	.LVL214:
 533:FATFS/Target/user_diskio_spi.c **** 		if (!(CardType & CT_BLOCK)) {
 1940              		.loc 1 533 14 view .LVU544
 533:FATFS/Target/user_diskio_spi.c **** 		if (!(CardType & CT_BLOCK)) {
 1941              		.loc 1 533 17 is_stmt 0 view .LVU545
 1942 01ac 3168     		ldr	r1, [r6]
 1943              	.LVL215:
 533:FATFS/Target/user_diskio_spi.c **** 		if (!(CardType & CT_BLOCK)) {
 1944              		.loc 1 533 26 is_stmt 1 view .LVU546
 533:FATFS/Target/user_diskio_spi.c **** 		if (!(CardType & CT_BLOCK)) {
 1945              		.loc 1 533 29 is_stmt 0 view .LVU547
 1946 01ae 7468     		ldr	r4, [r6, #4]
 1947              	.LVL216:
 534:FATFS/Target/user_diskio_spi.c **** 			st *= 512; ed *= 512;
 1948              		.loc 1 534 3 is_stmt 1 view .LVU548
 534:FATFS/Target/user_diskio_spi.c **** 			st *= 512; ed *= 512;
 1949              		.loc 1 534 18 is_stmt 0 view .LVU549
 1950 01b0 1B4B     		ldr	r3, .L189+4
 1951 01b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 534:FATFS/Target/user_diskio_spi.c **** 			st *= 512; ed *= 512;
 1952              		.loc 1 534 6 view .LVU550
 1953 01b4 13F0080F 		tst	r3, #8
 1954 01b8 01D1     		bne	.L163
 535:FATFS/Target/user_diskio_spi.c **** 		}
 1955              		.loc 1 535 4 is_stmt 1 view .LVU551
 535:FATFS/Target/user_diskio_spi.c **** 		}
 1956              		.loc 1 535 7 is_stmt 0 view .LVU552
 1957 01ba 4902     		lsls	r1, r1, #9
 1958              	.LVL217:
 535:FATFS/Target/user_diskio_spi.c **** 		}
 1959              		.loc 1 535 15 is_stmt 1 view .LVU553
 535:FATFS/Target/user_diskio_spi.c **** 		}
 1960              		.loc 1 535 18 is_stmt 0 view .LVU554
 1961 01bc 6402     		lsls	r4, r4, #9
 1962              	.LVL218:
 1963              	.L163:
 537:FATFS/Target/user_diskio_spi.c **** 			res = RES_OK;	/* FatFs does not check result of this command */
 1964              		.loc 1 537 3 is_stmt 1 view .LVU555
 537:FATFS/Target/user_diskio_spi.c **** 			res = RES_OK;	/* FatFs does not check result of this command */
 1965              		.loc 1 537 7 is_stmt 0 view .LVU556
 1966 01be 2020     		movs	r0, #32
 1967 01c0 FFF7FEFF 		bl	send_cmd
 1968              	.LVL219:
 537:FATFS/Target/user_diskio_spi.c **** 			res = RES_OK;	/* FatFs does not check result of this command */
 1969              		.loc 1 537 6 view .LVU557
 1970 01c4 08B1     		cbz	r0, .L186
 486:FATFS/Target/user_diskio_spi.c **** 
 1971              		.loc 1 486 6 view .LVU558
 1972 01c6 0124     		movs	r4, #1
 1973              	.LVL220:
 486:FATFS/Target/user_diskio_spi.c **** 
 1974              		.loc 1 486 6 view .LVU559
 1975 01c8 3FE7     		b	.L151
 1976              	.LVL221:
 1977              	.L186:
 537:FATFS/Target/user_diskio_spi.c **** 			res = RES_OK;	/* FatFs does not check result of this command */
 1978              		.loc 1 537 35 discriminator 1 view .LVU560
ARM GAS  /tmp/ccDHyNL9.s 			page 51


 1979 01ca 2146     		mov	r1, r4
 1980 01cc 2120     		movs	r0, #33
 1981 01ce FFF7FEFF 		bl	send_cmd
 1982              	.LVL222:
 537:FATFS/Target/user_diskio_spi.c **** 			res = RES_OK;	/* FatFs does not check result of this command */
 1983              		.loc 1 537 32 discriminator 1 view .LVU561
 1984 01d2 08B1     		cbz	r0, .L187
 486:FATFS/Target/user_diskio_spi.c **** 
 1985              		.loc 1 486 6 view .LVU562
 1986 01d4 0124     		movs	r4, #1
 1987              	.LVL223:
 486:FATFS/Target/user_diskio_spi.c **** 
 1988              		.loc 1 486 6 view .LVU563
 1989 01d6 38E7     		b	.L151
 1990              	.LVL224:
 1991              	.L187:
 537:FATFS/Target/user_diskio_spi.c **** 			res = RES_OK;	/* FatFs does not check result of this command */
 1992              		.loc 1 537 63 discriminator 2 view .LVU564
 1993 01d8 0021     		movs	r1, #0
 1994 01da 2620     		movs	r0, #38
 1995 01dc FFF7FEFF 		bl	send_cmd
 1996              	.LVL225:
 537:FATFS/Target/user_diskio_spi.c **** 			res = RES_OK;	/* FatFs does not check result of this command */
 1997              		.loc 1 537 60 discriminator 2 view .LVU565
 1998 01e0 0446     		mov	r4, r0
 1999              	.LVL226:
 537:FATFS/Target/user_diskio_spi.c **** 			res = RES_OK;	/* FatFs does not check result of this command */
 2000              		.loc 1 537 60 discriminator 2 view .LVU566
 2001 01e2 08B1     		cbz	r0, .L188
 486:FATFS/Target/user_diskio_spi.c **** 
 2002              		.loc 1 486 6 view .LVU567
 2003 01e4 0124     		movs	r4, #1
 2004 01e6 30E7     		b	.L151
 2005              	.L188:
 537:FATFS/Target/user_diskio_spi.c **** 			res = RES_OK;	/* FatFs does not check result of this command */
 2006              		.loc 1 537 90 discriminator 3 view .LVU568
 2007 01e8 47F23050 		movw	r0, #30000
 2008 01ec FFF7FEFF 		bl	wait_ready
 2009              	.LVL227:
 537:FATFS/Target/user_diskio_spi.c **** 			res = RES_OK;	/* FatFs does not check result of this command */
 2010              		.loc 1 537 87 discriminator 3 view .LVU569
 2011 01f0 0028     		cmp	r0, #0
 2012 01f2 7FF42AAF 		bne	.L151
 486:FATFS/Target/user_diskio_spi.c **** 
 2013              		.loc 1 486 6 view .LVU570
 2014 01f6 0124     		movs	r4, #1
 2015 01f8 27E7     		b	.L151
 2016              	.LVL228:
 2017              	.L166:
 484:FATFS/Target/user_diskio_spi.c **** 
 2018              		.loc 1 484 5 view .LVU571
 2019 01fa 0424     		movs	r4, #4
 2020 01fc 25E7     		b	.L151
 2021              	.LVL229:
 2022              	.L167:
 490:FATFS/Target/user_diskio_spi.c **** 		break;
 2023              		.loc 1 490 24 view .LVU572
ARM GAS  /tmp/ccDHyNL9.s 			page 52


 2024 01fe 2C46     		mov	r4, r5
 2025 0200 23E7     		b	.L151
 2026              	.L169:
 486:FATFS/Target/user_diskio_spi.c **** 
 2027              		.loc 1 486 6 view .LVU573
 2028 0202 2C46     		mov	r4, r5
 2029 0204 21E7     		b	.L151
 2030              	.L173:
 2031 0206 0124     		movs	r4, #1
 2032 0208 1FE7     		b	.L151
 2033              	.L175:
 2034 020a 0124     		movs	r4, #1
 2035 020c 1DE7     		b	.L151
 2036              	.L176:
 2037 020e 0124     		movs	r4, #1
 2038 0210 1BE7     		b	.L151
 2039              	.LVL230:
 2040              	.L164:
 483:FATFS/Target/user_diskio_spi.c **** 	if (Stat & STA_NOINIT) return RES_NOTRDY;	/* Check if drive is ready */
 2041              		.loc 1 483 18 view .LVU574
 2042 0212 0424     		movs	r4, #4
 2043 0214 1BE7     		b	.L150
 2044              	.L165:
 484:FATFS/Target/user_diskio_spi.c **** 
 2045              		.loc 1 484 32 view .LVU575
 2046 0216 0324     		movs	r4, #3
 2047 0218 19E7     		b	.L150
 2048              	.L190:
 2049 021a 00BF     		.align	2
 2050              	.L189:
 2051 021c 00000000 		.word	.LANCHOR0
 2052 0220 00000000 		.word	.LANCHOR1
 2053              		.cfi_endproc
 2054              	.LFE80:
 2056              		.comm	spiTimerTickDelay,4,4
 2057              		.comm	spiTimerTickStart,4,4
 2058              		.section	.bss.CardType,"aw",%nobits
 2059              		.set	.LANCHOR1,. + 0
 2062              	CardType:
 2063 0000 00       		.space	1
 2064              		.section	.data.Stat,"aw"
 2065              		.set	.LANCHOR0,. + 0
 2068              	Stat:
 2069 0000 01       		.byte	1
 2070              		.text
 2071              	.Letext0:
 2072              		.file 2 "/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/machine/_default_types.h"
 2073              		.file 3 "/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/_stdint.h"
 2074              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 2075              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 2076              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 2077              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 2078              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 2079              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 2080              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 2081              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 2082              		.file 12 "Middlewares/Third_Party/FatFs/src/integer.h"
ARM GAS  /tmp/ccDHyNL9.s 			page 53


 2083              		.file 13 "Middlewares/Third_Party/FatFs/src/diskio.h"
ARM GAS  /tmp/ccDHyNL9.s 			page 54


DEFINED SYMBOLS
                            *ABS*:0000000000000000 user_diskio_spi.c
     /tmp/ccDHyNL9.s:16     .text.xchg_spi:0000000000000000 $t
     /tmp/ccDHyNL9.s:23     .text.xchg_spi:0000000000000000 xchg_spi
     /tmp/ccDHyNL9.s:63     .text.xchg_spi:0000000000000028 $d
     /tmp/ccDHyNL9.s:68     .text.wait_ready:0000000000000000 $t
     /tmp/ccDHyNL9.s:74     .text.wait_ready:0000000000000000 wait_ready
     /tmp/ccDHyNL9.s:135    .text.rcvr_spi_multi:0000000000000000 $t
     /tmp/ccDHyNL9.s:141    .text.rcvr_spi_multi:0000000000000000 rcvr_spi_multi
     /tmp/ccDHyNL9.s:193    .text.xmit_spi_multi:0000000000000000 $t
     /tmp/ccDHyNL9.s:199    .text.xmit_spi_multi:0000000000000000 xmit_spi_multi
     /tmp/ccDHyNL9.s:248    .text.xmit_datablock:0000000000000000 $t
     /tmp/ccDHyNL9.s:254    .text.xmit_datablock:0000000000000000 xmit_datablock
     /tmp/ccDHyNL9.s:334    .text.despiselect:0000000000000000 $t
     /tmp/ccDHyNL9.s:340    .text.despiselect:0000000000000000 despiselect
     /tmp/ccDHyNL9.s:367    .text.despiselect:0000000000000014 $d
     /tmp/ccDHyNL9.s:372    .text.spiselect:0000000000000000 $t
     /tmp/ccDHyNL9.s:378    .text.spiselect:0000000000000000 spiselect
     /tmp/ccDHyNL9.s:424    .text.spiselect:000000000000002c $d
     /tmp/ccDHyNL9.s:429    .text.send_cmd:0000000000000000 $t
     /tmp/ccDHyNL9.s:435    .text.send_cmd:0000000000000000 send_cmd
     /tmp/ccDHyNL9.s:584    .text.SPI_Timer_On:0000000000000000 $t
     /tmp/ccDHyNL9.s:591    .text.SPI_Timer_On:0000000000000000 SPI_Timer_On
     /tmp/ccDHyNL9.s:623    .text.SPI_Timer_On:0000000000000014 $d
                            *COM*:0000000000000004 spiTimerTickStart
                            *COM*:0000000000000004 spiTimerTickDelay
     /tmp/ccDHyNL9.s:629    .text.SPI_Timer_Status:0000000000000000 $t
     /tmp/ccDHyNL9.s:636    .text.SPI_Timer_Status:0000000000000000 SPI_Timer_Status
     /tmp/ccDHyNL9.s:667    .text.SPI_Timer_Status:000000000000001c $d
     /tmp/ccDHyNL9.s:673    .text.rcvr_datablock:0000000000000000 $t
     /tmp/ccDHyNL9.s:679    .text.rcvr_datablock:0000000000000000 rcvr_datablock
     /tmp/ccDHyNL9.s:755    .text.USER_SPI_initialize:0000000000000000 $t
     /tmp/ccDHyNL9.s:762    .text.USER_SPI_initialize:0000000000000000 USER_SPI_initialize
     /tmp/ccDHyNL9.s:1113   .text.USER_SPI_initialize:000000000000015c $d
     /tmp/ccDHyNL9.s:1120   .text.USER_SPI_status:0000000000000000 $t
     /tmp/ccDHyNL9.s:1127   .text.USER_SPI_status:0000000000000000 USER_SPI_status
     /tmp/ccDHyNL9.s:1156   .text.USER_SPI_status:0000000000000010 $d
     /tmp/ccDHyNL9.s:1161   .text.USER_SPI_read:0000000000000000 $t
     /tmp/ccDHyNL9.s:1168   .text.USER_SPI_read:0000000000000000 USER_SPI_read
     /tmp/ccDHyNL9.s:1331   .text.USER_SPI_read:0000000000000084 $d
     /tmp/ccDHyNL9.s:1337   .text.USER_SPI_write:0000000000000000 $t
     /tmp/ccDHyNL9.s:1344   .text.USER_SPI_write:0000000000000000 USER_SPI_write
     /tmp/ccDHyNL9.s:1546   .text.USER_SPI_write:00000000000000a8 $d
     /tmp/ccDHyNL9.s:1552   .text.USER_SPI_ioctl:0000000000000000 $t
     /tmp/ccDHyNL9.s:1559   .text.USER_SPI_ioctl:0000000000000000 USER_SPI_ioctl
     /tmp/ccDHyNL9.s:1600   .text.USER_SPI_ioctl:0000000000000024 $d
     /tmp/ccDHyNL9.s:1605   .text.USER_SPI_ioctl:000000000000002e $t
     /tmp/ccDHyNL9.s:2051   .text.USER_SPI_ioctl:000000000000021c $d
     /tmp/ccDHyNL9.s:2062   .bss.CardType:0000000000000000 CardType
     /tmp/ccDHyNL9.s:2063   .bss.CardType:0000000000000000 $d
     /tmp/ccDHyNL9.s:2068   .data.Stat:0000000000000000 Stat

UNDEFINED SYMBOLS
HAL_SPI_TransmitReceive
hspi2
HAL_GetTick
HAL_GPIO_WritePin
ARM GAS  /tmp/ccDHyNL9.s 			page 55


