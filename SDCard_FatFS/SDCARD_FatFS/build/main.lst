ARM GAS  /tmp/ccb0q6Ap.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB75:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include <stdio.h>
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "fatfs.h"
  23:Core/Src/main.c **** #include "usb_device.h"
  24:Core/Src/main.c **** #include "ArduCAM.h"
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* USER CODE END Includes */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** 
ARM GAS  /tmp/ccb0q6Ap.s 			page 2


  34:Core/Src/main.c **** /* USER CODE END PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PD */
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  49:Core/Src/main.c **** SPI_HandleTypeDef hspi2;
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** UART_HandleTypeDef huart1;
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE BEGIN PV */
  56:Core/Src/main.c **** char buf[2048] = {0};
  57:Core/Src/main.c **** /* USER CODE END PV */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  60:Core/Src/main.c **** void SystemClock_Config(void);
  61:Core/Src/main.c **** static void MX_GPIO_Init(void);
  62:Core/Src/main.c **** static void MX_SPI2_Init(void);
  63:Core/Src/main.c **** static void MX_I2C1_Init(void);
  64:Core/Src/main.c **** static void MX_SPI1_Init(void);
  65:Core/Src/main.c **** static void MX_TIM1_Init(void);
  66:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  67:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  68:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE int __io_putchar(int ch)
  69:Core/Src/main.c **** /* USER CODE END PFP */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  72:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** /* USER CODE END 0 */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c **** /**
  77:Core/Src/main.c ****  * @brief  The application entry point.
  78:Core/Src/main.c ****  * @retval int
  79:Core/Src/main.c ****  */
  80:Core/Src/main.c **** int main(void)
  81:Core/Src/main.c **** {
  82:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE END 1 */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  89:Core/Src/main.c ****   HAL_Init();
  90:Core/Src/main.c **** 
ARM GAS  /tmp/ccb0q6Ap.s 			page 3


  91:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE END Init */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* Configure the system clock */
  96:Core/Src/main.c ****   SystemClock_Config();
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* USER CODE END SysInit */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* Initialize all configured peripherals */
 103:Core/Src/main.c ****   MX_GPIO_Init();
 104:Core/Src/main.c ****   MX_SPI2_Init();
 105:Core/Src/main.c ****   MX_FATFS_Init();
 106:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 107:Core/Src/main.c ****   MX_I2C1_Init();
 108:Core/Src/main.c ****   MX_SPI1_Init();
 109:Core/Src/main.c ****   //MX_TIM1_Init();
 110:Core/Src/main.c ****   MX_USART1_UART_Init();
 111:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim1);
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 114:Core/Src/main.c ****   sprintf(buf, "\r\n~ SD card demo by kiwih ~\r\n\r\n");
 115:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
 116:Core/Src/main.c ****   HAL_Delay(50); // a short delay is important to let the SD card settle
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   // some variables for FatFs
 119:Core/Src/main.c ****   FATFS FatFs;  // Fatfs handle
 120:Core/Src/main.c ****   FIL fil;      // File handle
 121:Core/Src/main.c ****   FRESULT fres; // Result after operations
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   // Open the file system
 124:Core/Src/main.c ****   fres = f_mount(&FatFs, "", 1); // 1=mount now
 125:Core/Src/main.c ****   if (fres != FR_OK)
 126:Core/Src/main.c ****   {
 127:Core/Src/main.c ****     sprintf(buf, "f_mount error (%i)\r\n", fres);
 128:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
 129:Core/Src/main.c ****     while (1)
 130:Core/Src/main.c ****       ;
 131:Core/Src/main.c ****   }
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   // Let's get some statistics from the SD card
 134:Core/Src/main.c ****   DWORD free_clusters, free_sectors, total_sectors;
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   FATFS *getFreeFs;
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   fres = f_getfree("", &free_clusters, &getFreeFs);
 139:Core/Src/main.c ****   if (fres != FR_OK)
 140:Core/Src/main.c ****   {
 141:Core/Src/main.c ****     sprintf(buf, "f_getfree error (%i)\r\n", fres);
 142:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
 143:Core/Src/main.c ****     while (1)
 144:Core/Src/main.c ****       ;
 145:Core/Src/main.c ****   }
 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****   // Formula comes from ChaN's documentation
ARM GAS  /tmp/ccb0q6Ap.s 			page 4


 148:Core/Src/main.c ****   total_sectors = (getFreeFs->n_fatent - 2) * getFreeFs->csize;
 149:Core/Src/main.c ****   free_sectors = free_clusters * getFreeFs->csize;
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   sprintf(buf, "SD card stats:\r\n%10lu KiB total drive space.\r\n%10lu KiB available.\r\n", total_
 152:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****   // Now let's try to open file "test.txt"
 155:Core/Src/main.c ****   fres = f_open(&fil, "test.txt", FA_READ);
 156:Core/Src/main.c ****   if (fres != FR_OK)
 157:Core/Src/main.c ****   {
 158:Core/Src/main.c ****     sprintf(buf, "f_open error (%i)\r\n", fres);
 159:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****     while (1)
 162:Core/Src/main.c ****       ;
 163:Core/Src/main.c ****   }
 164:Core/Src/main.c ****   sprintf(buf, "I was able to open 'test.txt' for reading!\r\n");
 165:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****   // Read 30 bytes from "test.txt" on the SD card
 168:Core/Src/main.c ****   BYTE readBuf[1024];
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   // We can either use f_read OR f_gets to get data out of files
 171:Core/Src/main.c ****   // f_gets is a wrapper on f_read that does some string formatting for us
 172:Core/Src/main.c ****   TCHAR *rres = f_gets((TCHAR *)readBuf, 30, &fil);
 173:Core/Src/main.c ****   if (rres != 0)
 174:Core/Src/main.c ****   {
 175:Core/Src/main.c ****     sprintf(buf, "Read string from 'test.txt' contents: %s\r\n", readBuf);
 176:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
 177:Core/Src/main.c ****   }
 178:Core/Src/main.c ****   else
 179:Core/Src/main.c ****   {
 180:Core/Src/main.c ****     sprintf(buf, "f_gets error (%i)\r\n", fres);
 181:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
 182:Core/Src/main.c ****   }
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****   // Be a tidy kiwi - don't forget to close your file!
 185:Core/Src/main.c ****   f_close(&fil);
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   // Now let's try and write a file "write.txt"
 188:Core/Src/main.c ****   fres = f_open(&fil, "write.txt", FA_WRITE | FA_OPEN_ALWAYS | FA_CREATE_ALWAYS);
 189:Core/Src/main.c ****   if (fres == FR_OK)
 190:Core/Src/main.c ****   {
 191:Core/Src/main.c ****     sprintf(buf, "I was able to open 'write.txt' for writing\r\n");
 192:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
 193:Core/Src/main.c ****   }
 194:Core/Src/main.c ****   else
 195:Core/Src/main.c ****   {
 196:Core/Src/main.c ****     sprintf(buf, "f_open error (%i)\r\n", fres);
 197:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
 198:Core/Src/main.c ****   }
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****   // Copy in a string
 201:Core/Src/main.c ****   // strncpy((char *)readBuf, "a new file is made!", 19);
 202:Core/Src/main.c ****   sprintf((char *)readBuf, "ovo je prvi red!\r\nOvo je drugi red!\r\nOvo nije u redu....\r\n");
 203:Core/Src/main.c ****   UINT bytesWrote;
 204:Core/Src/main.c ****   fres = f_write(&fil, readBuf, strlen(readBuf), &bytesWrote);
ARM GAS  /tmp/ccb0q6Ap.s 			page 5


 205:Core/Src/main.c ****   if (fres == FR_OK)
 206:Core/Src/main.c ****   {
 207:Core/Src/main.c ****     sprintf(buf, "Wrote %i bytes to 'write.txt'!\r\n", bytesWrote);
 208:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
 209:Core/Src/main.c ****   }
 210:Core/Src/main.c ****   else
 211:Core/Src/main.c ****   {
 212:Core/Src/main.c ****     sprintf(buf, "f_write error (%i)\r\n", fres);
 213:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
 214:Core/Src/main.c ****   }
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****   // Be a tidy kiwi - don't forget to close your file!
 217:Core/Src/main.c ****   f_close(&fil);
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****   // We're done, so de-mount the drive
 220:Core/Src/main.c ****   f_mount(NULL, "", 0);
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****   ArduCAM_CS_init();
 223:Core/Src/main.c **** 
 224:Core/Src/main.c ****   uint8_t vid, pid, temp;
 225:Core/Src/main.c ****   uint8_t Camera_WorkMode = 0;
 226:Core/Src/main.c ****   uint8_t start_shoot = 0;
 227:Core/Src/main.c ****   uint8_t stop = 0;
 228:Core/Src/main.c **** 
 229:Core/Src/main.c ****   while(1)
 230:Core/Src/main.c ****   {
 231:Core/Src/main.c ****     CS_LOW();
 232:Core/Src/main.c ****     uint8_t tx_data[2] = {0x80 | ARDUCHIP_TEST1, 0x55};
 233:Core/Src/main.c ****     uint8_t rx_data = 0x00;
 234:Core/Src/main.c ****     HAL_SPI_Transmit(&hspi1,tx_data,2,100);
 235:Core/Src/main.c ****     HAL_SPI_Receive(&hspi1,&rx_data,1,100);
 236:Core/Src/main.c ****     CS_HIGH();
 237:Core/Src/main.c ****     if (rx_data == 0x55) break;
 238:Core/Src/main.c ****   }
 239:Core/Src/main.c ****   HAL_UART_Transmit(&huart1,"SPI OK\r\n", strlen("SPI OK\r\n"),100);
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   while (1)
 242:Core/Src/main.c ****   {
 243:Core/Src/main.c ****     sensor_addr = 0x60;
 244:Core/Src/main.c ****     wrSensorReg8_8(0xff, 0x01);
 245:Core/Src/main.c ****     rdSensorReg8_8(OV2640_CHIPID_HIGH, &vid);
 246:Core/Src/main.c ****     rdSensorReg8_8(OV2640_CHIPID_LOW, &pid);
 247:Core/Src/main.c ****     if ((vid != 0x26) && ((pid != 0x41) || (pid != 0x42)))
 248:Core/Src/main.c ****     {
 249:Core/Src/main.c ****       sprintf(buf, "ACK CMD Can't find OV2640 module!\r\n");
 250:Core/Src/main.c ****       //HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
 251:Core/Src/main.c ****     }
 252:Core/Src/main.c ****     else
 253:Core/Src/main.c ****     {
 254:Core/Src/main.c ****       sensor_model = OV2640;
 255:Core/Src/main.c ****       sprintf(buf, "ACK CMD OV2640 detected.\r\n");
 256:Core/Src/main.c ****       HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****       break;
 259:Core/Src/main.c ****     }
 260:Core/Src/main.c ****     sensor_addr = 0x78;
 261:Core/Src/main.c ****     rdSensorReg16_8(OV5640_CHIPID_HIGH, &vid);
ARM GAS  /tmp/ccb0q6Ap.s 			page 6


 262:Core/Src/main.c ****     rdSensorReg16_8(OV5640_CHIPID_LOW, &pid);
 263:Core/Src/main.c ****     if ((vid != 0x56) || (pid != 0x40))
 264:Core/Src/main.c ****     {
 265:Core/Src/main.c ****       sprintf(buf, "ACK CMD Can't find OV5640 module!\r\n");
 266:Core/Src/main.c ****       HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
 267:Core/Src/main.c ****     }
 268:Core/Src/main.c ****     else
 269:Core/Src/main.c ****     {
 270:Core/Src/main.c ****       sensor_model = OV5640;
 271:Core/Src/main.c ****       sprintf(buf, "ACK CMD OV5640 detected.\r\n");
 272:Core/Src/main.c ****       HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
 273:Core/Src/main.c **** 
 274:Core/Src/main.c ****       break;
 275:Core/Src/main.c ****     }
 276:Core/Src/main.c ****     sensor_addr = 0x78;
 277:Core/Src/main.c ****     rdSensorReg16_8(OV5642_CHIPID_HIGH, &vid);
 278:Core/Src/main.c ****     rdSensorReg16_8(OV5642_CHIPID_LOW, &pid);
 279:Core/Src/main.c ****     if ((vid != 0x56) || (pid != 0x42))
 280:Core/Src/main.c ****     {
 281:Core/Src/main.c ****       sprintf(buf, "ACK CMD Can't find OV5642 module!\r\n");
 282:Core/Src/main.c ****       HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
 283:Core/Src/main.c **** 
 284:Core/Src/main.c ****       continue;
 285:Core/Src/main.c ****     }
 286:Core/Src/main.c ****     else
 287:Core/Src/main.c ****     {
 288:Core/Src/main.c ****       sensor_model = OV5642;
 289:Core/Src/main.c ****       sprintf(buf, "ACK CMD OV5642 detected.\r\n");
 290:Core/Src/main.c ****       HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
 291:Core/Src/main.c **** 
 292:Core/Src/main.c ****       break;
 293:Core/Src/main.c ****     }
 294:Core/Src/main.c ****   }
 295:Core/Src/main.c ****   // Support OV2640/OV5640/OV5642 Init
 296:Core/Src/main.c ****   ArduCAM_Init(sensor_model);
 297:Core/Src/main.c **** 
 298:Core/Src/main.c ****   OV2640_set_JPEG_size(OV2640_1600x1200);
 299:Core/Src/main.c ****   sprintf(buf,"ACK CMD switch to OV2640_1600x1200\r\n");
 300:Core/Src/main.c ****   HAL_UART_Transmit(&huart1,buf,strlen(buf),50);
 301:Core/Src/main.c **** 
 302:Core/Src/main.c **** 	flush_fifo();
 303:Core/Src/main.c **** 	clear_fifo_flag();
 304:Core/Src/main.c **** 	start_capture(); 
 305:Core/Src/main.c **** 	while(!get_bit(ARDUCHIP_TRIG , CAP_DONE_MASK)){;}
 306:Core/Src/main.c **** 	//printf("ACK CMD capture done\r\n");
 307:Core/Src/main.c **** 	int length= read_fifo_length();
 308:Core/Src/main.c ****   sprintf(buf,"length read from fifo  =%d\r\n",length);
 309:Core/Src/main.c ****   HAL_UART_Transmit(&huart1,buf,strlen(buf),50);
 310:Core/Src/main.c **** 
 311:Core/Src/main.c ****   /* USER CODE END 2 */
 312:Core/Src/main.c **** 
 313:Core/Src/main.c ****   /* Infinite loop */
 314:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 315:Core/Src/main.c ****   while (1)
 316:Core/Src/main.c ****   {
 317:Core/Src/main.c ****     /* USER CODE END WHILE */
 318:Core/Src/main.c ****     HAL_GPIO_TogglePin(TEST_LED_GPIO_Port, TEST_LED_Pin);
ARM GAS  /tmp/ccb0q6Ap.s 			page 7


 319:Core/Src/main.c ****     HAL_Delay(200);
 320:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 321:Core/Src/main.c ****   }
 322:Core/Src/main.c ****   /* USER CODE END 3 */
 323:Core/Src/main.c **** }
 324:Core/Src/main.c **** 
 325:Core/Src/main.c **** /**
 326:Core/Src/main.c ****  * @brief System Clock Configuration
 327:Core/Src/main.c ****  * @retval None
 328:Core/Src/main.c ****  */
 329:Core/Src/main.c **** void SystemClock_Config(void)
 330:Core/Src/main.c **** {
 331:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 332:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 333:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 334:Core/Src/main.c **** 
 335:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 336:Core/Src/main.c ****    * in the RCC_OscInitTypeDef structure.
 337:Core/Src/main.c ****    */
 338:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 339:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 340:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 341:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_OFF;
 342:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 343:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 344:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 345:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 346:Core/Src/main.c ****   {
 347:Core/Src/main.c ****     Error_Handler();
 348:Core/Src/main.c ****   }
 349:Core/Src/main.c **** 
 350:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 351:Core/Src/main.c ****    */
 352:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | R
 353:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 354:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 355:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 356:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 357:Core/Src/main.c **** 
 358:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 359:Core/Src/main.c ****   {
 360:Core/Src/main.c ****     Error_Handler();
 361:Core/Src/main.c ****   }
 362:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USB;
 363:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 364:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 365:Core/Src/main.c ****   {
 366:Core/Src/main.c ****     Error_Handler();
 367:Core/Src/main.c ****   }
 368:Core/Src/main.c **** }
 369:Core/Src/main.c **** 
 370:Core/Src/main.c **** /**
 371:Core/Src/main.c ****  * @brief I2C1 Initialization Function
 372:Core/Src/main.c ****  * @param None
 373:Core/Src/main.c ****  * @retval None
 374:Core/Src/main.c ****  */
 375:Core/Src/main.c **** static void MX_I2C1_Init(void)
ARM GAS  /tmp/ccb0q6Ap.s 			page 8


 376:Core/Src/main.c **** {
 377:Core/Src/main.c **** 
 378:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 379:Core/Src/main.c **** 
 380:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 381:Core/Src/main.c **** 
 382:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 383:Core/Src/main.c **** 
 384:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 385:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 386:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 5000;
 387:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 388:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 389:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 390:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 391:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 392:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 393:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 394:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 395:Core/Src/main.c ****   {
 396:Core/Src/main.c ****     Error_Handler();
 397:Core/Src/main.c ****   }
 398:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 399:Core/Src/main.c **** 
 400:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 401:Core/Src/main.c **** }
 402:Core/Src/main.c **** 
 403:Core/Src/main.c **** /**
 404:Core/Src/main.c ****  * @brief SPI1 Initialization Function
 405:Core/Src/main.c ****  * @param None
 406:Core/Src/main.c ****  * @retval None
 407:Core/Src/main.c ****  */
 408:Core/Src/main.c **** static void MX_SPI1_Init(void)
 409:Core/Src/main.c **** {
 410:Core/Src/main.c **** 
 411:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 412:Core/Src/main.c **** 
 413:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 414:Core/Src/main.c **** 
 415:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 416:Core/Src/main.c **** 
 417:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 418:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 419:Core/Src/main.c ****   hspi1.Instance = SPI1;
 420:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 421:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 422:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 423:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 424:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 425:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 426:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 427:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 428:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 429:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 430:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 431:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 432:Core/Src/main.c ****   {
ARM GAS  /tmp/ccb0q6Ap.s 			page 9


 433:Core/Src/main.c ****     Error_Handler();
 434:Core/Src/main.c ****   }
 435:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 436:Core/Src/main.c **** 
 437:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 438:Core/Src/main.c **** }
 439:Core/Src/main.c **** 
 440:Core/Src/main.c **** /**
 441:Core/Src/main.c ****  * @brief SPI2 Initialization Function
 442:Core/Src/main.c ****  * @param None
 443:Core/Src/main.c ****  * @retval None
 444:Core/Src/main.c ****  */
 445:Core/Src/main.c **** static void MX_SPI2_Init(void)
 446:Core/Src/main.c **** {
 447:Core/Src/main.c **** 
 448:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 0 */
 449:Core/Src/main.c **** 
 450:Core/Src/main.c ****   /* USER CODE END SPI2_Init 0 */
 451:Core/Src/main.c **** 
 452:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 1 */
 453:Core/Src/main.c **** 
 454:Core/Src/main.c ****   /* USER CODE END SPI2_Init 1 */
 455:Core/Src/main.c ****   /* SPI2 parameter configuration*/
 456:Core/Src/main.c ****   hspi2.Instance = SPI2;
 457:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 458:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 459:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 460:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 461:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 462:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 463:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_128;
 464:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 465:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 466:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 467:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 10;
 468:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 469:Core/Src/main.c ****   {
 470:Core/Src/main.c ****     Error_Handler();
 471:Core/Src/main.c ****   }
 472:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 2 */
 473:Core/Src/main.c **** 
 474:Core/Src/main.c ****   /* USER CODE END SPI2_Init 2 */
 475:Core/Src/main.c **** }
 476:Core/Src/main.c **** 
 477:Core/Src/main.c **** /**
 478:Core/Src/main.c ****  * @brief TIM1 Initialization Function
 479:Core/Src/main.c ****  * @param None
 480:Core/Src/main.c ****  * @retval None
 481:Core/Src/main.c ****  */
 482:Core/Src/main.c **** static void MX_TIM1_Init(void)
 483:Core/Src/main.c **** {
 484:Core/Src/main.c **** 
 485:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 486:Core/Src/main.c **** 
 487:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 488:Core/Src/main.c **** 
 489:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
ARM GAS  /tmp/ccb0q6Ap.s 			page 10


 490:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 491:Core/Src/main.c **** 
 492:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 493:Core/Src/main.c **** 
 494:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 495:Core/Src/main.c ****   htim1.Instance = TIM1;
 496:Core/Src/main.c ****   htim1.Init.Prescaler = 72 - 1;
 497:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 498:Core/Src/main.c ****   htim1.Init.Period = 65535 - 1;
 499:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 500:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 501:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 502:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 503:Core/Src/main.c ****   {
 504:Core/Src/main.c ****     Error_Handler();
 505:Core/Src/main.c ****   }
 506:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 507:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 508:Core/Src/main.c ****   {
 509:Core/Src/main.c ****     Error_Handler();
 510:Core/Src/main.c ****   }
 511:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 512:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 513:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 514:Core/Src/main.c ****   {
 515:Core/Src/main.c ****     Error_Handler();
 516:Core/Src/main.c ****   }
 517:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 518:Core/Src/main.c **** 
 519:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 520:Core/Src/main.c **** }
 521:Core/Src/main.c **** 
 522:Core/Src/main.c **** /**
 523:Core/Src/main.c ****  * @brief USART1 Initialization Function
 524:Core/Src/main.c ****  * @param None
 525:Core/Src/main.c ****  * @retval None
 526:Core/Src/main.c ****  */
 527:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 528:Core/Src/main.c **** {
 529:Core/Src/main.c **** 
 530:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 531:Core/Src/main.c **** 
 532:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 533:Core/Src/main.c **** 
 534:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 535:Core/Src/main.c **** 
 536:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 537:Core/Src/main.c ****   huart1.Instance = USART1;
 538:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 539:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 540:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 541:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 542:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 543:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 544:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 545:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 546:Core/Src/main.c ****   {
ARM GAS  /tmp/ccb0q6Ap.s 			page 11


 547:Core/Src/main.c ****     Error_Handler();
 548:Core/Src/main.c ****   }
 549:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 550:Core/Src/main.c **** 
 551:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 552:Core/Src/main.c **** }
 553:Core/Src/main.c **** 
 554:Core/Src/main.c **** /**
 555:Core/Src/main.c ****  * @brief GPIO Initialization Function
 556:Core/Src/main.c ****  * @param None
 557:Core/Src/main.c ****  * @retval None
 558:Core/Src/main.c ****  */
 559:Core/Src/main.c **** static void MX_GPIO_Init(void)
 560:Core/Src/main.c **** {
  26              		.loc 1 560 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 24
  33              		.cfi_offset 4, -24
  34              		.cfi_offset 5, -20
  35              		.cfi_offset 6, -16
  36              		.cfi_offset 7, -12
  37              		.cfi_offset 8, -8
  38              		.cfi_offset 14, -4
  39 0004 88B0     		sub	sp, sp, #32
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 56
 561:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  42              		.loc 1 561 3 view .LVU1
  43              		.loc 1 561 20 is_stmt 0 view .LVU2
  44 0006 0024     		movs	r4, #0
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
 562:Core/Src/main.c **** 
 563:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 564:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  49              		.loc 1 564 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 564 3 view .LVU4
  52              		.loc 1 564 3 view .LVU5
  53 0010 254B     		ldr	r3, .L3
  54 0012 9A69     		ldr	r2, [r3, #24]
  55 0014 42F01002 		orr	r2, r2, #16
  56 0018 9A61     		str	r2, [r3, #24]
  57              		.loc 1 564 3 view .LVU6
  58 001a 9A69     		ldr	r2, [r3, #24]
  59 001c 02F01002 		and	r2, r2, #16
  60 0020 0092     		str	r2, [sp]
  61              		.loc 1 564 3 view .LVU7
  62 0022 009A     		ldr	r2, [sp]
  63              	.LBE4:
  64              		.loc 1 564 3 view .LVU8
ARM GAS  /tmp/ccb0q6Ap.s 			page 12


 565:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  65              		.loc 1 565 3 view .LVU9
  66              	.LBB5:
  67              		.loc 1 565 3 view .LVU10
  68              		.loc 1 565 3 view .LVU11
  69 0024 9A69     		ldr	r2, [r3, #24]
  70 0026 42F02002 		orr	r2, r2, #32
  71 002a 9A61     		str	r2, [r3, #24]
  72              		.loc 1 565 3 view .LVU12
  73 002c 9A69     		ldr	r2, [r3, #24]
  74 002e 02F02002 		and	r2, r2, #32
  75 0032 0192     		str	r2, [sp, #4]
  76              		.loc 1 565 3 view .LVU13
  77 0034 019A     		ldr	r2, [sp, #4]
  78              	.LBE5:
  79              		.loc 1 565 3 view .LVU14
 566:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  80              		.loc 1 566 3 view .LVU15
  81              	.LBB6:
  82              		.loc 1 566 3 view .LVU16
  83              		.loc 1 566 3 view .LVU17
  84 0036 9A69     		ldr	r2, [r3, #24]
  85 0038 42F00402 		orr	r2, r2, #4
  86 003c 9A61     		str	r2, [r3, #24]
  87              		.loc 1 566 3 view .LVU18
  88 003e 9A69     		ldr	r2, [r3, #24]
  89 0040 02F00402 		and	r2, r2, #4
  90 0044 0292     		str	r2, [sp, #8]
  91              		.loc 1 566 3 view .LVU19
  92 0046 029A     		ldr	r2, [sp, #8]
  93              	.LBE6:
  94              		.loc 1 566 3 view .LVU20
 567:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  95              		.loc 1 567 3 view .LVU21
  96              	.LBB7:
  97              		.loc 1 567 3 view .LVU22
  98              		.loc 1 567 3 view .LVU23
  99 0048 9A69     		ldr	r2, [r3, #24]
 100 004a 42F00802 		orr	r2, r2, #8
 101 004e 9A61     		str	r2, [r3, #24]
 102              		.loc 1 567 3 view .LVU24
 103 0050 9B69     		ldr	r3, [r3, #24]
 104 0052 03F00803 		and	r3, r3, #8
 105 0056 0393     		str	r3, [sp, #12]
 106              		.loc 1 567 3 view .LVU25
 107 0058 039B     		ldr	r3, [sp, #12]
 108              	.LBE7:
 109              		.loc 1 567 3 view .LVU26
 568:Core/Src/main.c **** 
 569:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 570:Core/Src/main.c ****   HAL_GPIO_WritePin(TEST_LED_GPIO_Port, TEST_LED_Pin, GPIO_PIN_RESET);
 110              		.loc 1 570 3 view .LVU27
 111 005a DFF85480 		ldr	r8, .L3+8
 112 005e 2246     		mov	r2, r4
 113 0060 4FF40051 		mov	r1, #8192
 114 0064 4046     		mov	r0, r8
 115 0066 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /tmp/ccb0q6Ap.s 			page 13


 116              	.LVL0:
 571:Core/Src/main.c **** 
 572:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 573:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, CAMERA_CS_Pin | SD_CS_Pin , GPIO_PIN_RESET);
 117              		.loc 1 573 3 view .LVU28
 118 006a 104D     		ldr	r5, .L3+4
 119 006c 2246     		mov	r2, r4
 120 006e 0321     		movs	r1, #3
 121 0070 2846     		mov	r0, r5
 122 0072 FFF7FEFF 		bl	HAL_GPIO_WritePin
 123              	.LVL1:
 574:Core/Src/main.c **** 
 575:Core/Src/main.c ****   /*Configure GPIO pin : TEST_LED_Pin */
 576:Core/Src/main.c ****   GPIO_InitStruct.Pin = TEST_LED_Pin;
 124              		.loc 1 576 3 view .LVU29
 125              		.loc 1 576 23 is_stmt 0 view .LVU30
 126 0076 4FF40053 		mov	r3, #8192
 127 007a 0493     		str	r3, [sp, #16]
 577:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 128              		.loc 1 577 3 is_stmt 1 view .LVU31
 129              		.loc 1 577 24 is_stmt 0 view .LVU32
 130 007c 0127     		movs	r7, #1
 131 007e 0597     		str	r7, [sp, #20]
 578:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 132              		.loc 1 578 3 is_stmt 1 view .LVU33
 133              		.loc 1 578 24 is_stmt 0 view .LVU34
 134 0080 0694     		str	r4, [sp, #24]
 579:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 135              		.loc 1 579 3 is_stmt 1 view .LVU35
 136              		.loc 1 579 25 is_stmt 0 view .LVU36
 137 0082 0226     		movs	r6, #2
 138 0084 0796     		str	r6, [sp, #28]
 580:Core/Src/main.c ****   HAL_GPIO_Init(TEST_LED_GPIO_Port, &GPIO_InitStruct);
 139              		.loc 1 580 3 is_stmt 1 view .LVU37
 140 0086 04A9     		add	r1, sp, #16
 141 0088 4046     		mov	r0, r8
 142 008a FFF7FEFF 		bl	HAL_GPIO_Init
 143              	.LVL2:
 581:Core/Src/main.c **** 
 582:Core/Src/main.c ****   /*Configure GPIO pins : CAMERA_CS_Pin SD_CS_Pin PB9 */
 583:Core/Src/main.c ****   GPIO_InitStruct.Pin = CAMERA_CS_Pin | SD_CS_Pin;
 144              		.loc 1 583 3 view .LVU38
 145              		.loc 1 583 23 is_stmt 0 view .LVU39
 146 008e 0323     		movs	r3, #3
 147 0090 0493     		str	r3, [sp, #16]
 584:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 148              		.loc 1 584 3 is_stmt 1 view .LVU40
 149              		.loc 1 584 24 is_stmt 0 view .LVU41
 150 0092 0597     		str	r7, [sp, #20]
 585:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 151              		.loc 1 585 3 is_stmt 1 view .LVU42
 152              		.loc 1 585 24 is_stmt 0 view .LVU43
 153 0094 0694     		str	r4, [sp, #24]
 586:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 154              		.loc 1 586 3 is_stmt 1 view .LVU44
 155              		.loc 1 586 25 is_stmt 0 view .LVU45
 156 0096 0796     		str	r6, [sp, #28]
ARM GAS  /tmp/ccb0q6Ap.s 			page 14


 587:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 157              		.loc 1 587 3 is_stmt 1 view .LVU46
 158 0098 04A9     		add	r1, sp, #16
 159 009a 2846     		mov	r0, r5
 160 009c FFF7FEFF 		bl	HAL_GPIO_Init
 161              	.LVL3:
 588:Core/Src/main.c **** }
 162              		.loc 1 588 1 is_stmt 0 view .LVU47
 163 00a0 08B0     		add	sp, sp, #32
 164              	.LCFI2:
 165              		.cfi_def_cfa_offset 24
 166              		@ sp needed
 167 00a2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 168              	.L4:
 169 00a6 00BF     		.align	2
 170              	.L3:
 171 00a8 00100240 		.word	1073876992
 172 00ac 000C0140 		.word	1073810432
 173 00b0 00100140 		.word	1073811456
 174              		.cfi_endproc
 175              	.LFE75:
 177              		.section	.text.Error_Handler,"ax",%progbits
 178              		.align	1
 179              		.global	Error_Handler
 180              		.syntax unified
 181              		.thumb
 182              		.thumb_func
 183              		.fpu softvfp
 185              	Error_Handler:
 186              	.LFB76:
 589:Core/Src/main.c **** 
 590:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 591:Core/Src/main.c **** 
 592:Core/Src/main.c **** /* USER CODE END 4 */
 593:Core/Src/main.c **** 
 594:Core/Src/main.c **** /**
 595:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 596:Core/Src/main.c ****  * @retval None
 597:Core/Src/main.c ****  */
 598:Core/Src/main.c **** void Error_Handler(void)
 599:Core/Src/main.c **** {
 187              		.loc 1 599 1 is_stmt 1 view -0
 188              		.cfi_startproc
 189              		@ Volatile: function does not return.
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              		@ link register save eliminated.
 600:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 601:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 602:Core/Src/main.c ****   __disable_irq();
 193              		.loc 1 602 3 view .LVU49
 194              	.LBB8:
 195              	.LBI8:
 196              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
ARM GAS  /tmp/ccb0q6Ap.s 			page 15


   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccb0q6Ap.s 			page 16


  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccb0q6Ap.s 			page 17


 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 197              		.loc 2 140 27 view .LVU50
 198              	.LBB9:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 199              		.loc 2 142 3 view .LVU51
 200              		.syntax unified
 201              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 202 0000 72B6     		cpsid i
 203              	@ 0 "" 2
 204              		.thumb
 205              		.syntax unified
 206              	.L6:
 207              	.LBE9:
 208              	.LBE8:
 603:Core/Src/main.c ****   while (1)
 209              		.loc 1 603 3 discriminator 1 view .LVU52
 604:Core/Src/main.c ****   {
 605:Core/Src/main.c ****   }
 210              		.loc 1 605 3 discriminator 1 view .LVU53
 603:Core/Src/main.c ****   while (1)
 211              		.loc 1 603 9 discriminator 1 view .LVU54
 212 0002 FEE7     		b	.L6
 213              		.cfi_endproc
 214              	.LFE76:
 216              		.section	.text.MX_SPI2_Init,"ax",%progbits
 217              		.align	1
 218              		.syntax unified
 219              		.thumb
 220              		.thumb_func
 221              		.fpu softvfp
 223              	MX_SPI2_Init:
 224              	.LFB72:
 446:Core/Src/main.c **** 
 225              		.loc 1 446 1 view -0
ARM GAS  /tmp/ccb0q6Ap.s 			page 18


 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 0, uses_anonymous_args = 0
 229 0000 08B5     		push	{r3, lr}
 230              	.LCFI3:
 231              		.cfi_def_cfa_offset 8
 232              		.cfi_offset 3, -8
 233              		.cfi_offset 14, -4
 456:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 234              		.loc 1 456 3 view .LVU56
 456:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 235              		.loc 1 456 18 is_stmt 0 view .LVU57
 236 0002 0D48     		ldr	r0, .L11
 237 0004 0D4B     		ldr	r3, .L11+4
 238 0006 0360     		str	r3, [r0]
 457:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 239              		.loc 1 457 3 is_stmt 1 view .LVU58
 457:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 240              		.loc 1 457 19 is_stmt 0 view .LVU59
 241 0008 4FF48273 		mov	r3, #260
 242 000c 4360     		str	r3, [r0, #4]
 458:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 243              		.loc 1 458 3 is_stmt 1 view .LVU60
 458:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 244              		.loc 1 458 24 is_stmt 0 view .LVU61
 245 000e 0023     		movs	r3, #0
 246 0010 8360     		str	r3, [r0, #8]
 459:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 247              		.loc 1 459 3 is_stmt 1 view .LVU62
 459:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 248              		.loc 1 459 23 is_stmt 0 view .LVU63
 249 0012 C360     		str	r3, [r0, #12]
 460:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 250              		.loc 1 460 3 is_stmt 1 view .LVU64
 460:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 251              		.loc 1 460 26 is_stmt 0 view .LVU65
 252 0014 0361     		str	r3, [r0, #16]
 461:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 253              		.loc 1 461 3 is_stmt 1 view .LVU66
 461:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 254              		.loc 1 461 23 is_stmt 0 view .LVU67
 255 0016 4361     		str	r3, [r0, #20]
 462:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_128;
 256              		.loc 1 462 3 is_stmt 1 view .LVU68
 462:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_128;
 257              		.loc 1 462 18 is_stmt 0 view .LVU69
 258 0018 4FF40072 		mov	r2, #512
 259 001c 8261     		str	r2, [r0, #24]
 463:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 260              		.loc 1 463 3 is_stmt 1 view .LVU70
 463:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 261              		.loc 1 463 32 is_stmt 0 view .LVU71
 262 001e 3022     		movs	r2, #48
 263 0020 C261     		str	r2, [r0, #28]
 464:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 264              		.loc 1 464 3 is_stmt 1 view .LVU72
 464:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
ARM GAS  /tmp/ccb0q6Ap.s 			page 19


 265              		.loc 1 464 23 is_stmt 0 view .LVU73
 266 0022 0362     		str	r3, [r0, #32]
 465:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 267              		.loc 1 465 3 is_stmt 1 view .LVU74
 465:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 268              		.loc 1 465 21 is_stmt 0 view .LVU75
 269 0024 4362     		str	r3, [r0, #36]
 466:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 10;
 270              		.loc 1 466 3 is_stmt 1 view .LVU76
 466:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 10;
 271              		.loc 1 466 29 is_stmt 0 view .LVU77
 272 0026 8362     		str	r3, [r0, #40]
 467:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 273              		.loc 1 467 3 is_stmt 1 view .LVU78
 467:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 274              		.loc 1 467 28 is_stmt 0 view .LVU79
 275 0028 0A23     		movs	r3, #10
 276 002a C362     		str	r3, [r0, #44]
 468:Core/Src/main.c ****   {
 277              		.loc 1 468 3 is_stmt 1 view .LVU80
 468:Core/Src/main.c ****   {
 278              		.loc 1 468 7 is_stmt 0 view .LVU81
 279 002c FFF7FEFF 		bl	HAL_SPI_Init
 280              	.LVL4:
 468:Core/Src/main.c ****   {
 281              		.loc 1 468 6 view .LVU82
 282 0030 00B9     		cbnz	r0, .L10
 475:Core/Src/main.c **** 
 283              		.loc 1 475 1 view .LVU83
 284 0032 08BD     		pop	{r3, pc}
 285              	.L10:
 470:Core/Src/main.c ****   }
 286              		.loc 1 470 5 is_stmt 1 view .LVU84
 287 0034 FFF7FEFF 		bl	Error_Handler
 288              	.LVL5:
 289              	.L12:
 290              		.align	2
 291              	.L11:
 292 0038 00000000 		.word	hspi2
 293 003c 00380040 		.word	1073756160
 294              		.cfi_endproc
 295              	.LFE72:
 297              		.section	.text.MX_I2C1_Init,"ax",%progbits
 298              		.align	1
 299              		.syntax unified
 300              		.thumb
 301              		.thumb_func
 302              		.fpu softvfp
 304              	MX_I2C1_Init:
 305              	.LFB70:
 376:Core/Src/main.c **** 
 306              		.loc 1 376 1 view -0
 307              		.cfi_startproc
 308              		@ args = 0, pretend = 0, frame = 0
 309              		@ frame_needed = 0, uses_anonymous_args = 0
 310 0000 08B5     		push	{r3, lr}
 311              	.LCFI4:
ARM GAS  /tmp/ccb0q6Ap.s 			page 20


 312              		.cfi_def_cfa_offset 8
 313              		.cfi_offset 3, -8
 314              		.cfi_offset 14, -4
 385:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 5000;
 315              		.loc 1 385 3 view .LVU86
 385:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 5000;
 316              		.loc 1 385 18 is_stmt 0 view .LVU87
 317 0002 0B48     		ldr	r0, .L17
 318 0004 0B4B     		ldr	r3, .L17+4
 319 0006 0360     		str	r3, [r0]
 386:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 320              		.loc 1 386 3 is_stmt 1 view .LVU88
 386:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 321              		.loc 1 386 25 is_stmt 0 view .LVU89
 322 0008 41F28833 		movw	r3, #5000
 323 000c 4360     		str	r3, [r0, #4]
 387:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 324              		.loc 1 387 3 is_stmt 1 view .LVU90
 387:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 325              		.loc 1 387 24 is_stmt 0 view .LVU91
 326 000e 0023     		movs	r3, #0
 327 0010 8360     		str	r3, [r0, #8]
 388:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 328              		.loc 1 388 3 is_stmt 1 view .LVU92
 388:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 329              		.loc 1 388 26 is_stmt 0 view .LVU93
 330 0012 C360     		str	r3, [r0, #12]
 389:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 331              		.loc 1 389 3 is_stmt 1 view .LVU94
 389:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 332              		.loc 1 389 29 is_stmt 0 view .LVU95
 333 0014 4FF48042 		mov	r2, #16384
 334 0018 0261     		str	r2, [r0, #16]
 390:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 335              		.loc 1 390 3 is_stmt 1 view .LVU96
 390:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 336              		.loc 1 390 30 is_stmt 0 view .LVU97
 337 001a 4361     		str	r3, [r0, #20]
 391:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 338              		.loc 1 391 3 is_stmt 1 view .LVU98
 391:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 339              		.loc 1 391 26 is_stmt 0 view .LVU99
 340 001c 8361     		str	r3, [r0, #24]
 392:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 341              		.loc 1 392 3 is_stmt 1 view .LVU100
 392:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 342              		.loc 1 392 30 is_stmt 0 view .LVU101
 343 001e C361     		str	r3, [r0, #28]
 393:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 344              		.loc 1 393 3 is_stmt 1 view .LVU102
 393:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 345              		.loc 1 393 28 is_stmt 0 view .LVU103
 346 0020 0362     		str	r3, [r0, #32]
 394:Core/Src/main.c ****   {
 347              		.loc 1 394 3 is_stmt 1 view .LVU104
 394:Core/Src/main.c ****   {
 348              		.loc 1 394 7 is_stmt 0 view .LVU105
ARM GAS  /tmp/ccb0q6Ap.s 			page 21


 349 0022 FFF7FEFF 		bl	HAL_I2C_Init
 350              	.LVL6:
 394:Core/Src/main.c ****   {
 351              		.loc 1 394 6 view .LVU106
 352 0026 00B9     		cbnz	r0, .L16
 401:Core/Src/main.c **** 
 353              		.loc 1 401 1 view .LVU107
 354 0028 08BD     		pop	{r3, pc}
 355              	.L16:
 396:Core/Src/main.c ****   }
 356              		.loc 1 396 5 is_stmt 1 view .LVU108
 357 002a FFF7FEFF 		bl	Error_Handler
 358              	.LVL7:
 359              	.L18:
 360 002e 00BF     		.align	2
 361              	.L17:
 362 0030 00000000 		.word	hi2c1
 363 0034 00540040 		.word	1073763328
 364              		.cfi_endproc
 365              	.LFE70:
 367              		.section	.text.MX_SPI1_Init,"ax",%progbits
 368              		.align	1
 369              		.syntax unified
 370              		.thumb
 371              		.thumb_func
 372              		.fpu softvfp
 374              	MX_SPI1_Init:
 375              	.LFB71:
 409:Core/Src/main.c **** 
 376              		.loc 1 409 1 view -0
 377              		.cfi_startproc
 378              		@ args = 0, pretend = 0, frame = 0
 379              		@ frame_needed = 0, uses_anonymous_args = 0
 380 0000 08B5     		push	{r3, lr}
 381              	.LCFI5:
 382              		.cfi_def_cfa_offset 8
 383              		.cfi_offset 3, -8
 384              		.cfi_offset 14, -4
 419:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 385              		.loc 1 419 3 view .LVU110
 419:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 386              		.loc 1 419 18 is_stmt 0 view .LVU111
 387 0002 0D48     		ldr	r0, .L23
 388 0004 0D4B     		ldr	r3, .L23+4
 389 0006 0360     		str	r3, [r0]
 420:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 390              		.loc 1 420 3 is_stmt 1 view .LVU112
 420:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 391              		.loc 1 420 19 is_stmt 0 view .LVU113
 392 0008 4FF48273 		mov	r3, #260
 393 000c 4360     		str	r3, [r0, #4]
 421:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 394              		.loc 1 421 3 is_stmt 1 view .LVU114
 421:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 395              		.loc 1 421 24 is_stmt 0 view .LVU115
 396 000e 0023     		movs	r3, #0
 397 0010 8360     		str	r3, [r0, #8]
ARM GAS  /tmp/ccb0q6Ap.s 			page 22


 422:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 398              		.loc 1 422 3 is_stmt 1 view .LVU116
 422:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 399              		.loc 1 422 23 is_stmt 0 view .LVU117
 400 0012 C360     		str	r3, [r0, #12]
 423:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 401              		.loc 1 423 3 is_stmt 1 view .LVU118
 423:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 402              		.loc 1 423 26 is_stmt 0 view .LVU119
 403 0014 0361     		str	r3, [r0, #16]
 424:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 404              		.loc 1 424 3 is_stmt 1 view .LVU120
 424:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 405              		.loc 1 424 23 is_stmt 0 view .LVU121
 406 0016 4361     		str	r3, [r0, #20]
 425:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 407              		.loc 1 425 3 is_stmt 1 view .LVU122
 425:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 408              		.loc 1 425 18 is_stmt 0 view .LVU123
 409 0018 4FF40072 		mov	r2, #512
 410 001c 8261     		str	r2, [r0, #24]
 426:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 411              		.loc 1 426 3 is_stmt 1 view .LVU124
 426:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 412              		.loc 1 426 32 is_stmt 0 view .LVU125
 413 001e 2022     		movs	r2, #32
 414 0020 C261     		str	r2, [r0, #28]
 427:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 415              		.loc 1 427 3 is_stmt 1 view .LVU126
 427:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 416              		.loc 1 427 23 is_stmt 0 view .LVU127
 417 0022 0362     		str	r3, [r0, #32]
 428:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 418              		.loc 1 428 3 is_stmt 1 view .LVU128
 428:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 419              		.loc 1 428 21 is_stmt 0 view .LVU129
 420 0024 4362     		str	r3, [r0, #36]
 429:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 421              		.loc 1 429 3 is_stmt 1 view .LVU130
 429:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 422              		.loc 1 429 29 is_stmt 0 view .LVU131
 423 0026 8362     		str	r3, [r0, #40]
 430:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 424              		.loc 1 430 3 is_stmt 1 view .LVU132
 430:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 425              		.loc 1 430 28 is_stmt 0 view .LVU133
 426 0028 0A23     		movs	r3, #10
 427 002a C362     		str	r3, [r0, #44]
 431:Core/Src/main.c ****   {
 428              		.loc 1 431 3 is_stmt 1 view .LVU134
 431:Core/Src/main.c ****   {
 429              		.loc 1 431 7 is_stmt 0 view .LVU135
 430 002c FFF7FEFF 		bl	HAL_SPI_Init
 431              	.LVL8:
 431:Core/Src/main.c ****   {
 432              		.loc 1 431 6 view .LVU136
 433 0030 00B9     		cbnz	r0, .L22
ARM GAS  /tmp/ccb0q6Ap.s 			page 23


 438:Core/Src/main.c **** 
 434              		.loc 1 438 1 view .LVU137
 435 0032 08BD     		pop	{r3, pc}
 436              	.L22:
 433:Core/Src/main.c ****   }
 437              		.loc 1 433 5 is_stmt 1 view .LVU138
 438 0034 FFF7FEFF 		bl	Error_Handler
 439              	.LVL9:
 440              	.L24:
 441              		.align	2
 442              	.L23:
 443 0038 00000000 		.word	hspi1
 444 003c 00300140 		.word	1073819648
 445              		.cfi_endproc
 446              	.LFE71:
 448              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 449              		.align	1
 450              		.syntax unified
 451              		.thumb
 452              		.thumb_func
 453              		.fpu softvfp
 455              	MX_USART1_UART_Init:
 456              	.LFB74:
 528:Core/Src/main.c **** 
 457              		.loc 1 528 1 view -0
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 0
 460              		@ frame_needed = 0, uses_anonymous_args = 0
 461 0000 08B5     		push	{r3, lr}
 462              	.LCFI6:
 463              		.cfi_def_cfa_offset 8
 464              		.cfi_offset 3, -8
 465              		.cfi_offset 14, -4
 537:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 466              		.loc 1 537 3 view .LVU140
 537:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 467              		.loc 1 537 19 is_stmt 0 view .LVU141
 468 0002 0A48     		ldr	r0, .L29
 469 0004 0A4B     		ldr	r3, .L29+4
 470 0006 0360     		str	r3, [r0]
 538:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 471              		.loc 1 538 3 is_stmt 1 view .LVU142
 538:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 472              		.loc 1 538 24 is_stmt 0 view .LVU143
 473 0008 4FF4E133 		mov	r3, #115200
 474 000c 4360     		str	r3, [r0, #4]
 539:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 475              		.loc 1 539 3 is_stmt 1 view .LVU144
 539:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 476              		.loc 1 539 26 is_stmt 0 view .LVU145
 477 000e 0023     		movs	r3, #0
 478 0010 8360     		str	r3, [r0, #8]
 540:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 479              		.loc 1 540 3 is_stmt 1 view .LVU146
 540:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 480              		.loc 1 540 24 is_stmt 0 view .LVU147
 481 0012 C360     		str	r3, [r0, #12]
ARM GAS  /tmp/ccb0q6Ap.s 			page 24


 541:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 482              		.loc 1 541 3 is_stmt 1 view .LVU148
 541:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 483              		.loc 1 541 22 is_stmt 0 view .LVU149
 484 0014 0361     		str	r3, [r0, #16]
 542:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 485              		.loc 1 542 3 is_stmt 1 view .LVU150
 542:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 486              		.loc 1 542 20 is_stmt 0 view .LVU151
 487 0016 0C22     		movs	r2, #12
 488 0018 4261     		str	r2, [r0, #20]
 543:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 489              		.loc 1 543 3 is_stmt 1 view .LVU152
 543:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 490              		.loc 1 543 25 is_stmt 0 view .LVU153
 491 001a 8361     		str	r3, [r0, #24]
 544:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 492              		.loc 1 544 3 is_stmt 1 view .LVU154
 544:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 493              		.loc 1 544 28 is_stmt 0 view .LVU155
 494 001c C361     		str	r3, [r0, #28]
 545:Core/Src/main.c ****   {
 495              		.loc 1 545 3 is_stmt 1 view .LVU156
 545:Core/Src/main.c ****   {
 496              		.loc 1 545 7 is_stmt 0 view .LVU157
 497 001e FFF7FEFF 		bl	HAL_UART_Init
 498              	.LVL10:
 545:Core/Src/main.c ****   {
 499              		.loc 1 545 6 view .LVU158
 500 0022 00B9     		cbnz	r0, .L28
 552:Core/Src/main.c **** 
 501              		.loc 1 552 1 view .LVU159
 502 0024 08BD     		pop	{r3, pc}
 503              	.L28:
 547:Core/Src/main.c ****   }
 504              		.loc 1 547 5 is_stmt 1 view .LVU160
 505 0026 FFF7FEFF 		bl	Error_Handler
 506              	.LVL11:
 507              	.L30:
 508 002a 00BF     		.align	2
 509              	.L29:
 510 002c 00000000 		.word	huart1
 511 0030 00380140 		.word	1073821696
 512              		.cfi_endproc
 513              	.LFE74:
 515              		.section	.text.SystemClock_Config,"ax",%progbits
 516              		.align	1
 517              		.global	SystemClock_Config
 518              		.syntax unified
 519              		.thumb
 520              		.thumb_func
 521              		.fpu softvfp
 523              	SystemClock_Config:
 524              	.LFB69:
 330:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 525              		.loc 1 330 1 view -0
 526              		.cfi_startproc
ARM GAS  /tmp/ccb0q6Ap.s 			page 25


 527              		@ args = 0, pretend = 0, frame = 80
 528              		@ frame_needed = 0, uses_anonymous_args = 0
 529 0000 00B5     		push	{lr}
 530              	.LCFI7:
 531              		.cfi_def_cfa_offset 4
 532              		.cfi_offset 14, -4
 533 0002 95B0     		sub	sp, sp, #84
 534              	.LCFI8:
 535              		.cfi_def_cfa_offset 88
 331:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 536              		.loc 1 331 3 view .LVU162
 331:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 537              		.loc 1 331 22 is_stmt 0 view .LVU163
 538 0004 0023     		movs	r3, #0
 539 0006 0D93     		str	r3, [sp, #52]
 540 0008 0F93     		str	r3, [sp, #60]
 541 000a 1093     		str	r3, [sp, #64]
 332:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 542              		.loc 1 332 3 is_stmt 1 view .LVU164
 332:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 543              		.loc 1 332 22 is_stmt 0 view .LVU165
 544 000c 0593     		str	r3, [sp, #20]
 545 000e 0693     		str	r3, [sp, #24]
 546 0010 0793     		str	r3, [sp, #28]
 547 0012 0893     		str	r3, [sp, #32]
 548 0014 0993     		str	r3, [sp, #36]
 333:Core/Src/main.c **** 
 549              		.loc 1 333 3 is_stmt 1 view .LVU166
 333:Core/Src/main.c **** 
 550              		.loc 1 333 28 is_stmt 0 view .LVU167
 551 0016 0193     		str	r3, [sp, #4]
 552 0018 0293     		str	r3, [sp, #8]
 553 001a 0393     		str	r3, [sp, #12]
 554 001c 0493     		str	r3, [sp, #16]
 338:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 555              		.loc 1 338 3 is_stmt 1 view .LVU168
 338:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 556              		.loc 1 338 36 is_stmt 0 view .LVU169
 557 001e 0122     		movs	r2, #1
 558 0020 0A92     		str	r2, [sp, #40]
 339:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 559              		.loc 1 339 3 is_stmt 1 view .LVU170
 339:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 560              		.loc 1 339 30 is_stmt 0 view .LVU171
 561 0022 4FF48032 		mov	r2, #65536
 562 0026 0B92     		str	r2, [sp, #44]
 340:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_OFF;
 563              		.loc 1 340 3 is_stmt 1 view .LVU172
 340:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_OFF;
 564              		.loc 1 340 36 is_stmt 0 view .LVU173
 565 0028 0C93     		str	r3, [sp, #48]
 341:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 566              		.loc 1 341 3 is_stmt 1 view .LVU174
 341:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 567              		.loc 1 341 30 is_stmt 0 view .LVU175
 568 002a 0E93     		str	r3, [sp, #56]
 342:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
ARM GAS  /tmp/ccb0q6Ap.s 			page 26


 569              		.loc 1 342 3 is_stmt 1 view .LVU176
 342:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 570              		.loc 1 342 34 is_stmt 0 view .LVU177
 571 002c 0223     		movs	r3, #2
 572 002e 1193     		str	r3, [sp, #68]
 343:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 573              		.loc 1 343 3 is_stmt 1 view .LVU178
 343:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 574              		.loc 1 343 35 is_stmt 0 view .LVU179
 575 0030 1292     		str	r2, [sp, #72]
 344:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 576              		.loc 1 344 3 is_stmt 1 view .LVU180
 344:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 577              		.loc 1 344 32 is_stmt 0 view .LVU181
 578 0032 4FF4E013 		mov	r3, #1835008
 579 0036 1393     		str	r3, [sp, #76]
 345:Core/Src/main.c ****   {
 580              		.loc 1 345 3 is_stmt 1 view .LVU182
 345:Core/Src/main.c ****   {
 581              		.loc 1 345 7 is_stmt 0 view .LVU183
 582 0038 0AA8     		add	r0, sp, #40
 583 003a FFF7FEFF 		bl	HAL_RCC_OscConfig
 584              	.LVL12:
 345:Core/Src/main.c ****   {
 585              		.loc 1 345 6 view .LVU184
 586 003e C0B9     		cbnz	r0, .L36
 352:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 587              		.loc 1 352 3 is_stmt 1 view .LVU185
 352:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 588              		.loc 1 352 31 is_stmt 0 view .LVU186
 589 0040 0F23     		movs	r3, #15
 590 0042 0593     		str	r3, [sp, #20]
 353:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 591              		.loc 1 353 3 is_stmt 1 view .LVU187
 353:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 592              		.loc 1 353 34 is_stmt 0 view .LVU188
 593 0044 0221     		movs	r1, #2
 594 0046 0691     		str	r1, [sp, #24]
 354:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 595              		.loc 1 354 3 is_stmt 1 view .LVU189
 354:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 596              		.loc 1 354 35 is_stmt 0 view .LVU190
 597 0048 0023     		movs	r3, #0
 598 004a 0793     		str	r3, [sp, #28]
 355:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 599              		.loc 1 355 3 is_stmt 1 view .LVU191
 355:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 600              		.loc 1 355 36 is_stmt 0 view .LVU192
 601 004c 4FF48062 		mov	r2, #1024
 602 0050 0892     		str	r2, [sp, #32]
 356:Core/Src/main.c **** 
 603              		.loc 1 356 3 is_stmt 1 view .LVU193
 356:Core/Src/main.c **** 
 604              		.loc 1 356 36 is_stmt 0 view .LVU194
 605 0052 0993     		str	r3, [sp, #36]
 358:Core/Src/main.c ****   {
 606              		.loc 1 358 3 is_stmt 1 view .LVU195
ARM GAS  /tmp/ccb0q6Ap.s 			page 27


 358:Core/Src/main.c ****   {
 607              		.loc 1 358 7 is_stmt 0 view .LVU196
 608 0054 05A8     		add	r0, sp, #20
 609 0056 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 610              	.LVL13:
 358:Core/Src/main.c ****   {
 611              		.loc 1 358 6 view .LVU197
 612 005a 60B9     		cbnz	r0, .L37
 362:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 613              		.loc 1 362 3 is_stmt 1 view .LVU198
 362:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 614              		.loc 1 362 38 is_stmt 0 view .LVU199
 615 005c 1023     		movs	r3, #16
 616 005e 0193     		str	r3, [sp, #4]
 363:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 617              		.loc 1 363 3 is_stmt 1 view .LVU200
 363:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 618              		.loc 1 363 35 is_stmt 0 view .LVU201
 619 0060 0023     		movs	r3, #0
 620 0062 0493     		str	r3, [sp, #16]
 364:Core/Src/main.c ****   {
 621              		.loc 1 364 3 is_stmt 1 view .LVU202
 364:Core/Src/main.c ****   {
 622              		.loc 1 364 7 is_stmt 0 view .LVU203
 623 0064 01A8     		add	r0, sp, #4
 624 0066 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 625              	.LVL14:
 364:Core/Src/main.c ****   {
 626              		.loc 1 364 6 view .LVU204
 627 006a 30B9     		cbnz	r0, .L38
 368:Core/Src/main.c **** 
 628              		.loc 1 368 1 view .LVU205
 629 006c 15B0     		add	sp, sp, #84
 630              	.LCFI9:
 631              		.cfi_remember_state
 632              		.cfi_def_cfa_offset 4
 633              		@ sp needed
 634 006e 5DF804FB 		ldr	pc, [sp], #4
 635              	.L36:
 636              	.LCFI10:
 637              		.cfi_restore_state
 347:Core/Src/main.c ****   }
 638              		.loc 1 347 5 is_stmt 1 view .LVU206
 639 0072 FFF7FEFF 		bl	Error_Handler
 640              	.LVL15:
 641              	.L37:
 360:Core/Src/main.c ****   }
 642              		.loc 1 360 5 view .LVU207
 643 0076 FFF7FEFF 		bl	Error_Handler
 644              	.LVL16:
 645              	.L38:
 366:Core/Src/main.c ****   }
 646              		.loc 1 366 5 view .LVU208
 647 007a FFF7FEFF 		bl	Error_Handler
 648              	.LVL17:
 649              		.cfi_endproc
 650              	.LFE69:
ARM GAS  /tmp/ccb0q6Ap.s 			page 28


 652              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 653              		.align	2
 654              	.LC0:
 655 0000 0D0A7E20 		.ascii	"\015\012~ SD card demo by kiwih ~\015\012\015\012\000"
 655      53442063 
 655      61726420 
 655      64656D6F 
 655      20627920 
 656              		.align	2
 657              	.LC1:
 658 0020 00       		.ascii	"\000"
 659 0021 000000   		.align	2
 660              	.LC2:
 661 0024 665F6D6F 		.ascii	"f_mount error (%i)\015\012\000"
 661      756E7420 
 661      6572726F 
 661      72202825 
 661      69290D0A 
 662 0039 000000   		.align	2
 663              	.LC3:
 664 003c 665F6765 		.ascii	"f_getfree error (%i)\015\012\000"
 664      74667265 
 664      65206572 
 664      726F7220 
 664      28256929 
 665 0053 00       		.align	2
 666              	.LC4:
 667 0054 53442063 		.ascii	"SD card stats:\015\012%10lu KiB total drive space.\015"
 667      61726420 
 667      73746174 
 667      733A0D0A 
 667      2531306C 
 668 0081 0A253130 		.ascii	"\012%10lu KiB available.\015\012\000"
 668      6C75204B 
 668      69422061 
 668      7661696C 
 668      61626C65 
 669 0099 000000   		.align	2
 670              	.LC5:
 671 009c 74657374 		.ascii	"test.txt\000"
 671      2E747874 
 671      00
 672 00a5 000000   		.align	2
 673              	.LC6:
 674 00a8 665F6F70 		.ascii	"f_open error (%i)\015\012\000"
 674      656E2065 
 674      72726F72 
 674      20282569 
 674      290D0A00 
 675              		.align	2
 676              	.LC7:
 677 00bc 49207761 		.ascii	"I was able to open 'test.txt' for reading!\015\012\000"
 677      73206162 
 677      6C652074 
 677      6F206F70 
 677      656E2027 
 678 00e9 000000   		.align	2
ARM GAS  /tmp/ccb0q6Ap.s 			page 29


 679              	.LC8:
 680 00ec 52656164 		.ascii	"Read string from 'test.txt' contents: %s\015\012\000"
 680      20737472 
 680      696E6720 
 680      66726F6D 
 680      20277465 
 681 0117 00       		.align	2
 682              	.LC9:
 683 0118 665F6765 		.ascii	"f_gets error (%i)\015\012\000"
 683      74732065 
 683      72726F72 
 683      20282569 
 683      290D0A00 
 684              		.align	2
 685              	.LC10:
 686 012c 77726974 		.ascii	"write.txt\000"
 686      652E7478 
 686      7400
 687 0136 0000     		.align	2
 688              	.LC11:
 689 0138 49207761 		.ascii	"I was able to open 'write.txt' for writing\015\012\000"
 689      73206162 
 689      6C652074 
 689      6F206F70 
 689      656E2027 
 690 0165 000000   		.align	2
 691              	.LC12:
 692 0168 6F766F20 		.ascii	"ovo je prvi red!\015\012Ovo je drugi red!\015\012Ov"
 692      6A652070 
 692      72766920 
 692      72656421 
 692      0D0A4F76 
 693 018f 6F206E69 		.ascii	"o nije u redu....\015\012\000"
 693      6A652075 
 693      20726564 
 693      752E2E2E 
 693      2E0D0A00 
 694 01a3 00       		.align	2
 695              	.LC13:
 696 01a4 57726F74 		.ascii	"Wrote %i bytes to 'write.txt'!\015\012\000"
 696      65202569 
 696      20627974 
 696      65732074 
 696      6F202777 
 697 01c5 000000   		.align	2
 698              	.LC14:
 699 01c8 665F7772 		.ascii	"f_write error (%i)\015\012\000"
 699      69746520 
 699      6572726F 
 699      72202825 
 699      69290D0A 
 700 01dd 000000   		.align	2
 701              	.LC15:
 702 01e0 53504920 		.ascii	"SPI OK\015\012\000"
 702      4F4B0D0A 
 702      00
 703 01e9 000000   		.align	2
ARM GAS  /tmp/ccb0q6Ap.s 			page 30


 704              	.LC16:
 705 01ec 41434B20 		.ascii	"ACK CMD Can't find OV2640 module!\015\012\000"
 705      434D4420 
 705      43616E27 
 705      74206669 
 705      6E64204F 
 706              		.align	2
 707              	.LC17:
 708 0210 41434B20 		.ascii	"ACK CMD OV2640 detected.\015\012\000"
 708      434D4420 
 708      4F563236 
 708      34302064 
 708      65746563 
 709 022b 00       		.align	2
 710              	.LC18:
 711 022c 41434B20 		.ascii	"ACK CMD Can't find OV5640 module!\015\012\000"
 711      434D4420 
 711      43616E27 
 711      74206669 
 711      6E64204F 
 712              		.align	2
 713              	.LC19:
 714 0250 41434B20 		.ascii	"ACK CMD OV5640 detected.\015\012\000"
 714      434D4420 
 714      4F563536 
 714      34302064 
 714      65746563 
 715 026b 00       		.align	2
 716              	.LC20:
 717 026c 41434B20 		.ascii	"ACK CMD Can't find OV5642 module!\015\012\000"
 717      434D4420 
 717      43616E27 
 717      74206669 
 717      6E64204F 
 718              		.align	2
 719              	.LC21:
 720 0290 41434B20 		.ascii	"ACK CMD OV5642 detected.\015\012\000"
 720      434D4420 
 720      4F563536 
 720      34322064 
 720      65746563 
 721 02ab 00       		.align	2
 722              	.LC22:
 723 02ac 41434B20 		.ascii	"ACK CMD switch to OV2640_1600x1200\015\012\000"
 723      434D4420 
 723      73776974 
 723      63682074 
 723      6F204F56 
 724 02d1 000000   		.align	2
 725              	.LC23:
 726 02d4 6C656E67 		.ascii	"length read from fifo  =%d\015\012\000"
 726      74682072 
 726      65616420 
 726      66726F6D 
 726      20666966 
 727              		.section	.text.main,"ax",%progbits
 728              		.align	1
ARM GAS  /tmp/ccb0q6Ap.s 			page 31


 729              		.global	main
 730              		.syntax unified
 731              		.thumb
 732              		.thumb_func
 733              		.fpu softvfp
 735              	main:
 736              	.LFB68:
  81:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 737              		.loc 1 81 1 view -0
 738              		.cfi_startproc
 739              		@ args = 0, pretend = 0, frame = 2160
 740              		@ frame_needed = 0, uses_anonymous_args = 0
 741 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 742              	.LCFI11:
 743              		.cfi_def_cfa_offset 20
 744              		.cfi_offset 4, -20
 745              		.cfi_offset 5, -16
 746              		.cfi_offset 6, -12
 747              		.cfi_offset 7, -8
 748              		.cfi_offset 14, -4
 749 0002 ADF6740D 		subw	sp, sp, #2164
 750              	.LCFI12:
 751              		.cfi_def_cfa_offset 2184
  89:Core/Src/main.c **** 
 752              		.loc 1 89 3 view .LVU210
 753 0006 FFF7FEFF 		bl	HAL_Init
 754              	.LVL18:
  96:Core/Src/main.c **** 
 755              		.loc 1 96 3 view .LVU211
 756 000a FFF7FEFF 		bl	SystemClock_Config
 757              	.LVL19:
 103:Core/Src/main.c ****   MX_SPI2_Init();
 758              		.loc 1 103 3 view .LVU212
 759 000e FFF7FEFF 		bl	MX_GPIO_Init
 760              	.LVL20:
 104:Core/Src/main.c ****   MX_FATFS_Init();
 761              		.loc 1 104 3 view .LVU213
 762 0012 FFF7FEFF 		bl	MX_SPI2_Init
 763              	.LVL21:
 105:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 764              		.loc 1 105 3 view .LVU214
 765 0016 FFF7FEFF 		bl	MX_FATFS_Init
 766              	.LVL22:
 106:Core/Src/main.c ****   MX_I2C1_Init();
 767              		.loc 1 106 3 view .LVU215
 768 001a FFF7FEFF 		bl	MX_USB_DEVICE_Init
 769              	.LVL23:
 107:Core/Src/main.c ****   MX_SPI1_Init();
 770              		.loc 1 107 3 view .LVU216
 771 001e FFF7FEFF 		bl	MX_I2C1_Init
 772              	.LVL24:
 108:Core/Src/main.c ****   //MX_TIM1_Init();
 773              		.loc 1 108 3 view .LVU217
 774 0022 FFF7FEFF 		bl	MX_SPI1_Init
 775              	.LVL25:
 110:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim1);
 776              		.loc 1 110 3 view .LVU218
ARM GAS  /tmp/ccb0q6Ap.s 			page 32


 777 0026 FFF7FEFF 		bl	MX_USART1_UART_Init
 778              	.LVL26:
 111:Core/Src/main.c **** 
 779              		.loc 1 111 3 view .LVU219
 780 002a C048     		ldr	r0, .L68
 781 002c FFF7FEFF 		bl	HAL_TIM_Base_Start
 782              	.LVL27:
 114:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
 783              		.loc 1 114 3 view .LVU220
 784 0030 BF4E     		ldr	r6, .L68+4
 785 0032 3446     		mov	r4, r6
 786 0034 BF4D     		ldr	r5, .L68+8
 787 0036 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 788 0038 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 789 003a 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 790 003e 84E80F00 		stm	r4, {r0, r1, r2, r3}
 115:Core/Src/main.c ****   HAL_Delay(50); // a short delay is important to let the SD card settle
 791              		.loc 1 115 3 view .LVU221
 115:Core/Src/main.c ****   HAL_Delay(50); // a short delay is important to let the SD card settle
 792              		.loc 1 115 35 is_stmt 0 view .LVU222
 793 0042 3046     		mov	r0, r6
 794 0044 FFF7FEFF 		bl	strlen
 795              	.LVL28:
 115:Core/Src/main.c ****   HAL_Delay(50); // a short delay is important to let the SD card settle
 796              		.loc 1 115 3 view .LVU223
 797 0048 3223     		movs	r3, #50
 798 004a 82B2     		uxth	r2, r0
 799 004c 3146     		mov	r1, r6
 800 004e BA48     		ldr	r0, .L68+12
 801 0050 FFF7FEFF 		bl	HAL_UART_Transmit
 802              	.LVL29:
 116:Core/Src/main.c **** 
 803              		.loc 1 116 3 is_stmt 1 view .LVU224
 804 0054 3220     		movs	r0, #50
 805 0056 FFF7FEFF 		bl	HAL_Delay
 806              	.LVL30:
 119:Core/Src/main.c ****   FIL fil;      // File handle
 807              		.loc 1 119 3 view .LVU225
 120:Core/Src/main.c ****   FRESULT fres; // Result after operations
 808              		.loc 1 120 3 view .LVU226
 121:Core/Src/main.c **** 
 809              		.loc 1 121 3 view .LVU227
 124:Core/Src/main.c ****   if (fres != FR_OK)
 810              		.loc 1 124 3 view .LVU228
 124:Core/Src/main.c ****   if (fres != FR_OK)
 811              		.loc 1 124 10 is_stmt 0 view .LVU229
 812 005a 0122     		movs	r2, #1
 813 005c B749     		ldr	r1, .L68+16
 814 005e 0DF5C860 		add	r0, sp, #1600
 815 0062 FFF7FEFF 		bl	f_mount
 816              	.LVL31:
 125:Core/Src/main.c ****   {
 817              		.loc 1 125 3 is_stmt 1 view .LVU230
 125:Core/Src/main.c ****   {
 818              		.loc 1 125 6 is_stmt 0 view .LVU231
 819 0066 70B1     		cbz	r0, .L40
 820 0068 0246     		mov	r2, r0
ARM GAS  /tmp/ccb0q6Ap.s 			page 33


 127:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
 821              		.loc 1 127 5 is_stmt 1 view .LVU232
 822 006a B549     		ldr	r1, .L68+20
 823 006c 3046     		mov	r0, r6
 824              	.LVL32:
 127:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
 825              		.loc 1 127 5 is_stmt 0 view .LVU233
 826 006e FFF7FEFF 		bl	sprintf
 827              	.LVL33:
 128:Core/Src/main.c ****     while (1)
 828              		.loc 1 128 5 is_stmt 1 view .LVU234
 128:Core/Src/main.c ****     while (1)
 829              		.loc 1 128 37 is_stmt 0 view .LVU235
 830 0072 3046     		mov	r0, r6
 831 0074 FFF7FEFF 		bl	strlen
 832              	.LVL34:
 128:Core/Src/main.c ****     while (1)
 833              		.loc 1 128 5 view .LVU236
 834 0078 3223     		movs	r3, #50
 835 007a 82B2     		uxth	r2, r0
 836 007c 3146     		mov	r1, r6
 837 007e AE48     		ldr	r0, .L68+12
 838 0080 FFF7FEFF 		bl	HAL_UART_Transmit
 839              	.LVL35:
 840              	.L41:
 129:Core/Src/main.c ****       ;
 841              		.loc 1 129 5 is_stmt 1 discriminator 1 view .LVU237
 130:Core/Src/main.c ****   }
 842              		.loc 1 130 7 discriminator 1 view .LVU238
 129:Core/Src/main.c ****       ;
 843              		.loc 1 129 11 discriminator 1 view .LVU239
 844 0084 FEE7     		b	.L41
 845              	.LVL36:
 846              	.L40:
 134:Core/Src/main.c **** 
 847              		.loc 1 134 3 view .LVU240
 136:Core/Src/main.c **** 
 848              		.loc 1 136 3 view .LVU241
 138:Core/Src/main.c ****   if (fres != FR_OK)
 849              		.loc 1 138 3 view .LVU242
 138:Core/Src/main.c ****   if (fres != FR_OK)
 850              		.loc 1 138 10 is_stmt 0 view .LVU243
 851 0086 0DF20C42 		addw	r2, sp, #1036
 852 008a 0DF58261 		add	r1, sp, #1040
 853 008e AB48     		ldr	r0, .L68+16
 854              	.LVL37:
 138:Core/Src/main.c ****   if (fres != FR_OK)
 855              		.loc 1 138 10 view .LVU244
 856 0090 FFF7FEFF 		bl	f_getfree
 857              	.LVL38:
 139:Core/Src/main.c ****   {
 858              		.loc 1 139 3 is_stmt 1 view .LVU245
 139:Core/Src/main.c ****   {
 859              		.loc 1 139 6 is_stmt 0 view .LVU246
 860 0094 0246     		mov	r2, r0
 861 0096 70B1     		cbz	r0, .L42
 141:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
ARM GAS  /tmp/ccb0q6Ap.s 			page 34


 862              		.loc 1 141 5 is_stmt 1 view .LVU247
 863 0098 A54C     		ldr	r4, .L68+4
 864 009a AA49     		ldr	r1, .L68+24
 865 009c 2046     		mov	r0, r4
 866              	.LVL39:
 141:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
 867              		.loc 1 141 5 is_stmt 0 view .LVU248
 868 009e FFF7FEFF 		bl	sprintf
 869              	.LVL40:
 142:Core/Src/main.c ****     while (1)
 870              		.loc 1 142 5 is_stmt 1 view .LVU249
 142:Core/Src/main.c ****     while (1)
 871              		.loc 1 142 37 is_stmt 0 view .LVU250
 872 00a2 2046     		mov	r0, r4
 873 00a4 FFF7FEFF 		bl	strlen
 874              	.LVL41:
 142:Core/Src/main.c ****     while (1)
 875              		.loc 1 142 5 view .LVU251
 876 00a8 3223     		movs	r3, #50
 877 00aa 82B2     		uxth	r2, r0
 878 00ac 2146     		mov	r1, r4
 879 00ae A248     		ldr	r0, .L68+12
 880 00b0 FFF7FEFF 		bl	HAL_UART_Transmit
 881              	.LVL42:
 882              	.L43:
 143:Core/Src/main.c ****       ;
 883              		.loc 1 143 5 is_stmt 1 discriminator 2 view .LVU252
 144:Core/Src/main.c ****   }
 884              		.loc 1 144 7 discriminator 2 view .LVU253
 143:Core/Src/main.c ****       ;
 885              		.loc 1 143 11 discriminator 2 view .LVU254
 886 00b4 FEE7     		b	.L43
 887              	.LVL43:
 888              	.L42:
 148:Core/Src/main.c ****   free_sectors = free_clusters * getFreeFs->csize;
 889              		.loc 1 148 3 view .LVU255
 148:Core/Src/main.c ****   free_sectors = free_clusters * getFreeFs->csize;
 890              		.loc 1 148 29 is_stmt 0 view .LVU256
 891 00b6 DDF80C24 		ldr	r2, [sp, #1036]
 892 00ba D2F81432 		ldr	r3, [r2, #532]
 148:Core/Src/main.c ****   free_sectors = free_clusters * getFreeFs->csize;
 893              		.loc 1 148 40 view .LVU257
 894 00be 023B     		subs	r3, r3, #2
 148:Core/Src/main.c ****   free_sectors = free_clusters * getFreeFs->csize;
 895              		.loc 1 148 56 view .LVU258
 896 00c0 92F80212 		ldrb	r1, [r2, #514]	@ zero_extendqisi2
 148:Core/Src/main.c ****   free_sectors = free_clusters * getFreeFs->csize;
 897              		.loc 1 148 17 view .LVU259
 898 00c4 01FB03F2 		mul	r2, r1, r3
 899              	.LVL44:
 149:Core/Src/main.c **** 
 900              		.loc 1 149 3 is_stmt 1 view .LVU260
 149:Core/Src/main.c **** 
 901              		.loc 1 149 32 is_stmt 0 view .LVU261
 902 00c8 DDF81034 		ldr	r3, [sp, #1040]
 149:Core/Src/main.c **** 
 903              		.loc 1 149 16 view .LVU262
ARM GAS  /tmp/ccb0q6Ap.s 			page 35


 904 00cc 03FB01F3 		mul	r3, r3, r1
 905              	.LVL45:
 151:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
 906              		.loc 1 151 3 is_stmt 1 view .LVU263
 907 00d0 974C     		ldr	r4, .L68+4
 908 00d2 5B08     		lsrs	r3, r3, #1
 909              	.LVL46:
 151:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
 910              		.loc 1 151 3 is_stmt 0 view .LVU264
 911 00d4 5208     		lsrs	r2, r2, #1
 912              	.LVL47:
 151:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
 913              		.loc 1 151 3 view .LVU265
 914 00d6 9C49     		ldr	r1, .L68+28
 915              	.LVL48:
 151:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
 916              		.loc 1 151 3 view .LVU266
 917 00d8 2046     		mov	r0, r4
 918              	.LVL49:
 151:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
 919              		.loc 1 151 3 view .LVU267
 920 00da FFF7FEFF 		bl	sprintf
 921              	.LVL50:
 152:Core/Src/main.c **** 
 922              		.loc 1 152 3 is_stmt 1 view .LVU268
 152:Core/Src/main.c **** 
 923              		.loc 1 152 35 is_stmt 0 view .LVU269
 924 00de 2046     		mov	r0, r4
 925 00e0 FFF7FEFF 		bl	strlen
 926              	.LVL51:
 152:Core/Src/main.c **** 
 927              		.loc 1 152 3 view .LVU270
 928 00e4 3223     		movs	r3, #50
 929 00e6 82B2     		uxth	r2, r0
 930 00e8 2146     		mov	r1, r4
 931 00ea 9348     		ldr	r0, .L68+12
 932 00ec FFF7FEFF 		bl	HAL_UART_Transmit
 933              	.LVL52:
 155:Core/Src/main.c ****   if (fres != FR_OK)
 934              		.loc 1 155 3 is_stmt 1 view .LVU271
 155:Core/Src/main.c ****   if (fres != FR_OK)
 935              		.loc 1 155 10 is_stmt 0 view .LVU272
 936 00f0 0122     		movs	r2, #1
 937 00f2 9649     		ldr	r1, .L68+32
 938 00f4 0DF21440 		addw	r0, sp, #1044
 939 00f8 FFF7FEFF 		bl	f_open
 940              	.LVL53:
 156:Core/Src/main.c ****   {
 941              		.loc 1 156 3 is_stmt 1 view .LVU273
 156:Core/Src/main.c ****   {
 942              		.loc 1 156 6 is_stmt 0 view .LVU274
 943 00fc 0746     		mov	r7, r0
 944 00fe 70B1     		cbz	r0, .L44
 158:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
 945              		.loc 1 158 5 is_stmt 1 view .LVU275
 946 0100 0246     		mov	r2, r0
 947 0102 9349     		ldr	r1, .L68+36
ARM GAS  /tmp/ccb0q6Ap.s 			page 36


 948 0104 2046     		mov	r0, r4
 949              	.LVL54:
 158:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
 950              		.loc 1 158 5 is_stmt 0 view .LVU276
 951 0106 FFF7FEFF 		bl	sprintf
 952              	.LVL55:
 159:Core/Src/main.c **** 
 953              		.loc 1 159 5 is_stmt 1 view .LVU277
 159:Core/Src/main.c **** 
 954              		.loc 1 159 37 is_stmt 0 view .LVU278
 955 010a 2046     		mov	r0, r4
 956 010c FFF7FEFF 		bl	strlen
 957              	.LVL56:
 159:Core/Src/main.c **** 
 958              		.loc 1 159 5 view .LVU279
 959 0110 3223     		movs	r3, #50
 960 0112 82B2     		uxth	r2, r0
 961 0114 2146     		mov	r1, r4
 962 0116 8848     		ldr	r0, .L68+12
 963 0118 FFF7FEFF 		bl	HAL_UART_Transmit
 964              	.LVL57:
 965              	.L45:
 161:Core/Src/main.c ****       ;
 966              		.loc 1 161 5 is_stmt 1 discriminator 3 view .LVU280
 162:Core/Src/main.c ****   }
 967              		.loc 1 162 7 discriminator 3 view .LVU281
 161:Core/Src/main.c ****       ;
 968              		.loc 1 161 11 discriminator 3 view .LVU282
 969 011c FEE7     		b	.L45
 970              	.LVL58:
 971              	.L44:
 164:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
 972              		.loc 1 164 3 view .LVU283
 973 011e 844E     		ldr	r6, .L68+4
 974 0120 3446     		mov	r4, r6
 975 0122 8C4D     		ldr	r5, .L68+40
 976 0124 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 977              	.LVL59:
 164:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
 978              		.loc 1 164 3 is_stmt 0 view .LVU284
 979 0126 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 980 0128 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 981 012a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 982 012c 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 983 0130 07C4     		stmia	r4!, {r0, r1, r2}
 984 0132 2370     		strb	r3, [r4]
 165:Core/Src/main.c **** 
 985              		.loc 1 165 3 is_stmt 1 view .LVU285
 165:Core/Src/main.c **** 
 986              		.loc 1 165 35 is_stmt 0 view .LVU286
 987 0134 3046     		mov	r0, r6
 988 0136 FFF7FEFF 		bl	strlen
 989              	.LVL60:
 165:Core/Src/main.c **** 
 990              		.loc 1 165 3 view .LVU287
 991 013a 3223     		movs	r3, #50
 992 013c 82B2     		uxth	r2, r0
ARM GAS  /tmp/ccb0q6Ap.s 			page 37


 993 013e 3146     		mov	r1, r6
 994 0140 7D48     		ldr	r0, .L68+12
 995 0142 FFF7FEFF 		bl	HAL_UART_Transmit
 996              	.LVL61:
 168:Core/Src/main.c **** 
 997              		.loc 1 168 3 is_stmt 1 view .LVU288
 172:Core/Src/main.c ****   if (rres != 0)
 998              		.loc 1 172 3 view .LVU289
 172:Core/Src/main.c ****   if (rres != 0)
 999              		.loc 1 172 17 is_stmt 0 view .LVU290
 1000 0146 0DF21442 		addw	r2, sp, #1044
 1001 014a 1E21     		movs	r1, #30
 1002 014c 03A8     		add	r0, sp, #12
 1003 014e FFF7FEFF 		bl	f_gets
 1004              	.LVL62:
 173:Core/Src/main.c ****   {
 1005              		.loc 1 173 3 is_stmt 1 view .LVU291
 173:Core/Src/main.c ****   {
 1006              		.loc 1 173 6 is_stmt 0 view .LVU292
 1007 0152 0028     		cmp	r0, #0
 1008 0154 00F08980 		beq	.L46
 175:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
 1009              		.loc 1 175 5 is_stmt 1 view .LVU293
 1010 0158 03AA     		add	r2, sp, #12
 1011 015a 7F49     		ldr	r1, .L68+44
 1012 015c 3046     		mov	r0, r6
 1013              	.LVL63:
 175:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
 1014              		.loc 1 175 5 is_stmt 0 view .LVU294
 1015 015e FFF7FEFF 		bl	sprintf
 1016              	.LVL64:
 176:Core/Src/main.c ****   }
 1017              		.loc 1 176 5 is_stmt 1 view .LVU295
 176:Core/Src/main.c ****   }
 1018              		.loc 1 176 37 is_stmt 0 view .LVU296
 1019 0162 3046     		mov	r0, r6
 1020 0164 FFF7FEFF 		bl	strlen
 1021              	.LVL65:
 176:Core/Src/main.c ****   }
 1022              		.loc 1 176 5 view .LVU297
 1023 0168 3223     		movs	r3, #50
 1024 016a 82B2     		uxth	r2, r0
 1025 016c 3146     		mov	r1, r6
 1026 016e 7248     		ldr	r0, .L68+12
 1027 0170 FFF7FEFF 		bl	HAL_UART_Transmit
 1028              	.LVL66:
 1029              	.L47:
 185:Core/Src/main.c **** 
 1030              		.loc 1 185 3 is_stmt 1 view .LVU298
 1031 0174 0DF21440 		addw	r0, sp, #1044
 1032 0178 FFF7FEFF 		bl	f_close
 1033              	.LVL67:
 188:Core/Src/main.c ****   if (fres == FR_OK)
 1034              		.loc 1 188 3 view .LVU299
 188:Core/Src/main.c ****   if (fres == FR_OK)
 1035              		.loc 1 188 10 is_stmt 0 view .LVU300
 1036 017c 1A22     		movs	r2, #26
ARM GAS  /tmp/ccb0q6Ap.s 			page 38


 1037 017e 7749     		ldr	r1, .L68+48
 1038 0180 0DF21440 		addw	r0, sp, #1044
 1039 0184 FFF7FEFF 		bl	f_open
 1040              	.LVL68:
 189:Core/Src/main.c ****   {
 1041              		.loc 1 189 3 is_stmt 1 view .LVU301
 189:Core/Src/main.c ****   {
 1042              		.loc 1 189 6 is_stmt 0 view .LVU302
 1043 0188 0246     		mov	r2, r0
 1044 018a 0028     		cmp	r0, #0
 1045 018c 7DD1     		bne	.L48
 191:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
 1046              		.loc 1 191 5 is_stmt 1 view .LVU303
 1047 018e 684E     		ldr	r6, .L68+4
 1048 0190 3446     		mov	r4, r6
 1049 0192 734D     		ldr	r5, .L68+52
 1050 0194 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1051              	.LVL69:
 191:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
 1052              		.loc 1 191 5 is_stmt 0 view .LVU304
 1053 0196 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1054 0198 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1055 019a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1056 019c 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 1057 01a0 07C4     		stmia	r4!, {r0, r1, r2}
 1058 01a2 2370     		strb	r3, [r4]
 192:Core/Src/main.c ****   }
 1059              		.loc 1 192 5 is_stmt 1 view .LVU305
 192:Core/Src/main.c ****   }
 1060              		.loc 1 192 37 is_stmt 0 view .LVU306
 1061 01a4 3046     		mov	r0, r6
 1062 01a6 FFF7FEFF 		bl	strlen
 1063              	.LVL70:
 192:Core/Src/main.c ****   }
 1064              		.loc 1 192 5 view .LVU307
 1065 01aa 3223     		movs	r3, #50
 1066 01ac 82B2     		uxth	r2, r0
 1067 01ae 3146     		mov	r1, r6
 1068 01b0 6148     		ldr	r0, .L68+12
 1069 01b2 FFF7FEFF 		bl	HAL_UART_Transmit
 1070              	.LVL71:
 1071              	.L49:
 202:Core/Src/main.c ****   UINT bytesWrote;
 1072              		.loc 1 202 3 is_stmt 1 view .LVU308
 1073 01b6 03AC     		add	r4, sp, #12
 1074 01b8 6A4D     		ldr	r5, .L68+56
 1075 01ba 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1076 01bc 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1077 01be 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1078 01c0 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1079 01c2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1080 01c4 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1081 01c6 95E80700 		ldm	r5, {r0, r1, r2}
 1082 01ca 03C4     		stmia	r4!, {r0, r1}
 1083 01cc 24F8022B 		strh	r2, [r4], #2	@ movhi
 1084 01d0 120C     		lsrs	r2, r2, #16
 1085 01d2 2270     		strb	r2, [r4]
ARM GAS  /tmp/ccb0q6Ap.s 			page 39


 203:Core/Src/main.c ****   fres = f_write(&fil, readBuf, strlen(readBuf), &bytesWrote);
 1086              		.loc 1 203 3 view .LVU309
 204:Core/Src/main.c ****   if (fres == FR_OK)
 1087              		.loc 1 204 3 view .LVU310
 204:Core/Src/main.c ****   if (fres == FR_OK)
 1088              		.loc 1 204 10 is_stmt 0 view .LVU311
 1089 01d4 03A8     		add	r0, sp, #12
 1090 01d6 FFF7FEFF 		bl	strlen
 1091              	.LVL72:
 1092 01da 0246     		mov	r2, r0
 1093 01dc 02AB     		add	r3, sp, #8
 1094 01de 03A9     		add	r1, sp, #12
 1095 01e0 0DF21440 		addw	r0, sp, #1044
 1096 01e4 FFF7FEFF 		bl	f_write
 1097              	.LVL73:
 205:Core/Src/main.c ****   {
 1098              		.loc 1 205 3 is_stmt 1 view .LVU312
 205:Core/Src/main.c ****   {
 1099              		.loc 1 205 6 is_stmt 0 view .LVU313
 1100 01e8 0246     		mov	r2, r0
 1101 01ea 0028     		cmp	r0, #0
 1102 01ec 5CD1     		bne	.L50
 207:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
 1103              		.loc 1 207 5 is_stmt 1 view .LVU314
 1104 01ee 504C     		ldr	r4, .L68+4
 1105 01f0 029A     		ldr	r2, [sp, #8]
 1106 01f2 5D49     		ldr	r1, .L68+60
 1107 01f4 2046     		mov	r0, r4
 1108              	.LVL74:
 207:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
 1109              		.loc 1 207 5 is_stmt 0 view .LVU315
 1110 01f6 FFF7FEFF 		bl	sprintf
 1111              	.LVL75:
 208:Core/Src/main.c ****   }
 1112              		.loc 1 208 5 is_stmt 1 view .LVU316
 208:Core/Src/main.c ****   }
 1113              		.loc 1 208 37 is_stmt 0 view .LVU317
 1114 01fa 2046     		mov	r0, r4
 1115 01fc FFF7FEFF 		bl	strlen
 1116              	.LVL76:
 208:Core/Src/main.c ****   }
 1117              		.loc 1 208 5 view .LVU318
 1118 0200 3223     		movs	r3, #50
 1119 0202 82B2     		uxth	r2, r0
 1120 0204 2146     		mov	r1, r4
 1121 0206 4C48     		ldr	r0, .L68+12
 1122 0208 FFF7FEFF 		bl	HAL_UART_Transmit
 1123              	.LVL77:
 1124              	.L51:
 217:Core/Src/main.c **** 
 1125              		.loc 1 217 3 is_stmt 1 view .LVU319
 1126 020c 0DF21440 		addw	r0, sp, #1044
 1127 0210 FFF7FEFF 		bl	f_close
 1128              	.LVL78:
 220:Core/Src/main.c **** 
 1129              		.loc 1 220 3 view .LVU320
 1130 0214 0022     		movs	r2, #0
ARM GAS  /tmp/ccb0q6Ap.s 			page 40


 1131 0216 4949     		ldr	r1, .L68+16
 1132 0218 1046     		mov	r0, r2
 1133 021a FFF7FEFF 		bl	f_mount
 1134              	.LVL79:
 222:Core/Src/main.c **** 
 1135              		.loc 1 222 3 view .LVU321
 1136 021e FFF7FEFF 		bl	ArduCAM_CS_init
 1137              	.LVL80:
 224:Core/Src/main.c ****   uint8_t Camera_WorkMode = 0;
 1138              		.loc 1 224 3 view .LVU322
 225:Core/Src/main.c ****   uint8_t start_shoot = 0;
 1139              		.loc 1 225 3 view .LVU323
 226:Core/Src/main.c ****   uint8_t stop = 0;
 1140              		.loc 1 226 3 view .LVU324
 227:Core/Src/main.c **** 
 1141              		.loc 1 227 3 view .LVU325
 1142              	.L53:
 229:Core/Src/main.c ****   {
 1143              		.loc 1 229 3 view .LVU326
 1144              	.LBB10:
 231:Core/Src/main.c ****     uint8_t tx_data[2] = {0x80 | ARDUCHIP_TEST1, 0x55};
 1145              		.loc 1 231 5 view .LVU327
 1146 0222 FFF7FEFF 		bl	CS_LOW
 1147              	.LVL81:
 232:Core/Src/main.c ****     uint8_t rx_data = 0x00;
 1148              		.loc 1 232 5 view .LVU328
 232:Core/Src/main.c ****     uint8_t rx_data = 0x00;
 1149              		.loc 1 232 13 is_stmt 0 view .LVU329
 1150 0226 4FF4AB43 		mov	r3, #21888
 1151 022a ADF80430 		strh	r3, [sp, #4]	@ movhi
 233:Core/Src/main.c ****     HAL_SPI_Transmit(&hspi1,tx_data,2,100);
 1152              		.loc 1 233 5 is_stmt 1 view .LVU330
 233:Core/Src/main.c ****     HAL_SPI_Transmit(&hspi1,tx_data,2,100);
 1153              		.loc 1 233 13 is_stmt 0 view .LVU331
 1154 022e 0023     		movs	r3, #0
 1155 0230 8DF80330 		strb	r3, [sp, #3]
 234:Core/Src/main.c ****     HAL_SPI_Receive(&hspi1,&rx_data,1,100);
 1156              		.loc 1 234 5 is_stmt 1 view .LVU332
 1157 0234 4D4C     		ldr	r4, .L68+64
 1158 0236 6423     		movs	r3, #100
 1159 0238 0222     		movs	r2, #2
 1160 023a 01A9     		add	r1, sp, #4
 1161 023c 2046     		mov	r0, r4
 1162 023e FFF7FEFF 		bl	HAL_SPI_Transmit
 1163              	.LVL82:
 235:Core/Src/main.c ****     CS_HIGH();
 1164              		.loc 1 235 5 view .LVU333
 1165 0242 6423     		movs	r3, #100
 1166 0244 0122     		movs	r2, #1
 1167 0246 0DF10301 		add	r1, sp, #3
 1168 024a 2046     		mov	r0, r4
 1169 024c FFF7FEFF 		bl	HAL_SPI_Receive
 1170              	.LVL83:
 236:Core/Src/main.c ****     if (rx_data == 0x55) break;
 1171              		.loc 1 236 5 view .LVU334
 1172 0250 FFF7FEFF 		bl	CS_HIGH
 1173              	.LVL84:
ARM GAS  /tmp/ccb0q6Ap.s 			page 41


 237:Core/Src/main.c ****   }
 1174              		.loc 1 237 5 view .LVU335
 237:Core/Src/main.c ****   }
 1175              		.loc 1 237 17 is_stmt 0 view .LVU336
 1176 0254 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 237:Core/Src/main.c ****   }
 1177              		.loc 1 237 8 view .LVU337
 1178 0258 552B     		cmp	r3, #85
 1179 025a E2D1     		bne	.L53
 1180              	.LBE10:
 239:Core/Src/main.c **** 
 1181              		.loc 1 239 3 is_stmt 1 view .LVU338
 1182 025c 6423     		movs	r3, #100
 1183 025e 0822     		movs	r2, #8
 1184 0260 4349     		ldr	r1, .L68+68
 1185 0262 3548     		ldr	r0, .L68+12
 1186 0264 FFF7FEFF 		bl	HAL_UART_Transmit
 1187              	.LVL85:
 1188 0268 A0E0     		b	.L62
 1189              	.LVL86:
 1190              	.L46:
 180:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
 1191              		.loc 1 180 5 view .LVU339
 1192 026a 314C     		ldr	r4, .L68+4
 1193 026c 3A46     		mov	r2, r7
 1194 026e 4149     		ldr	r1, .L68+72
 1195 0270 2046     		mov	r0, r4
 1196              	.LVL87:
 180:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
 1197              		.loc 1 180 5 is_stmt 0 view .LVU340
 1198 0272 FFF7FEFF 		bl	sprintf
 1199              	.LVL88:
 181:Core/Src/main.c ****   }
 1200              		.loc 1 181 5 is_stmt 1 view .LVU341
 181:Core/Src/main.c ****   }
 1201              		.loc 1 181 37 is_stmt 0 view .LVU342
 1202 0276 2046     		mov	r0, r4
 1203 0278 FFF7FEFF 		bl	strlen
 1204              	.LVL89:
 181:Core/Src/main.c ****   }
 1205              		.loc 1 181 5 view .LVU343
 1206 027c 3223     		movs	r3, #50
 1207 027e 82B2     		uxth	r2, r0
 1208 0280 2146     		mov	r1, r4
 1209 0282 2D48     		ldr	r0, .L68+12
 1210 0284 FFF7FEFF 		bl	HAL_UART_Transmit
 1211              	.LVL90:
 1212 0288 74E7     		b	.L47
 1213              	.LVL91:
 1214              	.L48:
 196:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
 1215              		.loc 1 196 5 is_stmt 1 view .LVU344
 1216 028a 294C     		ldr	r4, .L68+4
 1217 028c 3049     		ldr	r1, .L68+36
 1218 028e 2046     		mov	r0, r4
 1219              	.LVL92:
 196:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
ARM GAS  /tmp/ccb0q6Ap.s 			page 42


 1220              		.loc 1 196 5 is_stmt 0 view .LVU345
 1221 0290 FFF7FEFF 		bl	sprintf
 1222              	.LVL93:
 197:Core/Src/main.c ****   }
 1223              		.loc 1 197 5 is_stmt 1 view .LVU346
 197:Core/Src/main.c ****   }
 1224              		.loc 1 197 37 is_stmt 0 view .LVU347
 1225 0294 2046     		mov	r0, r4
 1226 0296 FFF7FEFF 		bl	strlen
 1227              	.LVL94:
 197:Core/Src/main.c ****   }
 1228              		.loc 1 197 5 view .LVU348
 1229 029a 3223     		movs	r3, #50
 1230 029c 82B2     		uxth	r2, r0
 1231 029e 2146     		mov	r1, r4
 1232 02a0 2548     		ldr	r0, .L68+12
 1233 02a2 FFF7FEFF 		bl	HAL_UART_Transmit
 1234              	.LVL95:
 1235 02a6 86E7     		b	.L49
 1236              	.LVL96:
 1237              	.L50:
 212:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
 1238              		.loc 1 212 5 is_stmt 1 view .LVU349
 1239 02a8 214C     		ldr	r4, .L68+4
 1240 02aa 3349     		ldr	r1, .L68+76
 1241 02ac 2046     		mov	r0, r4
 1242              	.LVL97:
 212:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
 1243              		.loc 1 212 5 is_stmt 0 view .LVU350
 1244 02ae FFF7FEFF 		bl	sprintf
 1245              	.LVL98:
 213:Core/Src/main.c ****   }
 1246              		.loc 1 213 5 is_stmt 1 view .LVU351
 213:Core/Src/main.c ****   }
 1247              		.loc 1 213 37 is_stmt 0 view .LVU352
 1248 02b2 2046     		mov	r0, r4
 1249 02b4 FFF7FEFF 		bl	strlen
 1250              	.LVL99:
 213:Core/Src/main.c ****   }
 1251              		.loc 1 213 5 view .LVU353
 1252 02b8 3223     		movs	r3, #50
 1253 02ba 82B2     		uxth	r2, r0
 1254 02bc 2146     		mov	r1, r4
 1255 02be 1E48     		ldr	r0, .L68+12
 1256 02c0 FFF7FEFF 		bl	HAL_UART_Transmit
 1257              	.LVL100:
 1258 02c4 A2E7     		b	.L51
 1259              	.LVL101:
 1260              	.L54:
 254:Core/Src/main.c ****       sprintf(buf, "ACK CMD OV2640 detected.\r\n");
 1261              		.loc 1 254 7 is_stmt 1 view .LVU354
 254:Core/Src/main.c ****       sprintf(buf, "ACK CMD OV2640 detected.\r\n");
 1262              		.loc 1 254 20 is_stmt 0 view .LVU355
 1263 02c6 2D4B     		ldr	r3, .L68+80
 1264 02c8 0522     		movs	r2, #5
 1265 02ca 1A70     		strb	r2, [r3]
 255:Core/Src/main.c ****       HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
ARM GAS  /tmp/ccb0q6Ap.s 			page 43


 1266              		.loc 1 255 7 is_stmt 1 view .LVU356
 1267 02cc 184E     		ldr	r6, .L68+4
 1268 02ce 3446     		mov	r4, r6
 1269 02d0 2B4D     		ldr	r5, .L68+84
 1270 02d2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1271 02d4 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1272 02d6 95E80700 		ldm	r5, {r0, r1, r2}
 1273 02da 03C4     		stmia	r4!, {r0, r1}
 1274 02dc 24F8022B 		strh	r2, [r4], #2	@ movhi
 1275 02e0 120C     		lsrs	r2, r2, #16
 1276 02e2 2270     		strb	r2, [r4]
 256:Core/Src/main.c **** 
 1277              		.loc 1 256 7 view .LVU357
 256:Core/Src/main.c **** 
 1278              		.loc 1 256 39 is_stmt 0 view .LVU358
 1279 02e4 3046     		mov	r0, r6
 1280 02e6 FFF7FEFF 		bl	strlen
 1281              	.LVL102:
 256:Core/Src/main.c **** 
 1282              		.loc 1 256 7 view .LVU359
 1283 02ea 3223     		movs	r3, #50
 1284 02ec 82B2     		uxth	r2, r0
 1285 02ee 3146     		mov	r1, r6
 1286 02f0 1148     		ldr	r0, .L68+12
 1287 02f2 FFF7FEFF 		bl	HAL_UART_Transmit
 1288              	.LVL103:
 258:Core/Src/main.c ****     }
 1289              		.loc 1 258 7 is_stmt 1 view .LVU360
 1290 02f6 D0E0     		b	.L57
 1291              	.L58:
 270:Core/Src/main.c ****       sprintf(buf, "ACK CMD OV5640 detected.\r\n");
 1292              		.loc 1 270 7 view .LVU361
 270:Core/Src/main.c ****       sprintf(buf, "ACK CMD OV5640 detected.\r\n");
 1293              		.loc 1 270 20 is_stmt 0 view .LVU362
 1294 02f8 204B     		ldr	r3, .L68+80
 1295 02fa 0B22     		movs	r2, #11
 1296 02fc 1A70     		strb	r2, [r3]
 271:Core/Src/main.c ****       HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
 1297              		.loc 1 271 7 is_stmt 1 view .LVU363
 1298 02fe 0C4E     		ldr	r6, .L68+4
 1299 0300 3446     		mov	r4, r6
 1300 0302 204D     		ldr	r5, .L68+88
 1301 0304 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1302 0306 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1303 0308 95E80700 		ldm	r5, {r0, r1, r2}
 1304 030c 03C4     		stmia	r4!, {r0, r1}
 1305 030e 24F8022B 		strh	r2, [r4], #2	@ movhi
 1306 0312 120C     		lsrs	r2, r2, #16
 1307 0314 2270     		strb	r2, [r4]
 272:Core/Src/main.c **** 
 1308              		.loc 1 272 7 view .LVU364
 272:Core/Src/main.c **** 
 1309              		.loc 1 272 39 is_stmt 0 view .LVU365
 1310 0316 3046     		mov	r0, r6
 1311 0318 FFF7FEFF 		bl	strlen
 1312              	.LVL104:
 272:Core/Src/main.c **** 
ARM GAS  /tmp/ccb0q6Ap.s 			page 44


 1313              		.loc 1 272 7 view .LVU366
 1314 031c 3223     		movs	r3, #50
 1315 031e 82B2     		uxth	r2, r0
 1316 0320 3146     		mov	r1, r6
 1317 0322 0548     		ldr	r0, .L68+12
 1318 0324 FFF7FEFF 		bl	HAL_UART_Transmit
 1319              	.LVL105:
 274:Core/Src/main.c ****     }
 1320              		.loc 1 274 7 is_stmt 1 view .LVU367
 1321 0328 B7E0     		b	.L57
 1322              	.L69:
 1323 032a 00BF     		.align	2
 1324              	.L68:
 1325 032c 00000000 		.word	htim1
 1326 0330 00000000 		.word	.LANCHOR0
 1327 0334 00000000 		.word	.LC0
 1328 0338 00000000 		.word	huart1
 1329 033c 20000000 		.word	.LC1
 1330 0340 24000000 		.word	.LC2
 1331 0344 3C000000 		.word	.LC3
 1332 0348 54000000 		.word	.LC4
 1333 034c 9C000000 		.word	.LC5
 1334 0350 A8000000 		.word	.LC6
 1335 0354 BC000000 		.word	.LC7
 1336 0358 EC000000 		.word	.LC8
 1337 035c 2C010000 		.word	.LC10
 1338 0360 38010000 		.word	.LC11
 1339 0364 68010000 		.word	.LC12
 1340 0368 A4010000 		.word	.LC13
 1341 036c 00000000 		.word	hspi1
 1342 0370 E0010000 		.word	.LC15
 1343 0374 18010000 		.word	.LC9
 1344 0378 C8010000 		.word	.LC14
 1345 037c 00000000 		.word	sensor_model
 1346 0380 10020000 		.word	.LC17
 1347 0384 50020000 		.word	.LC19
 1348              	.L59:
 281:Core/Src/main.c ****       HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
 1349              		.loc 1 281 7 view .LVU368
 1350 0388 654E     		ldr	r6, .L70
 1351 038a 3446     		mov	r4, r6
 1352 038c 654D     		ldr	r5, .L70+4
 1353 038e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1354 0390 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1355 0392 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1356 0394 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1357 0396 2B68     		ldr	r3, [r5]
 1358 0398 2360     		str	r3, [r4]
 282:Core/Src/main.c **** 
 1359              		.loc 1 282 7 view .LVU369
 282:Core/Src/main.c **** 
 1360              		.loc 1 282 39 is_stmt 0 view .LVU370
 1361 039a 3046     		mov	r0, r6
 1362 039c FFF7FEFF 		bl	strlen
 1363              	.LVL106:
 282:Core/Src/main.c **** 
 1364              		.loc 1 282 7 view .LVU371
ARM GAS  /tmp/ccb0q6Ap.s 			page 45


 1365 03a0 3223     		movs	r3, #50
 1366 03a2 82B2     		uxth	r2, r0
 1367 03a4 3146     		mov	r1, r6
 1368 03a6 6048     		ldr	r0, .L70+8
 1369 03a8 FFF7FEFF 		bl	HAL_UART_Transmit
 1370              	.LVL107:
 284:Core/Src/main.c ****     }
 1371              		.loc 1 284 7 is_stmt 1 view .LVU372
 241:Core/Src/main.c ****   {
 1372              		.loc 1 241 9 view .LVU373
 1373              	.L62:
 241:Core/Src/main.c ****   {
 1374              		.loc 1 241 3 view .LVU374
 243:Core/Src/main.c ****     wrSensorReg8_8(0xff, 0x01);
 1375              		.loc 1 243 5 view .LVU375
 243:Core/Src/main.c ****     wrSensorReg8_8(0xff, 0x01);
 1376              		.loc 1 243 17 is_stmt 0 view .LVU376
 1377 03ac 5F4B     		ldr	r3, .L70+12
 1378 03ae 6022     		movs	r2, #96
 1379 03b0 1A70     		strb	r2, [r3]
 244:Core/Src/main.c ****     rdSensorReg8_8(OV2640_CHIPID_HIGH, &vid);
 1380              		.loc 1 244 5 is_stmt 1 view .LVU377
 1381 03b2 0121     		movs	r1, #1
 1382 03b4 FF20     		movs	r0, #255
 1383 03b6 FFF7FEFF 		bl	wrSensorReg8_8
 1384              	.LVL108:
 245:Core/Src/main.c ****     rdSensorReg8_8(OV2640_CHIPID_LOW, &pid);
 1385              		.loc 1 245 5 view .LVU378
 1386 03ba 0DF10701 		add	r1, sp, #7
 1387 03be 0A20     		movs	r0, #10
 1388 03c0 FFF7FEFF 		bl	rdSensorReg8_8
 1389              	.LVL109:
 246:Core/Src/main.c ****     if ((vid != 0x26) && ((pid != 0x41) || (pid != 0x42)))
 1390              		.loc 1 246 5 view .LVU379
 1391 03c4 0DF10601 		add	r1, sp, #6
 1392 03c8 0B20     		movs	r0, #11
 1393 03ca FFF7FEFF 		bl	rdSensorReg8_8
 1394              	.LVL110:
 247:Core/Src/main.c ****     {
 1395              		.loc 1 247 5 view .LVU380
 247:Core/Src/main.c ****     {
 1396              		.loc 1 247 23 is_stmt 0 view .LVU381
 1397 03ce 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 247:Core/Src/main.c ****     {
 1398              		.loc 1 247 8 view .LVU382
 1399 03d2 262B     		cmp	r3, #38
 1400 03d4 3FF477AF 		beq	.L54
 249:Core/Src/main.c ****       //HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
 1401              		.loc 1 249 7 is_stmt 1 view .LVU383
 1402 03d8 514C     		ldr	r4, .L70
 1403 03da 554D     		ldr	r5, .L70+16
 1404 03dc 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1405 03de 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1406 03e0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1407 03e2 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1408 03e4 2B68     		ldr	r3, [r5]
 1409 03e6 2360     		str	r3, [r4]
ARM GAS  /tmp/ccb0q6Ap.s 			page 46


 260:Core/Src/main.c ****     rdSensorReg16_8(OV5640_CHIPID_HIGH, &vid);
 1410              		.loc 1 260 5 view .LVU384
 260:Core/Src/main.c ****     rdSensorReg16_8(OV5640_CHIPID_HIGH, &vid);
 1411              		.loc 1 260 17 is_stmt 0 view .LVU385
 1412 03e8 504B     		ldr	r3, .L70+12
 1413 03ea 7822     		movs	r2, #120
 1414 03ec 1A70     		strb	r2, [r3]
 261:Core/Src/main.c ****     rdSensorReg16_8(OV5640_CHIPID_LOW, &pid);
 1415              		.loc 1 261 5 is_stmt 1 view .LVU386
 1416 03ee 0DF10701 		add	r1, sp, #7
 1417 03f2 43F20A00 		movw	r0, #12298
 1418 03f6 FFF7FEFF 		bl	rdSensorReg16_8
 1419              	.LVL111:
 262:Core/Src/main.c ****     if ((vid != 0x56) || (pid != 0x40))
 1420              		.loc 1 262 5 view .LVU387
 1421 03fa 0DF10601 		add	r1, sp, #6
 1422 03fe 43F20B00 		movw	r0, #12299
 1423 0402 FFF7FEFF 		bl	rdSensorReg16_8
 1424              	.LVL112:
 263:Core/Src/main.c ****     {
 1425              		.loc 1 263 5 view .LVU388
 263:Core/Src/main.c ****     {
 1426              		.loc 1 263 14 is_stmt 0 view .LVU389
 1427 0406 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 263:Core/Src/main.c ****     {
 1428              		.loc 1 263 8 view .LVU390
 1429 040a 562B     		cmp	r3, #86
 1430 040c 04D1     		bne	.L55
 263:Core/Src/main.c ****     {
 1431              		.loc 1 263 31 discriminator 1 view .LVU391
 1432 040e 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 263:Core/Src/main.c ****     {
 1433              		.loc 1 263 23 discriminator 1 view .LVU392
 1434 0412 402B     		cmp	r3, #64
 1435 0414 3FF470AF 		beq	.L58
 1436              	.L55:
 265:Core/Src/main.c ****       HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
 1437              		.loc 1 265 7 is_stmt 1 view .LVU393
 1438 0418 414E     		ldr	r6, .L70
 1439 041a 3446     		mov	r4, r6
 1440 041c 454D     		ldr	r5, .L70+20
 1441 041e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1442 0420 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1443 0422 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1444 0424 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1445 0426 2B68     		ldr	r3, [r5]
 1446 0428 2360     		str	r3, [r4]
 266:Core/Src/main.c ****     }
 1447              		.loc 1 266 7 view .LVU394
 266:Core/Src/main.c ****     }
 1448              		.loc 1 266 39 is_stmt 0 view .LVU395
 1449 042a 3046     		mov	r0, r6
 1450 042c FFF7FEFF 		bl	strlen
 1451              	.LVL113:
 266:Core/Src/main.c ****     }
 1452              		.loc 1 266 7 view .LVU396
 1453 0430 3223     		movs	r3, #50
ARM GAS  /tmp/ccb0q6Ap.s 			page 47


 1454 0432 82B2     		uxth	r2, r0
 1455 0434 3146     		mov	r1, r6
 1456 0436 3C48     		ldr	r0, .L70+8
 1457 0438 FFF7FEFF 		bl	HAL_UART_Transmit
 1458              	.LVL114:
 276:Core/Src/main.c ****     rdSensorReg16_8(OV5642_CHIPID_HIGH, &vid);
 1459              		.loc 1 276 5 is_stmt 1 view .LVU397
 276:Core/Src/main.c ****     rdSensorReg16_8(OV5642_CHIPID_HIGH, &vid);
 1460              		.loc 1 276 17 is_stmt 0 view .LVU398
 1461 043c 3B4B     		ldr	r3, .L70+12
 1462 043e 7822     		movs	r2, #120
 1463 0440 1A70     		strb	r2, [r3]
 277:Core/Src/main.c ****     rdSensorReg16_8(OV5642_CHIPID_LOW, &pid);
 1464              		.loc 1 277 5 is_stmt 1 view .LVU399
 1465 0442 0DF10701 		add	r1, sp, #7
 1466 0446 43F20A00 		movw	r0, #12298
 1467 044a FFF7FEFF 		bl	rdSensorReg16_8
 1468              	.LVL115:
 278:Core/Src/main.c ****     if ((vid != 0x56) || (pid != 0x42))
 1469              		.loc 1 278 5 view .LVU400
 1470 044e 0DF10601 		add	r1, sp, #6
 1471 0452 43F20B00 		movw	r0, #12299
 1472 0456 FFF7FEFF 		bl	rdSensorReg16_8
 1473              	.LVL116:
 279:Core/Src/main.c ****     {
 1474              		.loc 1 279 5 view .LVU401
 279:Core/Src/main.c ****     {
 1475              		.loc 1 279 14 is_stmt 0 view .LVU402
 1476 045a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 279:Core/Src/main.c ****     {
 1477              		.loc 1 279 8 view .LVU403
 1478 045e 562B     		cmp	r3, #86
 1479 0460 92D1     		bne	.L59
 279:Core/Src/main.c ****     {
 1480              		.loc 1 279 31 discriminator 1 view .LVU404
 1481 0462 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 279:Core/Src/main.c ****     {
 1482              		.loc 1 279 23 discriminator 1 view .LVU405
 1483 0466 422B     		cmp	r3, #66
 1484 0468 8ED1     		bne	.L59
 288:Core/Src/main.c ****       sprintf(buf, "ACK CMD OV5642 detected.\r\n");
 1485              		.loc 1 288 7 is_stmt 1 view .LVU406
 288:Core/Src/main.c ****       sprintf(buf, "ACK CMD OV5642 detected.\r\n");
 1486              		.loc 1 288 20 is_stmt 0 view .LVU407
 1487 046a 334B     		ldr	r3, .L70+24
 1488 046c 0322     		movs	r2, #3
 1489 046e 1A70     		strb	r2, [r3]
 289:Core/Src/main.c ****       HAL_UART_Transmit(&huart1, buf, strlen(buf), 50);
 1490              		.loc 1 289 7 is_stmt 1 view .LVU408
 1491 0470 2B4E     		ldr	r6, .L70
 1492 0472 3446     		mov	r4, r6
 1493 0474 314D     		ldr	r5, .L70+28
 1494 0476 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1495 0478 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1496 047a 95E80700 		ldm	r5, {r0, r1, r2}
 1497 047e 03C4     		stmia	r4!, {r0, r1}
 1498 0480 24F8022B 		strh	r2, [r4], #2	@ movhi
ARM GAS  /tmp/ccb0q6Ap.s 			page 48


 1499 0484 120C     		lsrs	r2, r2, #16
 1500 0486 2270     		strb	r2, [r4]
 290:Core/Src/main.c **** 
 1501              		.loc 1 290 7 view .LVU409
 290:Core/Src/main.c **** 
 1502              		.loc 1 290 39 is_stmt 0 view .LVU410
 1503 0488 3046     		mov	r0, r6
 1504 048a FFF7FEFF 		bl	strlen
 1505              	.LVL117:
 290:Core/Src/main.c **** 
 1506              		.loc 1 290 7 view .LVU411
 1507 048e 3223     		movs	r3, #50
 1508 0490 82B2     		uxth	r2, r0
 1509 0492 3146     		mov	r1, r6
 1510 0494 2448     		ldr	r0, .L70+8
 1511 0496 FFF7FEFF 		bl	HAL_UART_Transmit
 1512              	.LVL118:
 292:Core/Src/main.c ****     }
 1513              		.loc 1 292 7 is_stmt 1 view .LVU412
 1514              	.L57:
 296:Core/Src/main.c **** 
 1515              		.loc 1 296 3 view .LVU413
 1516 049a 274B     		ldr	r3, .L70+24
 1517 049c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1518 049e FFF7FEFF 		bl	ArduCAM_Init
 1519              	.LVL119:
 298:Core/Src/main.c ****   sprintf(buf,"ACK CMD switch to OV2640_1600x1200\r\n");
 1520              		.loc 1 298 3 view .LVU414
 1521 04a2 0820     		movs	r0, #8
 1522 04a4 FFF7FEFF 		bl	OV2640_set_JPEG_size
 1523              	.LVL120:
 299:Core/Src/main.c ****   HAL_UART_Transmit(&huart1,buf,strlen(buf),50);
 1524              		.loc 1 299 3 view .LVU415
 1525 04a8 1D4E     		ldr	r6, .L70
 1526 04aa 3446     		mov	r4, r6
 1527 04ac 244D     		ldr	r5, .L70+32
 1528 04ae 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1529 04b0 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1530 04b2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1531 04b4 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1532 04b6 95E80300 		ldm	r5, {r0, r1}
 1533 04ba 44F8040B 		str	r0, [r4], #4
 1534 04be 2170     		strb	r1, [r4]
 300:Core/Src/main.c **** 
 1535              		.loc 1 300 3 view .LVU416
 300:Core/Src/main.c **** 
 1536              		.loc 1 300 33 is_stmt 0 view .LVU417
 1537 04c0 3046     		mov	r0, r6
 1538 04c2 FFF7FEFF 		bl	strlen
 1539              	.LVL121:
 300:Core/Src/main.c **** 
 1540              		.loc 1 300 3 view .LVU418
 1541 04c6 3223     		movs	r3, #50
 1542 04c8 82B2     		uxth	r2, r0
 1543 04ca 3146     		mov	r1, r6
 1544 04cc 1648     		ldr	r0, .L70+8
 1545 04ce FFF7FEFF 		bl	HAL_UART_Transmit
ARM GAS  /tmp/ccb0q6Ap.s 			page 49


 1546              	.LVL122:
 302:Core/Src/main.c **** 	clear_fifo_flag();
 1547              		.loc 1 302 2 is_stmt 1 view .LVU419
 1548 04d2 FFF7FEFF 		bl	flush_fifo
 1549              	.LVL123:
 303:Core/Src/main.c **** 	start_capture(); 
 1550              		.loc 1 303 2 view .LVU420
 1551 04d6 FFF7FEFF 		bl	clear_fifo_flag
 1552              	.LVL124:
 304:Core/Src/main.c **** 	while(!get_bit(ARDUCHIP_TRIG , CAP_DONE_MASK)){;}
 1553              		.loc 1 304 2 view .LVU421
 1554 04da FFF7FEFF 		bl	start_capture
 1555              	.LVL125:
 305:Core/Src/main.c **** 	//printf("ACK CMD capture done\r\n");
 1556              		.loc 1 305 2 view .LVU422
 1557              	.L63:
 305:Core/Src/main.c **** 	//printf("ACK CMD capture done\r\n");
 1558              		.loc 1 305 49 discriminator 1 view .LVU423
 305:Core/Src/main.c **** 	//printf("ACK CMD capture done\r\n");
 1559              		.loc 1 305 7 discriminator 1 view .LVU424
 305:Core/Src/main.c **** 	//printf("ACK CMD capture done\r\n");
 1560              		.loc 1 305 9 is_stmt 0 discriminator 1 view .LVU425
 1561 04de 0821     		movs	r1, #8
 1562 04e0 4120     		movs	r0, #65
 1563 04e2 FFF7FEFF 		bl	get_bit
 1564              	.LVL126:
 305:Core/Src/main.c **** 	//printf("ACK CMD capture done\r\n");
 1565              		.loc 1 305 7 discriminator 1 view .LVU426
 1566 04e6 0028     		cmp	r0, #0
 1567 04e8 F9D0     		beq	.L63
 307:Core/Src/main.c ****   sprintf(buf,"length read from fifo  =%d\r\n",length);
 1568              		.loc 1 307 2 is_stmt 1 view .LVU427
 307:Core/Src/main.c ****   sprintf(buf,"length read from fifo  =%d\r\n",length);
 1569              		.loc 1 307 14 is_stmt 0 view .LVU428
 1570 04ea FFF7FEFF 		bl	read_fifo_length
 1571              	.LVL127:
 1572 04ee 0246     		mov	r2, r0
 1573              	.LVL128:
 308:Core/Src/main.c ****   HAL_UART_Transmit(&huart1,buf,strlen(buf),50);
 1574              		.loc 1 308 3 is_stmt 1 view .LVU429
 1575 04f0 0B4C     		ldr	r4, .L70
 1576 04f2 1449     		ldr	r1, .L70+36
 1577 04f4 2046     		mov	r0, r4
 1578              	.LVL129:
 308:Core/Src/main.c ****   HAL_UART_Transmit(&huart1,buf,strlen(buf),50);
 1579              		.loc 1 308 3 is_stmt 0 view .LVU430
 1580 04f6 FFF7FEFF 		bl	sprintf
 1581              	.LVL130:
 309:Core/Src/main.c **** 
 1582              		.loc 1 309 3 is_stmt 1 view .LVU431
 309:Core/Src/main.c **** 
 1583              		.loc 1 309 33 is_stmt 0 view .LVU432
 1584 04fa 2046     		mov	r0, r4
 1585 04fc FFF7FEFF 		bl	strlen
 1586              	.LVL131:
 309:Core/Src/main.c **** 
 1587              		.loc 1 309 3 view .LVU433
ARM GAS  /tmp/ccb0q6Ap.s 			page 50


 1588 0500 3223     		movs	r3, #50
 1589 0502 82B2     		uxth	r2, r0
 1590 0504 2146     		mov	r1, r4
 1591 0506 0848     		ldr	r0, .L70+8
 1592 0508 FFF7FEFF 		bl	HAL_UART_Transmit
 1593              	.LVL132:
 1594              	.L64:
 315:Core/Src/main.c ****   {
 1595              		.loc 1 315 3 is_stmt 1 discriminator 1 view .LVU434
 318:Core/Src/main.c ****     HAL_Delay(200);
 1596              		.loc 1 318 5 discriminator 1 view .LVU435
 1597 050c 4FF40051 		mov	r1, #8192
 1598 0510 0D48     		ldr	r0, .L70+40
 1599 0512 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1600              	.LVL133:
 319:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 1601              		.loc 1 319 5 discriminator 1 view .LVU436
 1602 0516 C820     		movs	r0, #200
 1603 0518 FFF7FEFF 		bl	HAL_Delay
 1604              	.LVL134:
 315:Core/Src/main.c ****   {
 1605              		.loc 1 315 9 discriminator 1 view .LVU437
 1606 051c F6E7     		b	.L64
 1607              	.L71:
 1608 051e 00BF     		.align	2
 1609              	.L70:
 1610 0520 00000000 		.word	.LANCHOR0
 1611 0524 6C020000 		.word	.LC20
 1612 0528 00000000 		.word	huart1
 1613 052c 00000000 		.word	sensor_addr
 1614 0530 EC010000 		.word	.LC16
 1615 0534 2C020000 		.word	.LC18
 1616 0538 00000000 		.word	sensor_model
 1617 053c 90020000 		.word	.LC21
 1618 0540 AC020000 		.word	.LC22
 1619 0544 D4020000 		.word	.LC23
 1620 0548 00100140 		.word	1073811456
 1621              		.cfi_endproc
 1622              	.LFE68:
 1624              		.global	buf
 1625              		.comm	huart1,68,4
 1626              		.comm	htim1,72,4
 1627              		.comm	hspi2,88,4
 1628              		.comm	hspi1,88,4
 1629              		.comm	hi2c1,84,4
 1630              		.section	.bss.buf,"aw",%nobits
 1631              		.align	2
 1632              		.set	.LANCHOR0,. + 0
 1635              	buf:
 1636 0000 00000000 		.space	2048
 1636      00000000 
 1636      00000000 
 1636      00000000 
 1636      00000000 
 1637              		.text
 1638              	.Letext0:
 1639              		.file 3 "/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/machine/_default_types.h"
ARM GAS  /tmp/ccb0q6Ap.s 			page 51


 1640              		.file 4 "/opt/gcc-arm-none-eabi-9-2020-q2-update/lib/gcc/arm-none-eabi/9.3.1/include/stddef.h"
 1641              		.file 5 "/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/_types.h"
 1642              		.file 6 "/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/reent.h"
 1643              		.file 7 "/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/lock.h"
 1644              		.file 8 "/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/_stdint.h"
 1645              		.file 9 "Drivers/CMSIS/Include/core_cm3.h"
 1646              		.file 10 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 1647              		.file 11 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1648              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1649              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1650              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1651              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1652              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1653              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 1654              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 1655              		.file 19 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1656              		.file 20 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 1657              		.file 21 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1658              		.file 22 "Middlewares/Third_Party/FatFs/src/integer.h"
 1659              		.file 23 "Middlewares/Third_Party/FatFs/src/ff.h"
 1660              		.file 24 "Middlewares/Third_Party/FatFs/src/diskio.h"
 1661              		.file 25 "Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 1662              		.file 26 "FATFS/Target/user_diskio.h"
 1663              		.file 27 "FATFS/App/fatfs.h"
 1664              		.file 28 "/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/stdlib.h"
 1665              		.file 29 "ARDUCAM/ArduCAM.h"
 1666              		.file 30 "USB_DEVICE/App/usb_device.h"
 1667              		.file 31 "/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/string.h"
 1668              		.file 32 "/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/stdio.h"
ARM GAS  /tmp/ccb0q6Ap.s 			page 52


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccb0q6Ap.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccb0q6Ap.s:23     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccb0q6Ap.s:171    .text.MX_GPIO_Init:00000000000000a8 $d
     /tmp/ccb0q6Ap.s:178    .text.Error_Handler:0000000000000000 $t
     /tmp/ccb0q6Ap.s:185    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccb0q6Ap.s:217    .text.MX_SPI2_Init:0000000000000000 $t
     /tmp/ccb0q6Ap.s:223    .text.MX_SPI2_Init:0000000000000000 MX_SPI2_Init
     /tmp/ccb0q6Ap.s:292    .text.MX_SPI2_Init:0000000000000038 $d
                            *COM*:0000000000000058 hspi2
     /tmp/ccb0q6Ap.s:298    .text.MX_I2C1_Init:0000000000000000 $t
     /tmp/ccb0q6Ap.s:304    .text.MX_I2C1_Init:0000000000000000 MX_I2C1_Init
     /tmp/ccb0q6Ap.s:362    .text.MX_I2C1_Init:0000000000000030 $d
                            *COM*:0000000000000054 hi2c1
     /tmp/ccb0q6Ap.s:368    .text.MX_SPI1_Init:0000000000000000 $t
     /tmp/ccb0q6Ap.s:374    .text.MX_SPI1_Init:0000000000000000 MX_SPI1_Init
     /tmp/ccb0q6Ap.s:443    .text.MX_SPI1_Init:0000000000000038 $d
                            *COM*:0000000000000058 hspi1
     /tmp/ccb0q6Ap.s:449    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccb0q6Ap.s:455    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccb0q6Ap.s:510    .text.MX_USART1_UART_Init:000000000000002c $d
                            *COM*:0000000000000044 huart1
     /tmp/ccb0q6Ap.s:516    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccb0q6Ap.s:523    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccb0q6Ap.s:653    .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccb0q6Ap.s:728    .text.main:0000000000000000 $t
     /tmp/ccb0q6Ap.s:735    .text.main:0000000000000000 main
     /tmp/ccb0q6Ap.s:1325   .text.main:000000000000032c $d
                            *COM*:0000000000000048 htim1
     /tmp/ccb0q6Ap.s:1350   .text.main:0000000000000388 $t
     /tmp/ccb0q6Ap.s:1610   .text.main:0000000000000520 $d
     /tmp/ccb0q6Ap.s:1635   .bss.buf:0000000000000000 buf
     /tmp/ccb0q6Ap.s:1631   .bss.buf:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_SPI_Init
HAL_I2C_Init
HAL_UART_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_FATFS_Init
MX_USB_DEVICE_Init
HAL_TIM_Base_Start
strlen
HAL_UART_Transmit
HAL_Delay
f_mount
sprintf
f_getfree
f_open
f_gets
f_close
ARM GAS  /tmp/ccb0q6Ap.s 			page 53


f_write
ArduCAM_CS_init
CS_LOW
HAL_SPI_Transmit
HAL_SPI_Receive
CS_HIGH
sensor_model
wrSensorReg8_8
rdSensorReg8_8
rdSensorReg16_8
ArduCAM_Init
OV2640_set_JPEG_size
flush_fifo
clear_fifo_flag
start_capture
get_bit
read_fifo_length
HAL_GPIO_TogglePin
sensor_addr
